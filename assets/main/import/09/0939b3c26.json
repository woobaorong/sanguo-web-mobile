[1,["58AupYL0NOBaiMP8t4O3nR","caovlRN21PFKgJjIFrvvv6@f9941","50e9xq0TBESoVNGwpD2xFo@f9941","7dj5uJT9FMn6OrOOx83tfK@f9941","dc/k5I6opJl4388uRmmcrK@f9941","bbjygcxQZN0aHpWAEVvqIT@f9941","c9bBEZ68lL2rNb4XDjQjAk@f9941","f1KiPEuSRDIqJgPZgkKPHo@f9941","35CG5iqaVG2q3dmaZyqtPy@f9941","45go8ltQ1MUqWR4ZSRpiuM@f9941","d1cVhdFfNJFpAuBpwPfzaG@f9941","0d7fJ61xJNAZym4MlTfh7e@f9941","ef6OKj6s5Ce7Txy4qTfsd9","12Y9dMgWdJKJGmTiZyQR9H@2e76e","d4GU47bbhG6ZJPEUgTVESb@f9941","b7MFJ8MjNBwqr3fNq1j5dJ@f9941","65yWne5rxPDJRT4WF2DQ1J@f9941","20g1ukYUVPvKWKBRznAKo+@f9941","54TknWPwVPqJqeCR+Y/Czo@f9941","95EkngnxZFbYuFpsqVTaFr@f9941","57UgcWSMhKGYrPQcn4d3+w@f9941","1dDwXDNKhN3oIV5xtC2/15@f9941","8ePKs3HnlHq7HwGQ8zgX+l@6c48a","b1Me86URVHcaLcv1NONGep","0d7fJ61xJNAZym4MlTfh7e@6c48a","44z3wnT0lKkIwbh8DL0LbW@6c48a","45go8ltQ1MUqWR4ZSRpiuM@6c48a","50e9xq0TBESoVNGwpD2xFo@6c48a","bbjygcxQZN0aHpWAEVvqIT@6c48a","d1cVhdFfNJFpAuBpwPfzaG@6c48a","44KPziccxEv6JQk5LIQIaA","0dss2Q+TZJKYdy6drgyROw","d9uI4TludOYaov8HLymy9i@9a84c","7freukiatKKoRRN4+Od/3a","baIUdvKGZPgZxNbjWTFuRI","efLM/mh5lOj7Vg7EU4I+qs","5fxY4YQhRK0asr3d0tdebX@f9941","44z3wnT0lKkIwbh8DL0LbW@f9941","96Dud8YWpH+4HTVpoGQhQJ","f1KiPEuSRDIqJgPZgkKPHo@6c48a"],["node","_spriteFrame","_font","_target","_normalSprite","_parent","_userDefinedFont","_textureSource","_checkMark","_content","_mesh","_customMaterial","_effectAsset","_hoverSprite","_pressedSprite","_disabledSprite","mainTexture","_cameraComponent","scene","mapData","_material"],[["cc.Node",["_name","_objFlags","_layer","_id","_active","_components","_parent","_lpos","_children","_lrot","_lscale","_euler"],-2,9,1,5,2,5,5,5],["cc.Label",["_string","_actualFontSize","_isSystemFontUsed","_fontSize","_overflow","_lineHeight","_enableWrapText","_isBold","_horizontalAlign","node","__prefab","_font","_color"],-6,1,4,6,5],["cc.Widget",["_alignFlags","_left","_bottom","_right","_top","_originalHeight","_horizontalCenter","_originalWidth","_verticalCenter","node","__prefab","_target"],-6,1,4,1],["cc.Sprite",["_sizeMode","_type","_enabled","_name","_fillType","node","__prefab","_spriteFrame","_color","_fillCenter","_customMaterial"],-2,1,4,6,5,5,6],["cc.Button",["_transition","_enabled","node","__prefab","_normalColor","_target","_normalSprite","clickEvents","_disabledColor","_hoverSprite","_pressedSprite","_disabledSprite"],1,1,4,5,1,6,9,5,6,6,6],"cc.SpriteFrame",["cc.UITransform",["_name","node","__prefab","_contentSize","_anchorPoint"],2,1,4,5,5],["cc.Node",["_name","_objFlags","_layer","_id","_active","_parent","_components","_lpos","_lrot","_euler"],-2,1,12,5,5,5],["cc.RichText",["_string","_maxWidth","_isSystemFontUsed","_horizontalAlign","_verticalAlign","_fontSize","node","_font","_userDefinedFont","__prefab"],-3,1,6,6,4],["cc.Toggle",["_isChecked","node","__prefab","_normalColor","_target","_checkMark","_normalSprite"],2,1,4,5,1,1,6],["cc.Mask",["_type","_inverted","node","__prefab"],1,1,4],["cc.MeshRenderer",["_name","node","__prefab","_materials","lightmapSettings","_mesh"],2,1,4,3,4,6],["cc.Camera",["_visibility","_projection","_priority","_orthoHeight","_far","_clearFlags","node","_color","__prefab"],-3,1,5,4],["cc.Material",["_name","_states","_defines","_props"],0,12],["cc.Material",["_name","_props","_states","_defines"],-1],["cc.EffectAsset",["_name","shaders","techniques"],0],["cc.Mesh",["_native","_hash","_struct"],1,11],["cc.SceneAsset",["_name"],2],["cc.CompPrefabInfo",["fileId"],2],["cc.Canvas",["node","__prefab","_cameraComponent"],3,1,4,1],["31a4ckJ6dVL+71DCzcokiBL",["node"],3,1],["b157a9SKJlJP6uKxu4WaAO/",["node"],3,1],["112efbsavxHt4x/S3z8KvCo",["node"],3,1],["9b32bJac95KYqH+XXM1EC4D",["node"],3,1],["f20fd898CZD3aAk7QWlvUUN",["node"],3,1],["d0a193veX5KUJlB76XpF002",["node"],3,1],["c58005x9MhMOKjSx/GDWT6b",["node"],3,1],["2d389DbUWFMUKLvkpe+51LN",["node"],3,1],["8912bcg9PBJyYlAycwLwv0w",["node"],3,1],["5cd53D0wb5NPodxqZn6XS5v",["node"],3,1],["18137p961RA27TiH0ZL1yzM",["node"],3,1],["2dd73lMiApGSK3B1AWboSez",["node"],3,1],["4e9096uXFFNuJEvIOJ7y0ad",["node"],3,1],["6f236v0G05GB7naLocyJIPj",["node"],3,1],["d4547TMjx9Jz4q5XMOHQkvb",["node"],3,1],["5dea3wwHd1GWqnGFgUZeypu",["node"],3,1],["2baa8Q+vD9EWKIkELQS5elf",["node"],3,1],["64ebfBjuHFKhq/fkgDxdrxl",["node"],3,1],["a305chztDJCIZvvkEe271W/",["node"],3,1],["cc.ToggleContainer",["node","__prefab"],3,1,4],["cc.Scene",["_name","_children","_prefab","_globals"],2,12,4,4],["cc.PrefabInfo",["fileId"],2],["cc.SceneGlobals",["ambient","shadows","_skybox","fog","octree"],3,4,4,4,4,4],["cc.AmbientInfo",["_skyIllumLDR","_skyColorHDR","_skyColorLDR"],2,5,5],["cc.ShadowsInfo",["_shadowColor","_size"],3,5,5],["cc.SkyboxInfo",[],3],["cc.FogInfo",["_fogColor"],3,5],["cc.OctreeInfo",[],3],["cc.ClickEvent",["_componentId","handler","target"],1,1],["5dbdbN8a8hFNYCmfGG25SMP",["node"],3,1],["cc.ScrollView",["bounceDuration","brake","horizontal","node","__prefab","_content"],0,1,4,1],["afe19ngImpPT61GmFSB4MTr",["node"],3,1],["cc.ModelLightmapSettings",[],3],["cc.BoxCollider",["node","_size","_material"],3,1,5,6],["cc.DirectionalLight",["_illuminanceHDR","_illuminanceLDR","_shadowBias","_shadowDistance","_csmLevel","_shadowNear","_shadowFar","node","_staticSettings"],-4,1,4],["cc.StaticLightSettings",[],3],["fed27PBaCBIWIfb0JlAX9K3",["node","mapData"],3,1,6],["cc.UICoordinateTracker",["_useScale","node","_target","_camera"],2,1,1,1]],[[18,0,2],[6,1,2,3,1],[0,0,1,2,6,5,4],[0,0,1,2,6,8,5,7,4],[0,0,1,2,6,5,7,4],[1,0,1,3,2,9,10,11,5],[3,1,0,5,6,8,7,3],[3,0,5,6,7,2],[3,0,5,6,8,7,2],[6,1,3,1],[0,0,1,6,8,5,7,3],[6,1,2,1],[48,0,1,2,3],[4,0,2,3,7,4,5,6,2],[4,0,2,3,4,8,5,6,2],[49,0,1],[1,0,1,5,4,6,2,9,10,12,11,7],[3,1,0,5,6,7,3],[0,0,1,4,2,6,8,5,5],[4,2,3,4,5,6,1],[0,0,1,2,8,5,4],[0,0,1,2,5,4],[1,0,1,3,4,6,9,10,6],[6,1,2,3,4,1],[1,0,1,4,6,2,9,10,11,6],[2,0,4,9,10,3],[2,0,2,6,9,10,4],[0,0,1,2,8,5,7,4],[0,0,1,2,6,8,5,4],[4,2,3,4,5,1],[1,0,1,3,4,6,2,9,10,12,11,7],[1,0,1,2,9,10,12,11,4],[6,0,1,2,3,2],[1,0,1,3,5,2,9,10,11,6],[0,0,2,8,5,3],[0,0,2,6,5,3],[7,0,1,4,2,5,6,5],[3,1,0,5,7,3],[4,0,2,3,4,5,6,2],[9,0,1,2,3,4,5,6,2],[1,0,1,3,5,2,7,9,10,11,7],[8,0,4,5,1,2,6,7,8,6],[0,0,1,4,2,6,8,5,7,5],[0,0,2,6,8,5,7,3],[2,0,1,4,9,10,4],[2,0,1,2,6,9,10,11,5],[3,3,5,6,2],[1,0,1,3,5,4,6,2,9,10,11,8],[1,0,1,3,2,9,10,12,11,5],[1,0,1,5,4,6,2,9,10,11,7],[6,1,1],[2,0,1,3,4,9,10,5],[2,0,1,3,7,9,10,5],[3,0,5,6,8,10,7,2],[10,2,3,1],[50,0,1,2,3,4,5,4],[52,1],[15,0,1,2,4],[0,0,1,3,6,4],[0,0,2,6,8,5,3],[0,0,2,6,5,7,3],[0,0,1,3,6,5,4],[7,0,1,2,5,6,4],[2,0,8,9,10,3],[2,0,3,2,9,10,4],[2,0,1,4,2,5,9,10,11,6],[2,0,2,9,10,11,3],[3,2,1,0,5,6,8,7,4],[3,2,0,5,6,7,3],[3,3,0,5,6,3],[4,1,2,3,4,5,6,2],[4,0,2,3,7,4,5,6,9,10,11,2],[4,0,2,3,7,4,8,5,6,2],[39,0,1,1],[9,1,2,3,4,5,6,1],[1,0,8,1,3,5,4,2,9,10,12,11,8],[11,0,1,2,3,4,5,2],[8,0,3,1,2,6,7,8,5],[13,0,1,2,3,4],[14,0,1,2,3,5],[16,0,1,2,3],[17,0,2],[0,0,1,2,3,8,5,7,5],[0,0,1,3,6,5,7,9,10,11,4],[0,0,1,4,2,6,5,5],[0,0,1,3,6,5,7,9,11,4],[0,0,1,3,6,5,7,10,4],[0,0,1,4,3,6,5,7,9,10,11,5],[0,0,1,6,5,3],[7,0,1,3,5,6,7,8,9,4],[7,0,1,2,5,6,7,4],[19,0,1,2,1],[2,0,1,3,9,10,4],[2,0,9,10,2],[2,0,3,5,9,10,4],[2,0,7,5,9,4],[2,0,2,9,10,3],[20,0,1],[21,0,1],[22,0,1],[23,0,1],[24,0,1],[25,0,1],[26,0,1],[27,0,1],[28,0,1],[29,0,1],[30,0,1],[31,0,1],[32,0,1],[33,0,1],[34,0,1],[35,0,1],[36,0,1],[37,0,1],[38,0,1],[3,2,1,0,5,6,7,4],[3,2,0,5,6,8,7,3],[3,1,4,0,5,6,8,9,7,4],[3,0,5,6,2],[4,2,3,6,1],[40,0,1,2,3,2],[41,0,2],[42,0,1,2,3,4,1],[43,0,1,2,2],[44,0,1,1],[45,1],[46,0,1],[47,1],[10,0,1,2,3,3],[1,0,1,3,5,2,9,10,12,11,6],[1,0,1,2,9,11,4],[1,0,1,2,9,10,11,4],[1,0,1,4,2,9,10,12,11,5],[1,0,1,9,3],[1,0,1,3,5,4,2,9,10,11,7],[51,0,1],[11,1,2,3,4,5,1],[53,0,1,2,1],[8,0,3,1,2,6,9,7,8,5],[54,0,1,2,3,4,5,6,7,8,8],[55,1],[12,0,6,7,2],[12,1,2,3,4,5,0,6,8,7,7],[56,0,1,1],[57,0,1,2,3,2]],[[[[78,"land_material",[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{}],[[[{},"color1",8,[4,4278413348],"color2",8,[4,4280656531],"color3",8,[4,4286479998],"color4",8,[4,4285705139],"color5",8,[4,3473757039],"mainTexture",6,0]],11]]],0,0,[0,0],[16,12],[22,23]],[[{"name":"yuan","rect":{"x":0,"y":0,"width":147,"height":147},"offset":{"x":0,"y":0},"originalSize":{"width":147,"height":147},"rotated":false,"capInsets":[0,0,0,0],"vertices":{"rawPosition":[-73.5,-73.5,0,73.5,-73.5,0,-73.5,73.5,0,73.5,73.5,0],"indexes":[0,1,2,2,1,3],"uv":[0,147,147,147,0,0,147,0],"nuv":[0,0,1,0,0,1,1,1],"minPos":{"x":-73.5,"y":-73.5,"z":0},"maxPos":{"x":73.5,"y":73.5,"z":0}},"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[5],0,[0],[7],[24]],[[{"name":"toast2","rect":{"x":0,"y":0,"width":1922,"height":301},"offset":{"x":0,"y":0},"originalSize":{"width":1922,"height":301},"rotated":false,"capInsets":[0,0,0,0],"vertices":{"rawPosition":[-961,-150.5,0,961,-150.5,0,-961,150.5,0,961,150.5,0],"indexes":[0,1,2,2,1,3],"uv":[0,301,1922,301,0,0,1922,0],"nuv":[0,0,1,0,0,1,1,1],"minPos":{"x":-961,"y":-150.5,"z":0},"maxPos":{"x":961,"y":150.5,"z":0}},"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[5],0,[0],[7],[25]],[[{"name":"default_radio_button_on","rect":{"x":1,"y":1,"width":30,"height":30},"offset":{"x":0,"y":0},"originalSize":{"width":32,"height":32},"rotated":false,"capInsets":[0,0,0,0],"vertices":{"rawPosition":[-15,-15,0,15,-15,0,-15,15,0,15,15,0],"indexes":[0,1,2,2,1,3],"uv":[1,31,31,31,1,1,31,1],"nuv":[0.03125,0.03125,0.96875,0.03125,0.03125,0.96875,0.96875,0.96875],"minPos":{"x":-15,"y":-15,"z":0},"maxPos":{"x":15,"y":15,"z":0}},"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[5],0,[0],[7],[26]],[[{"name":"image_2","rect":{"x":0,"y":0,"width":194,"height":61},"offset":{"x":0,"y":0},"originalSize":{"width":194,"height":61},"rotated":false,"capInsets":[8,8,8,8],"vertices":{"rawPosition":[-97,-30.5,0,97,-30.5,0,-97,30.5,0,97,30.5,0],"indexes":[0,1,2,2,1,3],"uv":[0,61,194,61,0,0,194,0],"nuv":[0,0,1,0,0,1,1,1],"minPos":{"x":-97,"y":-30.5,"z":0},"maxPos":{"x":97,"y":30.5,"z":0}},"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[5],0,[0],[7],[27]],[[[57,"select_pos_effect",[{"hash":1523640920,"name":"select_pos_effect|legacy/main-functions/general-vs:vert|unlit-fs:frag","blocks":[{"name":"Constant","stageFlags":16,"binding":0,"members":[{"name":"mainColor","type":16,"count":1}],"defines":[]}],"samplerTextures":[{"name":"mainTexture","type":28,"count":1,"stageFlags":16,"binding":1,"defines":[]}],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[],"attributes":[{"name":"a_position","format":32,"location":0,"defines":[]},{"name":"a_normal","format":32,"location":1,"defines":[]},{"name":"a_texCoord","format":21,"location":2,"defines":[]},{"name":"a_tangent","format":44,"location":3,"defines":[]},{"name":"a_joints","location":4,"defines":["CC_USE_SKINNING"]},{"name":"a_weights","format":44,"location":5,"defines":["CC_USE_SKINNING"]},{"name":"a_jointAnimInfo","format":44,"isInstanced":true,"location":6,"defines":["USE_INSTANCING","CC_USE_BAKED_ANIMATION"]},{"name":"a_matWorld0","format":44,"isInstanced":true,"location":7,"defines":["USE_INSTANCING"]},{"name":"a_matWorld1","format":44,"isInstanced":true,"location":8,"defines":["USE_INSTANCING"]},{"name":"a_matWorld2","format":44,"isInstanced":true,"location":9,"defines":["USE_INSTANCING"]},{"name":"a_lightingMapUVParam","format":44,"isInstanced":true,"location":10,"defines":["USE_INSTANCING","CC_USE_LIGHTMAP"]},{"name":"a_localShadowBias","format":21,"isInstanced":true,"location":11,"defines":["USE_INSTANCING","CC_RECEIVE_SHADOW"]},{"name":"a_dyn_batch_id","format":11,"location":12,"defines":["!USE_INSTANCING","USE_BATCHING"]},{"name":"a_vertexId","format":11,"location":13,"defines":["CC_USE_MORPH"]},{"name":"a_color","format":44,"location":14,"defines":[]},{"name":"a_texCoord1","format":21,"location":15,"defines":["HAS_SECOND_UV"]}],"fragColors":[{"name":"cc_FragColor","typename":"vec4","type":16,"count":1,"stageFlags":16,"location":0,"defines":[]}],"glsl3":{"vert":"\nprecision highp float;\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183f\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\nhighp float decode32 (highp vec4 rgba) {\n  rgba = rgba * 255.0;\n  highp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\n  highp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\n  highp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\n  return Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\n  highp vec4 position;\n  vec3 normal;\n  vec4 tangent;\n};\nin vec3 a_position;\nin vec3 a_normal;\nin vec2 a_texCoord;\nin vec4 a_tangent;\n#if CC_USE_SKINNING\n    in vec4 a_joints;\n  in vec4 a_weights;\n#endif\n#if USE_INSTANCING\n  #if CC_USE_BAKED_ANIMATION\n    in highp vec4 a_jointAnimInfo;\n  #endif\n  in vec4 a_matWorld0;\n  in vec4 a_matWorld1;\n  in vec4 a_matWorld2;\n  #if CC_USE_LIGHTMAP\n    in vec4 a_lightingMapUVParam;\n  #endif\n  #if CC_RECEIVE_SHADOW\n    in vec2 a_localShadowBias;\n  #endif\n#elif USE_BATCHING\n  in float a_dyn_batch_id;\n#endif\n#if CC_USE_MORPH\n    in float a_vertexId;\n    int getVertexId() {\n      return int(a_vertexId);\n    }\n#endif\n#if CC_USE_MORPH\n  layout(std140) uniform CCMorph {\n    vec4 cc_displacementWeights[15];\n    vec4 cc_displacementTextureInfo;\n  };\n  #if CC_MORPH_TARGET_HAS_POSITION\n    uniform sampler2D cc_PositionDisplacements;\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n    uniform sampler2D cc_NormalDisplacements;\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n    uniform sampler2D cc_TangentDisplacements;\n  #endif\n  vec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\n    float pixelIndexF = float(pixelIndex);\n    float x = mod(pixelIndexF, textureResolution.x);\n    float y = floor(pixelIndexF / textureResolution.x);\n    return vec2(x, y);\n  }\n  vec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\n    return (vec2(location.x, location.y) + .5) / textureResolution;\n  }\n  #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n      vec4 fetchVec3ArrayFromTexture(sampler2D tex, int pixelIndex) {\n        ivec2 texSize = textureSize(tex, 0);\n        return texelFetch(tex, ivec2(pixelIndex % texSize.x, pixelIndex / texSize.x), 0);\n      }\n  #else\n    vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\n      int pixelIndex = elementIndex * 4;\n      vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\n      vec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\n      vec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\n      vec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\n      return vec4(\n        decode32(texture(tex, x)),\n        decode32(texture(tex, y)),\n        decode32(texture(tex, z)),\n        1.0\n      );\n    }\n  #endif\n  float getDisplacementWeight(int index) {\n    int quot = index / 4;\n    int remainder = index - quot * 4;\n    if (remainder == 0) {\n      return cc_displacementWeights[quot].x;\n    } else if (remainder == 1) {\n      return cc_displacementWeights[quot].y;\n    } else if (remainder == 2) {\n      return cc_displacementWeights[quot].z;\n    } else {\n      return cc_displacementWeights[quot].w;\n    }\n  }\n  vec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n  #if CC_MORPH_PRECOMPUTED\n    return fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n  #else\n    vec3 result = vec3(0, 0, 0);\n    int nVertices = int(cc_displacementTextureInfo.z);\n    for (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\n      result += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n    }\n    return result;\n  #endif\n  }\n  #if CC_MORPH_TARGET_HAS_POSITION\n  vec3 getPositionDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n  }\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n  vec3 getNormalDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n  }\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n  vec3 getTangentDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n  }\n  #endif\n  void applyMorph (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\n    int vertexId = getVertexId();\n  #if CC_MORPH_TARGET_HAS_POSITION\n    position.xyz = position.xyz + getPositionDisplacement(vertexId);\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n    normal.xyz = normal.xyz + getNormalDisplacement(vertexId);\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n    tangent.xyz = tangent.xyz + getTangentDisplacement(vertexId);\n  #endif\n  }\n  void applyMorph (inout vec4 position) {\n  #if CC_MORPH_TARGET_HAS_POSITION\n    position.xyz = position.xyz + getPositionDisplacement(getVertexId());\n  #endif\n  }\n#endif\n#if CC_USE_SKINNING\n  #if CC_USE_BAKED_ANIMATION\n    layout(std140) uniform CCSkinningTexture {\n      highp vec4 cc_jointTextureInfo;\n    };\n    layout(std140) uniform CCSkinningAnimation {\n      highp vec4 cc_jointAnimInfo;\n    };\n    uniform highp sampler2D cc_jointTexture;\n    void CCGetJointTextureCoords(float pixelsPerJoint, float jointIdx, out highp float x, out highp float y, out highp float invSize)\n    {\n      #if USE_INSTANCING\n        highp float temp = pixelsPerJoint * (a_jointAnimInfo.x * a_jointAnimInfo.y + jointIdx) + a_jointAnimInfo.z;\n      #else\n        highp float temp = pixelsPerJoint * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + jointIdx) + cc_jointTextureInfo.z;\n      #endif\n      invSize = cc_jointTextureInfo.w;\n      highp float tempY = floor(temp * invSize);\n      x = floor(temp - tempY * cc_jointTextureInfo.x);\n      y = (tempY + 0.5) * invSize;\n    }\n  #else\n    #if CC_USE_REAL_TIME_JOINT_TEXTURE\n      uniform highp sampler2D cc_realtimeJoint;\n    #else\n      layout(std140) uniform CCSkinning {\n        highp vec4 cc_joints[CC_JOINT_UNIFORM_CAPACITY * 3];\n      };\n    #endif\n  #endif\n  #if CC_USE_BAKED_ANIMATION\n    #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n      mat4 getJointMatrix (float i) {\n        highp float x, y, invSize;\n        CCGetJointTextureCoords(3.0, i, x, y, invSize);\n        vec4 v1 = texture(cc_jointTexture, vec2((x + 0.5) * invSize, y));\n        vec4 v2 = texture(cc_jointTexture, vec2((x + 1.5) * invSize, y));\n        vec4 v3 = texture(cc_jointTexture, vec2((x + 2.5) * invSize, y));\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #else\n      mat4 getJointMatrix (float i) {\n        highp float x, y, invSize;\n        CCGetJointTextureCoords(12.0, i, x, y, invSize);\n        vec4 v1 = vec4(\n          decode32(texture(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n        );\n        vec4 v2 = vec4(\n          decode32(texture(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n        );\n        vec4 v3 = vec4(\n          decode32(texture(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n        );\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #endif\n  #else\n    #if CC_USE_REAL_TIME_JOINT_TEXTURE\n      #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n        mat4 getJointMatrix (float i) {\n          float x = i;\n          vec4 v1 = texture(cc_realtimeJoint, vec2( x / 256.0, 0.5 / 3.0));\n          vec4 v2 = texture(cc_realtimeJoint, vec2( x / 256.0, 1.5 / 3.0));\n          vec4 v3 = texture(cc_realtimeJoint, vec2( x / 256.0, 2.5 / 3.0));\n          return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n        }\n      #else\n        mat4 getJointMatrix (float i) {\n         float x = 4.0 * i;\n          vec4 v1 = vec4(\n            decode32(texture(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 0.5 / 3.0))),\n            decode32(texture(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 0.5 / 3.0))),\n            decode32(texture(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 0.5 / 3.0))),\n            decode32(texture(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 0.5 / 3.0)))\n          );\n          vec4 v2 = vec4(\n            decode32(texture(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 1.5 / 3.0))),\n            decode32(texture(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 1.5 / 3.0))),\n            decode32(texture(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 1.5 / 3.0))),\n            decode32(texture(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 1.5 / 3.0)))\n          );\n          vec4 v3 = vec4(\n            decode32(texture(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 2.5 / 3.0))),\n            decode32(texture(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 2.5 / 3.0))),\n            decode32(texture(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 2.5 / 3.0))),\n            decode32(texture(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 2.5 / 3.0)))\n          );\n          return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n        }\n      #endif\n    #else\n      mat4 getJointMatrix (float i) {\n        int idx = int(i);\n        vec4 v1 = cc_joints[idx * 3];\n        vec4 v2 = cc_joints[idx * 3 + 1];\n        vec4 v3 = cc_joints[idx * 3 + 2];\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #endif\n  #endif\n  mat4 skinMatrix () {\n    vec4 joints = vec4(a_joints);\n    return getJointMatrix(joints.x) * a_weights.x\n         + getJointMatrix(joints.y) * a_weights.y\n         + getJointMatrix(joints.z) * a_weights.z\n         + getJointMatrix(joints.w) * a_weights.w;\n  }\n  void CCSkin (inout vec4 position) {\n    mat4 m = skinMatrix();\n    position = m * position;\n  }\n  void CCSkin (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\n    mat4 m = skinMatrix();\n    position = m * position;\n    normal = (m * vec4(normal, 0.0)).xyz;\n    tangent.xyz = (m * vec4(tangent.xyz, 0.0)).xyz;\n  }\n#endif\nvoid CCVertInput(inout StandardVertInput In)\n{\n    In.position = vec4(a_position, 1.0);\n    In.normal = a_normal;\n    In.tangent = a_tangent;\n  #if CC_USE_MORPH\n    applyMorph(In.position, In.normal, In.tangent);\n  #endif\n  #if CC_USE_SKINNING\n    CCSkin(In.position, In.normal, In.tangent);\n  #endif\n}\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n  mediump vec4 cc_debug_view_mode;\n  mediump vec4 cc_debug_view_composite_pack_1;\n  mediump vec4 cc_debug_view_composite_pack_2;\n  mediump vec4 cc_debug_view_composite_pack_3;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_surfaceTransform;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\n#if !USE_INSTANCING\n  #if USE_BATCHING\n    layout(std140) uniform CCLocalBatched {\n      highp mat4 cc_matWorlds[10];\n    };\n  #else\n    layout(std140) uniform CCLocal {\n      highp mat4 cc_matWorld;\n      highp mat4 cc_matWorldIT;\n      highp vec4 cc_lightingMapUVParam;\n      highp vec4 cc_localShadowBias;\n    };\n  #endif\n#endif\nvoid CCGetWorldMatrixFull(out mat4 matWorld, out mat4 matWorldIT)\n{\n  #if USE_INSTANCING\n    matWorld = mat4(\n      vec4(a_matWorld0.xyz, 0.0),\n      vec4(a_matWorld1.xyz, 0.0),\n      vec4(a_matWorld2.xyz, 0.0),\n      vec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n    );\n    matWorldIT = matWorld;\n  #elif USE_BATCHING\n    matWorld = cc_matWorlds[int(a_dyn_batch_id)];\n    matWorldIT = matWorld;\n  #else\n    matWorld = cc_matWorld;\n    matWorldIT = cc_matWorldIT;\n  #endif\n}\n#if CC_USE_FOG != 4\n  float LinearFog(vec4 pos, vec3 cameraPos, float fogStart, float fogEnd) {\n      vec4 wPos = pos;\n      float cam_dis = distance(cameraPos, wPos.xyz);\n      return clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n  }\n  float ExpFog(vec4 pos, vec3 cameraPos, float fogStart, float fogDensity, float fogAtten) {\n      vec4 wPos = pos;\n      float cam_dis = max(distance(cameraPos, wPos.xyz) - fogStart, 0.0) / fogAtten * 4.;\n      float f = exp(-cam_dis * fogDensity);\n      return f;\n  }\n  float ExpSquaredFog(vec4 pos, vec3 cameraPos, float fogStart, float fogDensity, float fogAtten) {\n      vec4 wPos = pos;\n      float cam_dis = max(distance(cameraPos, wPos.xyz) - fogStart, 0.0) / fogAtten * 4.;\n      float f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\n      return f;\n  }\n  float LayeredFog(vec4 pos, vec3 cameraPos, float fogTop, float fogRange, float fogAtten) {\n      vec4 wPos = pos;\n      vec3 camWorldProj = cameraPos.xyz;\n      camWorldProj.y = 0.;\n      vec3 worldPosProj = wPos.xyz;\n      worldPosProj.y = 0.;\n      float fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\n      float fDeltaY, fDensityIntegral;\n      if (cameraPos.y > fogTop) {\n          if (wPos.y < fogTop) {\n              fDeltaY = (fogTop - wPos.y) / fogRange * 2.0;\n              fDensityIntegral = fDeltaY * fDeltaY * 0.5;\n          }\n          else {\n              fDeltaY = 0.;\n              fDensityIntegral = 0.;\n          }\n      }\n      else {\n          if (wPos.y < fogTop) {\n              float fDeltaA = (fogTop - cameraPos.y) / fogRange * 2.;\n              float fDeltaB = (fogTop - wPos.y) / fogRange * 2.;\n              fDeltaY = abs(fDeltaA - fDeltaB);\n              fDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n          }\n          else {\n              fDeltaY = abs(fogTop - cameraPos.y) / fogRange * 2.;\n              fDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n          }\n      }\n      float fDensity;\n      if (fDeltaY != 0.) {\n          fDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n      }\n      else {\n          fDensity = 0.;\n      }\n      float f = exp(-fDensity);\n      return f;\n  }\n#endif\nvoid CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)\n{\n#if CC_USE_FOG == 0\n\tfactor = LinearFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.y);\n#elif CC_USE_FOG == 1\n\tfactor = ExpFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.z, cc_fogAdd.z);\n#elif CC_USE_FOG == 2\n\tfactor = ExpSquaredFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.z, cc_fogAdd.z);\n#elif CC_USE_FOG == 3\n\tfactor = LayeredFog(pos, cc_cameraPos.xyz, cc_fogAdd.x, cc_fogAdd.y, cc_fogAdd.z);\n#else\n\tfactor = 1.0;\n#endif\n}\n#if !CC_USE_ACCURATE_FOG\nout float v_fog_factor;\n#endif\nvoid CC_TRANSFER_FOG(vec4 pos) {\n#if !CC_USE_ACCURATE_FOG\n    CC_TRANSFER_FOG_BASE(pos, v_fog_factor);\n#endif\n}\nout highp vec4 v_shadowPos;\nlayout(std140) uniform CCShadow {\n  highp mat4 cc_matLightView;\n  highp mat4 cc_matLightViewProj;\n  highp vec4 cc_shadowInvProjDepthInfo;\n  highp vec4 cc_shadowProjDepthInfo;\n  highp vec4 cc_shadowProjInfo;\n  mediump vec4 cc_shadowNFLSInfo;\n  mediump vec4 cc_shadowWHPBInfo;\n  mediump vec4 cc_shadowLPNNInfo;\n  lowp vec4 cc_shadowColor;\n  mediump vec4 cc_planarNDInfo;\n};\n#if CC_SUPPORT_CASCADED_SHADOW_MAP\n  layout(std140) uniform CCCSM {\n    highp vec4 cc_csmViewDir0[4];\n    highp vec4 cc_csmViewDir1[4];\n    highp vec4 cc_csmViewDir2[4];\n    highp vec4 cc_csmAtlas[4];\n    highp mat4 cc_matCSMViewProj[4];\n    highp vec4 cc_csmProjDepthInfo[4];\n    highp vec4 cc_csmProjInfo[4];\n    highp vec4 cc_csmSplitsInfo;\n  };\n#endif\n#if CC_RECEIVE_SHADOW\n  uniform highp sampler2D cc_shadowMap;\n  uniform highp sampler2D cc_spotShadowMap;\n  #if CC_SUPPORT_CASCADED_SHADOW_MAP\n  #else\n  #endif\n#endif\n#if CC_RECEIVE_SHADOW\n#endif\nin vec4 a_color;\n#if HAS_SECOND_UV\n  in vec2 a_texCoord1;\n#endif\nout vec3 v_position;\nout vec3 v_normal;\nout vec3 v_tangent;\nout vec3 v_bitangent;\nout vec2 v_uv;\nout vec2 v_uv1;\nout vec4 v_color;\nvec4 vert () {\n  StandardVertInput In;\n  CCVertInput(In);\n  mat4 matWorld, matWorldIT;\n  CCGetWorldMatrixFull(matWorld, matWorldIT);\n  vec4 pos = matWorld * In.position;\n  v_position = pos.xyz;\n  v_normal = normalize((matWorldIT * vec4(In.normal, 0.0)).xyz);\n  v_tangent = normalize((matWorld * vec4(In.tangent.xyz, 0.0)).xyz);\n  v_bitangent = cross(v_normal, v_tangent) * In.tangent.w;\n  v_uv = a_texCoord;\n  #if HAS_SECOND_UV\n    v_uv1 = a_texCoord1;\n  #endif\n  v_color = a_color;\n  CC_TRANSFER_FOG(pos);\n  v_shadowPos = cc_matLightViewProj * pos;\n  return cc_matProj * (cc_matView * matWorld) * In.position;\n}\nvoid main() { gl_Position = vert(); }","frag":"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n  mediump vec4 cc_debug_view_mode;\n  mediump vec4 cc_debug_view_composite_pack_1;\n  mediump vec4 cc_debug_view_composite_pack_2;\n  mediump vec4 cc_debug_view_composite_pack_3;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_surfaceTransform;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\n#define CC_SURFACES_DEBUG_VIEW_VERTEX_COLOR 1\n#define CC_SURFACES_DEBUG_VIEW_VERTEX_NORMAL CC_SURFACES_DEBUG_VIEW_VERTEX_COLOR + 1\n#define CC_SURFACES_DEBUG_VIEW_VERTEX_TANGENT CC_SURFACES_DEBUG_VIEW_VERTEX_NORMAL + 1\n#define CC_SURFACES_DEBUG_VIEW_WORLD_POS CC_SURFACES_DEBUG_VIEW_VERTEX_TANGENT + 1\n#define CC_SURFACES_DEBUG_VIEW_VERTEX_MIRROR CC_SURFACES_DEBUG_VIEW_WORLD_POS + 1\n#define CC_SURFACES_DEBUG_VIEW_FACE_SIDE CC_SURFACES_DEBUG_VIEW_VERTEX_MIRROR + 1\n#define CC_SURFACES_DEBUG_VIEW_UV0 CC_SURFACES_DEBUG_VIEW_FACE_SIDE + 1\n#define CC_SURFACES_DEBUG_VIEW_UV1 CC_SURFACES_DEBUG_VIEW_UV0 + 1\n#define CC_SURFACES_DEBUG_VIEW_UVLIGHTMAP CC_SURFACES_DEBUG_VIEW_UV1 + 1\n#define CC_SURFACES_DEBUG_VIEW_PROJ_DEPTH CC_SURFACES_DEBUG_VIEW_UVLIGHTMAP + 1\n#define CC_SURFACES_DEBUG_VIEW_LINEAR_DEPTH CC_SURFACES_DEBUG_VIEW_PROJ_DEPTH + 1\n#define CC_SURFACES_DEBUG_VIEW_FRAGMENT_NORMAL CC_SURFACES_DEBUG_VIEW_LINEAR_DEPTH + 1\n#define CC_SURFACES_DEBUG_VIEW_FRAGMENT_TANGENT CC_SURFACES_DEBUG_VIEW_FRAGMENT_NORMAL + 1\n#define CC_SURFACES_DEBUG_VIEW_FRAGMENT_BINORMAL CC_SURFACES_DEBUG_VIEW_FRAGMENT_TANGENT + 1\n#define CC_SURFACES_DEBUG_VIEW_BASE_COLOR CC_SURFACES_DEBUG_VIEW_FRAGMENT_BINORMAL + 1\n#define CC_SURFACES_DEBUG_VIEW_DIFFUSE_COLOR CC_SURFACES_DEBUG_VIEW_BASE_COLOR + 1\n#define CC_SURFACES_DEBUG_VIEW_SPECULAR_COLOR CC_SURFACES_DEBUG_VIEW_DIFFUSE_COLOR + 1\n#define CC_SURFACES_DEBUG_VIEW_TRANSPARENCY CC_SURFACES_DEBUG_VIEW_SPECULAR_COLOR + 1\n#define CC_SURFACES_DEBUG_VIEW_METALLIC CC_SURFACES_DEBUG_VIEW_TRANSPARENCY + 1\n#define CC_SURFACES_DEBUG_VIEW_ROUGHNESS CC_SURFACES_DEBUG_VIEW_METALLIC + 1\n#define CC_SURFACES_DEBUG_VIEW_SPECULAR_INTENSITY CC_SURFACES_DEBUG_VIEW_ROUGHNESS + 1\n#define CC_SURFACES_DEBUG_VIEW_DIRECT_DIFFUSE CC_SURFACES_DEBUG_VIEW_SPECULAR_INTENSITY + 1\n#define CC_SURFACES_DEBUG_VIEW_DIRECT_SPECULAR CC_SURFACES_DEBUG_VIEW_DIRECT_DIFFUSE + 1\n#define CC_SURFACES_DEBUG_VIEW_DIRECT_ALL CC_SURFACES_DEBUG_VIEW_DIRECT_SPECULAR + 1\n#define CC_SURFACES_DEBUG_VIEW_ENV_DIFFUSE CC_SURFACES_DEBUG_VIEW_DIRECT_ALL + 1\n#define CC_SURFACES_DEBUG_VIEW_ENV_SPECULAR CC_SURFACES_DEBUG_VIEW_ENV_DIFFUSE + 1\n#define CC_SURFACES_DEBUG_VIEW_ENV_ALL CC_SURFACES_DEBUG_VIEW_ENV_SPECULAR + 1\n#define CC_SURFACES_DEBUG_VIEW_EMISSIVE CC_SURFACES_DEBUG_VIEW_ENV_ALL + 1\n#define CC_SURFACES_DEBUG_VIEW_LIGHT_MAP CC_SURFACES_DEBUG_VIEW_EMISSIVE + 1\n#define CC_SURFACES_DEBUG_VIEW_SHADOW CC_SURFACES_DEBUG_VIEW_LIGHT_MAP + 1\n#define CC_SURFACES_DEBUG_VIEW_AO CC_SURFACES_DEBUG_VIEW_SHADOW + 1\n#define CC_SURFACES_DEBUG_VIEW_FOG CC_SURFACES_DEBUG_VIEW_AO + 1\n#define CC_SURFACES_DEBUG_VIEW_SINGLE 1\n#define CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC 2\n#define IS_DEBUG_VIEW_LIGHTING_ENABLE_WITH_ALBEDO (cc_debug_view_mode.y > 0.0)\n#define IS_DEBUG_VIEW_MISC_ENABLE_CSM_LAYER_COLORATION (cc_debug_view_mode.z > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_DIRECT_DIFFUSE (cc_debug_view_composite_pack_1.x > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_DIRECT_SPECULAR (cc_debug_view_composite_pack_1.y > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_ENV_DIFFUSE (cc_debug_view_composite_pack_1.z > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_ENV_SPECULAR (cc_debug_view_composite_pack_1.w > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_EMISSIVE (cc_debug_view_composite_pack_2.x > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_LIGHT_MAP (cc_debug_view_composite_pack_2.y > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_SHADOW (cc_debug_view_composite_pack_2.z > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_AO (cc_debug_view_composite_pack_2.w > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_NORMAL_MAP (cc_debug_view_composite_pack_3.x > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_FOG (cc_debug_view_composite_pack_3.y > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_TONE_MAPPING (cc_debug_view_composite_pack_3.z > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_GAMMA_CORRECTION (cc_debug_view_composite_pack_3.w > 0.0)\nvec4 CCFragOutput (vec4 color) {\n  return color;\n}\n#if CC_USE_FOG != 4\n  float LinearFog(vec4 pos, vec3 cameraPos, float fogStart, float fogEnd) {\n      vec4 wPos = pos;\n      float cam_dis = distance(cameraPos, wPos.xyz);\n      return clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n  }\n  float ExpFog(vec4 pos, vec3 cameraPos, float fogStart, float fogDensity, float fogAtten) {\n      vec4 wPos = pos;\n      float cam_dis = max(distance(cameraPos, wPos.xyz) - fogStart, 0.0) / fogAtten * 4.;\n      float f = exp(-cam_dis * fogDensity);\n      return f;\n  }\n  float ExpSquaredFog(vec4 pos, vec3 cameraPos, float fogStart, float fogDensity, float fogAtten) {\n      vec4 wPos = pos;\n      float cam_dis = max(distance(cameraPos, wPos.xyz) - fogStart, 0.0) / fogAtten * 4.;\n      float f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\n      return f;\n  }\n  float LayeredFog(vec4 pos, vec3 cameraPos, float fogTop, float fogRange, float fogAtten) {\n      vec4 wPos = pos;\n      vec3 camWorldProj = cameraPos.xyz;\n      camWorldProj.y = 0.;\n      vec3 worldPosProj = wPos.xyz;\n      worldPosProj.y = 0.;\n      float fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\n      float fDeltaY, fDensityIntegral;\n      if (cameraPos.y > fogTop) {\n          if (wPos.y < fogTop) {\n              fDeltaY = (fogTop - wPos.y) / fogRange * 2.0;\n              fDensityIntegral = fDeltaY * fDeltaY * 0.5;\n          }\n          else {\n              fDeltaY = 0.;\n              fDensityIntegral = 0.;\n          }\n      }\n      else {\n          if (wPos.y < fogTop) {\n              float fDeltaA = (fogTop - cameraPos.y) / fogRange * 2.;\n              float fDeltaB = (fogTop - wPos.y) / fogRange * 2.;\n              fDeltaY = abs(fDeltaA - fDeltaB);\n              fDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n          }\n          else {\n              fDeltaY = abs(fogTop - cameraPos.y) / fogRange * 2.;\n              fDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n          }\n      }\n      float fDensity;\n      if (fDeltaY != 0.) {\n          fDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n      }\n      else {\n          fDensity = 0.;\n      }\n      float f = exp(-fDensity);\n      return f;\n  }\n#endif\nvoid CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)\n{\n#if CC_USE_FOG == 0\n\tfactor = LinearFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.y);\n#elif CC_USE_FOG == 1\n\tfactor = ExpFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.z, cc_fogAdd.z);\n#elif CC_USE_FOG == 2\n\tfactor = ExpSquaredFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.z, cc_fogAdd.z);\n#elif CC_USE_FOG == 3\n\tfactor = LayeredFog(pos, cc_cameraPos.xyz, cc_fogAdd.x, cc_fogAdd.y, cc_fogAdd.z);\n#else\n\tfactor = 1.0;\n#endif\n}\nvoid CC_APPLY_FOG_BASE(inout vec4 color, float factor) {\n\tcolor = vec4(mix(cc_fogColor.rgb, color.rgb, factor), color.a);\n}\n#if !CC_USE_ACCURATE_FOG\nin float v_fog_factor;\n#endif\nvoid CC_APPLY_FOG(inout vec4 color) {\n#if !CC_USE_ACCURATE_FOG\n    CC_APPLY_FOG_BASE(color, v_fog_factor);\n#endif\n}\nvoid CC_APPLY_FOG(inout vec4 color, vec3 worldPos) {\n#if CC_USE_ACCURATE_FOG\n    float factor;\n    CC_TRANSFER_FOG_BASE(vec4(worldPos, 1.0), factor);\n#else\n    float factor = v_fog_factor;\n#endif\n    CC_APPLY_FOG_BASE(color, factor);\n}\nin vec2 v_uv;\nuniform sampler2D mainTexture;\nlayout(std140) uniform Constant {\n  vec4 mainColor;\n};\nvec4 frag () {\n  vec4 col = mainColor * texture(mainTexture, v_uv);\n  CC_APPLY_FOG(col);\n  return CCFragOutput(col);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"},"glsl1":{"vert":"\nprecision highp float;\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183f\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\nhighp float decode32 (highp vec4 rgba) {\n  rgba = rgba * 255.0;\n  highp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\n  highp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\n  highp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\n  return Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\n  highp vec4 position;\n  vec3 normal;\n  vec4 tangent;\n};\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nattribute vec4 a_tangent;\n#if CC_USE_SKINNING\n    attribute vec4 a_joints;\n  attribute vec4 a_weights;\n#endif\n#if USE_INSTANCING\n  #if CC_USE_BAKED_ANIMATION\n    attribute highp vec4 a_jointAnimInfo;\n  #endif\n  attribute vec4 a_matWorld0;\n  attribute vec4 a_matWorld1;\n  attribute vec4 a_matWorld2;\n  #if CC_USE_LIGHTMAP\n    attribute vec4 a_lightingMapUVParam;\n  #endif\n  #if CC_RECEIVE_SHADOW\n    attribute vec2 a_localShadowBias;\n  #endif\n#elif USE_BATCHING\n  attribute float a_dyn_batch_id;\n#endif\n#if CC_USE_MORPH\n    attribute float a_vertexId;\n    int getVertexId() {\n      return int(a_vertexId);\n    }\n#endif\n#if CC_USE_MORPH\n  uniform vec4 cc_displacementWeights[15];\n  uniform vec4 cc_displacementTextureInfo;\n  #if CC_MORPH_TARGET_HAS_POSITION\n    uniform sampler2D cc_PositionDisplacements;\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n    uniform sampler2D cc_NormalDisplacements;\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n    uniform sampler2D cc_TangentDisplacements;\n  #endif\n  vec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\n    float pixelIndexF = float(pixelIndex);\n    float x = mod(pixelIndexF, textureResolution.x);\n    float y = floor(pixelIndexF / textureResolution.x);\n    return vec2(x, y);\n  }\n  vec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\n    return (vec2(location.x, location.y) + .5) / textureResolution;\n  }\n  #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n      vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\n        int pixelIndex = elementIndex;\n        vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\n        vec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);\n        return texture2D(tex, uv);\n      }\n  #else\n    vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\n      int pixelIndex = elementIndex * 4;\n      vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\n      vec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\n      vec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\n      vec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\n      return vec4(\n        decode32(texture2D(tex, x)),\n        decode32(texture2D(tex, y)),\n        decode32(texture2D(tex, z)),\n        1.0\n      );\n    }\n  #endif\n  float getDisplacementWeight(int index) {\n    int quot = index / 4;\n    int remainder = index - quot * 4;\n    if (remainder == 0) {\n      return cc_displacementWeights[quot].x;\n    } else if (remainder == 1) {\n      return cc_displacementWeights[quot].y;\n    } else if (remainder == 2) {\n      return cc_displacementWeights[quot].z;\n    } else {\n      return cc_displacementWeights[quot].w;\n    }\n  }\n  vec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n  #if CC_MORPH_PRECOMPUTED\n    return fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n  #else\n    vec3 result = vec3(0, 0, 0);\n    int nVertices = int(cc_displacementTextureInfo.z);\n    for (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\n      result += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n    }\n    return result;\n  #endif\n  }\n  #if CC_MORPH_TARGET_HAS_POSITION\n  vec3 getPositionDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n  }\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n  vec3 getNormalDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n  }\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n  vec3 getTangentDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n  }\n  #endif\n  void applyMorph (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\n    int vertexId = getVertexId();\n  #if CC_MORPH_TARGET_HAS_POSITION\n    position.xyz = position.xyz + getPositionDisplacement(vertexId);\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n    normal.xyz = normal.xyz + getNormalDisplacement(vertexId);\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n    tangent.xyz = tangent.xyz + getTangentDisplacement(vertexId);\n  #endif\n  }\n  void applyMorph (inout vec4 position) {\n  #if CC_MORPH_TARGET_HAS_POSITION\n    position.xyz = position.xyz + getPositionDisplacement(getVertexId());\n  #endif\n  }\n#endif\n#if CC_USE_SKINNING\n  #if CC_USE_BAKED_ANIMATION\n    uniform highp vec4 cc_jointTextureInfo;\n    uniform highp vec4 cc_jointAnimInfo;\n    uniform highp sampler2D cc_jointTexture;\n    void CCGetJointTextureCoords(float pixelsPerJoint, float jointIdx, out highp float x, out highp float y, out highp float invSize)\n    {\n      #if USE_INSTANCING\n        highp float temp = pixelsPerJoint * (a_jointAnimInfo.x * a_jointAnimInfo.y + jointIdx) + a_jointAnimInfo.z;\n      #else\n        highp float temp = pixelsPerJoint * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + jointIdx) + cc_jointTextureInfo.z;\n      #endif\n      invSize = cc_jointTextureInfo.w;\n      highp float tempY = floor(temp * invSize);\n      x = floor(temp - tempY * cc_jointTextureInfo.x);\n      y = (tempY + 0.5) * invSize;\n    }\n  #else\n    #if CC_USE_REAL_TIME_JOINT_TEXTURE\n      uniform highp sampler2D cc_realtimeJoint;\n    #else\n      uniform highp vec4 cc_joints[CC_JOINT_UNIFORM_CAPACITY * 3];\n    #endif\n  #endif\n  #if CC_USE_BAKED_ANIMATION\n    #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n      mat4 getJointMatrix (float i) {\n        highp float x, y, invSize;\n        CCGetJointTextureCoords(3.0, i, x, y, invSize);\n        vec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));\n        vec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));\n        vec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #else\n      mat4 getJointMatrix (float i) {\n        highp float x, y, invSize;\n        CCGetJointTextureCoords(12.0, i, x, y, invSize);\n        vec4 v1 = vec4(\n          decode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n        );\n        vec4 v2 = vec4(\n          decode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n        );\n        vec4 v3 = vec4(\n          decode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n        );\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #endif\n  #else\n    #if CC_USE_REAL_TIME_JOINT_TEXTURE\n      #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n        mat4 getJointMatrix (float i) {\n          float x = i;\n          vec4 v1 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 0.5 / 3.0));\n          vec4 v2 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 1.5 / 3.0));\n          vec4 v3 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 2.5 / 3.0));\n          return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n        }\n      #else\n        mat4 getJointMatrix (float i) {\n         float x = 4.0 * i;\n          vec4 v1 = vec4(\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 0.5 / 3.0))),\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 0.5 / 3.0))),\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 0.5 / 3.0))),\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 0.5 / 3.0)))\n          );\n          vec4 v2 = vec4(\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 1.5 / 3.0))),\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 1.5 / 3.0))),\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 1.5 / 3.0))),\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 1.5 / 3.0)))\n          );\n          vec4 v3 = vec4(\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 2.5 / 3.0))),\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 2.5 / 3.0))),\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 2.5 / 3.0))),\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 2.5 / 3.0)))\n          );\n          return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n        }\n      #endif\n    #else\n      mat4 getJointMatrix (float i) {\n        int idx = int(i);\n        vec4 v1 = cc_joints[idx * 3];\n        vec4 v2 = cc_joints[idx * 3 + 1];\n        vec4 v3 = cc_joints[idx * 3 + 2];\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #endif\n  #endif\n  mat4 skinMatrix () {\n    vec4 joints = vec4(a_joints);\n    return getJointMatrix(joints.x) * a_weights.x\n         + getJointMatrix(joints.y) * a_weights.y\n         + getJointMatrix(joints.z) * a_weights.z\n         + getJointMatrix(joints.w) * a_weights.w;\n  }\n  void CCSkin (inout vec4 position) {\n    mat4 m = skinMatrix();\n    position = m * position;\n  }\n  void CCSkin (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\n    mat4 m = skinMatrix();\n    position = m * position;\n    normal = (m * vec4(normal, 0.0)).xyz;\n    tangent.xyz = (m * vec4(tangent.xyz, 0.0)).xyz;\n  }\n#endif\nvoid CCVertInput(inout StandardVertInput In)\n{\n    In.position = vec4(a_position, 1.0);\n    In.normal = a_normal;\n    In.tangent = a_tangent;\n  #if CC_USE_MORPH\n    applyMorph(In.position, In.normal, In.tangent);\n  #endif\n  #if CC_USE_SKINNING\n    CCSkin(In.position, In.normal, In.tangent);\n  #endif\n}\nuniform highp mat4 cc_matView;\n  uniform highp mat4 cc_matProj;\n  uniform highp vec4 cc_cameraPos;\n  uniform mediump vec4 cc_fogBase;\n  uniform mediump vec4 cc_fogAdd;\n#if !USE_INSTANCING\n  #if USE_BATCHING\n    uniform highp mat4 cc_matWorlds[10];\n  #else\n    uniform highp mat4 cc_matWorld;\n  uniform highp mat4 cc_matWorldIT;\n  #endif\n#endif\nvoid CCGetWorldMatrixFull(out mat4 matWorld, out mat4 matWorldIT)\n{\n  #if USE_INSTANCING\n    matWorld = mat4(\n      vec4(a_matWorld0.xyz, 0.0),\n      vec4(a_matWorld1.xyz, 0.0),\n      vec4(a_matWorld2.xyz, 0.0),\n      vec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n    );\n    matWorldIT = matWorld;\n  #elif USE_BATCHING\n    matWorld = cc_matWorlds[int(a_dyn_batch_id)];\n    matWorldIT = matWorld;\n  #else\n    matWorld = cc_matWorld;\n    matWorldIT = cc_matWorldIT;\n  #endif\n}\n#if CC_USE_FOG != 4\n  float LinearFog(vec4 pos, vec3 cameraPos, float fogStart, float fogEnd) {\n      vec4 wPos = pos;\n      float cam_dis = distance(cameraPos, wPos.xyz);\n      return clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n  }\n  float ExpFog(vec4 pos, vec3 cameraPos, float fogStart, float fogDensity, float fogAtten) {\n      vec4 wPos = pos;\n      float cam_dis = max(distance(cameraPos, wPos.xyz) - fogStart, 0.0) / fogAtten * 4.;\n      float f = exp(-cam_dis * fogDensity);\n      return f;\n  }\n  float ExpSquaredFog(vec4 pos, vec3 cameraPos, float fogStart, float fogDensity, float fogAtten) {\n      vec4 wPos = pos;\n      float cam_dis = max(distance(cameraPos, wPos.xyz) - fogStart, 0.0) / fogAtten * 4.;\n      float f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\n      return f;\n  }\n  float LayeredFog(vec4 pos, vec3 cameraPos, float fogTop, float fogRange, float fogAtten) {\n      vec4 wPos = pos;\n      vec3 camWorldProj = cameraPos.xyz;\n      camWorldProj.y = 0.;\n      vec3 worldPosProj = wPos.xyz;\n      worldPosProj.y = 0.;\n      float fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\n      float fDeltaY, fDensityIntegral;\n      if (cameraPos.y > fogTop) {\n          if (wPos.y < fogTop) {\n              fDeltaY = (fogTop - wPos.y) / fogRange * 2.0;\n              fDensityIntegral = fDeltaY * fDeltaY * 0.5;\n          }\n          else {\n              fDeltaY = 0.;\n              fDensityIntegral = 0.;\n          }\n      }\n      else {\n          if (wPos.y < fogTop) {\n              float fDeltaA = (fogTop - cameraPos.y) / fogRange * 2.;\n              float fDeltaB = (fogTop - wPos.y) / fogRange * 2.;\n              fDeltaY = abs(fDeltaA - fDeltaB);\n              fDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n          }\n          else {\n              fDeltaY = abs(fogTop - cameraPos.y) / fogRange * 2.;\n              fDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n          }\n      }\n      float fDensity;\n      if (fDeltaY != 0.) {\n          fDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n      }\n      else {\n          fDensity = 0.;\n      }\n      float f = exp(-fDensity);\n      return f;\n  }\n#endif\nvoid CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)\n{\n#if CC_USE_FOG == 0\n\tfactor = LinearFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.y);\n#elif CC_USE_FOG == 1\n\tfactor = ExpFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.z, cc_fogAdd.z);\n#elif CC_USE_FOG == 2\n\tfactor = ExpSquaredFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.z, cc_fogAdd.z);\n#elif CC_USE_FOG == 3\n\tfactor = LayeredFog(pos, cc_cameraPos.xyz, cc_fogAdd.x, cc_fogAdd.y, cc_fogAdd.z);\n#else\n\tfactor = 1.0;\n#endif\n}\n#if !CC_USE_ACCURATE_FOG\nvarying float v_fog_factor;\n#endif\nvoid CC_TRANSFER_FOG(vec4 pos) {\n#if !CC_USE_ACCURATE_FOG\n    CC_TRANSFER_FOG_BASE(pos, v_fog_factor);\n#endif\n}\nvarying highp vec4 v_shadowPos;\nuniform highp mat4 cc_matLightViewProj;\n#if CC_SUPPORT_CASCADED_SHADOW_MAP\n  #endif\n#if CC_RECEIVE_SHADOW\n  uniform highp sampler2D cc_shadowMap;\n  uniform highp sampler2D cc_spotShadowMap;\n  #if CC_SUPPORT_CASCADED_SHADOW_MAP\n  #else\n  #endif\n#endif\n#if CC_RECEIVE_SHADOW\n#endif\nattribute vec4 a_color;\n#if HAS_SECOND_UV\n  attribute vec2 a_texCoord1;\n#endif\nvarying vec3 v_position;\nvarying vec3 v_normal;\nvarying vec3 v_tangent;\nvarying vec3 v_bitangent;\nvarying vec2 v_uv;\nvarying vec2 v_uv1;\nvarying vec4 v_color;\nvec4 vert () {\n  StandardVertInput In;\n  CCVertInput(In);\n  mat4 matWorld, matWorldIT;\n  CCGetWorldMatrixFull(matWorld, matWorldIT);\n  vec4 pos = matWorld * In.position;\n  v_position = pos.xyz;\n  v_normal = normalize((matWorldIT * vec4(In.normal, 0.0)).xyz);\n  v_tangent = normalize((matWorld * vec4(In.tangent.xyz, 0.0)).xyz);\n  v_bitangent = cross(v_normal, v_tangent) * In.tangent.w;\n  v_uv = a_texCoord;\n  #if HAS_SECOND_UV\n    v_uv1 = a_texCoord1;\n  #endif\n  v_color = a_color;\n  CC_TRANSFER_FOG(pos);\n  v_shadowPos = cc_matLightViewProj * pos;\n  return cc_matProj * (cc_matView * matWorld) * In.position;\n}\nvoid main() { gl_Position = vert(); }","frag":"\nprecision highp float;\nuniform mediump vec4 cc_debug_view_mode;\n  uniform mediump vec4 cc_debug_view_composite_pack_1;\n  uniform mediump vec4 cc_debug_view_composite_pack_2;\n  uniform mediump vec4 cc_debug_view_composite_pack_3;\nuniform highp vec4 cc_cameraPos;\n  uniform mediump vec4 cc_fogColor;\n  uniform mediump vec4 cc_fogBase;\n  uniform mediump vec4 cc_fogAdd;\n#define CC_SURFACES_DEBUG_VIEW_VERTEX_COLOR 1\n#define CC_SURFACES_DEBUG_VIEW_VERTEX_NORMAL CC_SURFACES_DEBUG_VIEW_VERTEX_COLOR + 1\n#define CC_SURFACES_DEBUG_VIEW_VERTEX_TANGENT CC_SURFACES_DEBUG_VIEW_VERTEX_NORMAL + 1\n#define CC_SURFACES_DEBUG_VIEW_WORLD_POS CC_SURFACES_DEBUG_VIEW_VERTEX_TANGENT + 1\n#define CC_SURFACES_DEBUG_VIEW_VERTEX_MIRROR CC_SURFACES_DEBUG_VIEW_WORLD_POS + 1\n#define CC_SURFACES_DEBUG_VIEW_FACE_SIDE CC_SURFACES_DEBUG_VIEW_VERTEX_MIRROR + 1\n#define CC_SURFACES_DEBUG_VIEW_UV0 CC_SURFACES_DEBUG_VIEW_FACE_SIDE + 1\n#define CC_SURFACES_DEBUG_VIEW_UV1 CC_SURFACES_DEBUG_VIEW_UV0 + 1\n#define CC_SURFACES_DEBUG_VIEW_UVLIGHTMAP CC_SURFACES_DEBUG_VIEW_UV1 + 1\n#define CC_SURFACES_DEBUG_VIEW_PROJ_DEPTH CC_SURFACES_DEBUG_VIEW_UVLIGHTMAP + 1\n#define CC_SURFACES_DEBUG_VIEW_LINEAR_DEPTH CC_SURFACES_DEBUG_VIEW_PROJ_DEPTH + 1\n#define CC_SURFACES_DEBUG_VIEW_FRAGMENT_NORMAL CC_SURFACES_DEBUG_VIEW_LINEAR_DEPTH + 1\n#define CC_SURFACES_DEBUG_VIEW_FRAGMENT_TANGENT CC_SURFACES_DEBUG_VIEW_FRAGMENT_NORMAL + 1\n#define CC_SURFACES_DEBUG_VIEW_FRAGMENT_BINORMAL CC_SURFACES_DEBUG_VIEW_FRAGMENT_TANGENT + 1\n#define CC_SURFACES_DEBUG_VIEW_BASE_COLOR CC_SURFACES_DEBUG_VIEW_FRAGMENT_BINORMAL + 1\n#define CC_SURFACES_DEBUG_VIEW_DIFFUSE_COLOR CC_SURFACES_DEBUG_VIEW_BASE_COLOR + 1\n#define CC_SURFACES_DEBUG_VIEW_SPECULAR_COLOR CC_SURFACES_DEBUG_VIEW_DIFFUSE_COLOR + 1\n#define CC_SURFACES_DEBUG_VIEW_TRANSPARENCY CC_SURFACES_DEBUG_VIEW_SPECULAR_COLOR + 1\n#define CC_SURFACES_DEBUG_VIEW_METALLIC CC_SURFACES_DEBUG_VIEW_TRANSPARENCY + 1\n#define CC_SURFACES_DEBUG_VIEW_ROUGHNESS CC_SURFACES_DEBUG_VIEW_METALLIC + 1\n#define CC_SURFACES_DEBUG_VIEW_SPECULAR_INTENSITY CC_SURFACES_DEBUG_VIEW_ROUGHNESS + 1\n#define CC_SURFACES_DEBUG_VIEW_DIRECT_DIFFUSE CC_SURFACES_DEBUG_VIEW_SPECULAR_INTENSITY + 1\n#define CC_SURFACES_DEBUG_VIEW_DIRECT_SPECULAR CC_SURFACES_DEBUG_VIEW_DIRECT_DIFFUSE + 1\n#define CC_SURFACES_DEBUG_VIEW_DIRECT_ALL CC_SURFACES_DEBUG_VIEW_DIRECT_SPECULAR + 1\n#define CC_SURFACES_DEBUG_VIEW_ENV_DIFFUSE CC_SURFACES_DEBUG_VIEW_DIRECT_ALL + 1\n#define CC_SURFACES_DEBUG_VIEW_ENV_SPECULAR CC_SURFACES_DEBUG_VIEW_ENV_DIFFUSE + 1\n#define CC_SURFACES_DEBUG_VIEW_ENV_ALL CC_SURFACES_DEBUG_VIEW_ENV_SPECULAR + 1\n#define CC_SURFACES_DEBUG_VIEW_EMISSIVE CC_SURFACES_DEBUG_VIEW_ENV_ALL + 1\n#define CC_SURFACES_DEBUG_VIEW_LIGHT_MAP CC_SURFACES_DEBUG_VIEW_EMISSIVE + 1\n#define CC_SURFACES_DEBUG_VIEW_SHADOW CC_SURFACES_DEBUG_VIEW_LIGHT_MAP + 1\n#define CC_SURFACES_DEBUG_VIEW_AO CC_SURFACES_DEBUG_VIEW_SHADOW + 1\n#define CC_SURFACES_DEBUG_VIEW_FOG CC_SURFACES_DEBUG_VIEW_AO + 1\n#define CC_SURFACES_DEBUG_VIEW_SINGLE 1\n#define CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC 2\n#define IS_DEBUG_VIEW_LIGHTING_ENABLE_WITH_ALBEDO (cc_debug_view_mode.y > 0.0)\n#define IS_DEBUG_VIEW_MISC_ENABLE_CSM_LAYER_COLORATION (cc_debug_view_mode.z > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_DIRECT_DIFFUSE (cc_debug_view_composite_pack_1.x > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_DIRECT_SPECULAR (cc_debug_view_composite_pack_1.y > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_ENV_DIFFUSE (cc_debug_view_composite_pack_1.z > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_ENV_SPECULAR (cc_debug_view_composite_pack_1.w > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_EMISSIVE (cc_debug_view_composite_pack_2.x > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_LIGHT_MAP (cc_debug_view_composite_pack_2.y > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_SHADOW (cc_debug_view_composite_pack_2.z > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_AO (cc_debug_view_composite_pack_2.w > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_NORMAL_MAP (cc_debug_view_composite_pack_3.x > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_FOG (cc_debug_view_composite_pack_3.y > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_TONE_MAPPING (cc_debug_view_composite_pack_3.z > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_GAMMA_CORRECTION (cc_debug_view_composite_pack_3.w > 0.0)\nvec4 CCFragOutput (vec4 color) {\n  return color;\n}\n#if CC_USE_FOG != 4\n  float LinearFog(vec4 pos, vec3 cameraPos, float fogStart, float fogEnd) {\n      vec4 wPos = pos;\n      float cam_dis = distance(cameraPos, wPos.xyz);\n      return clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n  }\n  float ExpFog(vec4 pos, vec3 cameraPos, float fogStart, float fogDensity, float fogAtten) {\n      vec4 wPos = pos;\n      float cam_dis = max(distance(cameraPos, wPos.xyz) - fogStart, 0.0) / fogAtten * 4.;\n      float f = exp(-cam_dis * fogDensity);\n      return f;\n  }\n  float ExpSquaredFog(vec4 pos, vec3 cameraPos, float fogStart, float fogDensity, float fogAtten) {\n      vec4 wPos = pos;\n      float cam_dis = max(distance(cameraPos, wPos.xyz) - fogStart, 0.0) / fogAtten * 4.;\n      float f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\n      return f;\n  }\n  float LayeredFog(vec4 pos, vec3 cameraPos, float fogTop, float fogRange, float fogAtten) {\n      vec4 wPos = pos;\n      vec3 camWorldProj = cameraPos.xyz;\n      camWorldProj.y = 0.;\n      vec3 worldPosProj = wPos.xyz;\n      worldPosProj.y = 0.;\n      float fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\n      float fDeltaY, fDensityIntegral;\n      if (cameraPos.y > fogTop) {\n          if (wPos.y < fogTop) {\n              fDeltaY = (fogTop - wPos.y) / fogRange * 2.0;\n              fDensityIntegral = fDeltaY * fDeltaY * 0.5;\n          }\n          else {\n              fDeltaY = 0.;\n              fDensityIntegral = 0.;\n          }\n      }\n      else {\n          if (wPos.y < fogTop) {\n              float fDeltaA = (fogTop - cameraPos.y) / fogRange * 2.;\n              float fDeltaB = (fogTop - wPos.y) / fogRange * 2.;\n              fDeltaY = abs(fDeltaA - fDeltaB);\n              fDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n          }\n          else {\n              fDeltaY = abs(fogTop - cameraPos.y) / fogRange * 2.;\n              fDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n          }\n      }\n      float fDensity;\n      if (fDeltaY != 0.) {\n          fDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n      }\n      else {\n          fDensity = 0.;\n      }\n      float f = exp(-fDensity);\n      return f;\n  }\n#endif\nvoid CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)\n{\n#if CC_USE_FOG == 0\n\tfactor = LinearFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.y);\n#elif CC_USE_FOG == 1\n\tfactor = ExpFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.z, cc_fogAdd.z);\n#elif CC_USE_FOG == 2\n\tfactor = ExpSquaredFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.z, cc_fogAdd.z);\n#elif CC_USE_FOG == 3\n\tfactor = LayeredFog(pos, cc_cameraPos.xyz, cc_fogAdd.x, cc_fogAdd.y, cc_fogAdd.z);\n#else\n\tfactor = 1.0;\n#endif\n}\nvoid CC_APPLY_FOG_BASE(inout vec4 color, float factor) {\n\tcolor = vec4(mix(cc_fogColor.rgb, color.rgb, factor), color.a);\n}\n#if !CC_USE_ACCURATE_FOG\nvarying float v_fog_factor;\n#endif\nvoid CC_APPLY_FOG(inout vec4 color) {\n#if !CC_USE_ACCURATE_FOG\n    CC_APPLY_FOG_BASE(color, v_fog_factor);\n#endif\n}\nvoid CC_APPLY_FOG(inout vec4 color, vec3 worldPos) {\n#if CC_USE_ACCURATE_FOG\n    float factor;\n    CC_TRANSFER_FOG_BASE(vec4(worldPos, 1.0), factor);\n#else\n    float factor = v_fog_factor;\n#endif\n    CC_APPLY_FOG_BASE(color, factor);\n}\nvarying vec2 v_uv;\nuniform sampler2D mainTexture;\n   uniform vec4 mainColor;\nvec4 frag () {\n  vec4 col = mainColor * texture2D(mainTexture, v_uv);\n  CC_APPLY_FOG(col);\n  return CCFragOutput(col);\n}\nvoid main() { gl_FragColor = frag(); }"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]},{"name":"CCCamera","defines":[]},{"name":"CCShadow","defines":[]},{"name":"CCCSM","defines":["CC_SUPPORT_CASCADED_SHADOW_MAP"]}],"samplerTextures":[{"name":"cc_shadowMap","defines":["CC_RECEIVE_SHADOW"]},{"name":"cc_spotShadowMap","defines":["CC_RECEIVE_SHADOW"]}],"buffers":[],"images":[]},"locals":{"blocks":[{"name":"CCMorph","defines":["CC_USE_MORPH"]},{"name":"CCSkinningTexture","defines":["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{"name":"CCSkinningAnimation","defines":["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{"name":"CCSkinning","defines":["CC_USE_SKINNING","!CC_USE_BAKED_ANIMATION","!CC_USE_REAL_TIME_JOINT_TEXTURE"]},{"name":"CCLocalBatched","defines":["!USE_INSTANCING","USE_BATCHING"]},{"name":"CCLocal","defines":["!USE_INSTANCING","!USE_BATCHING"]}],"samplerTextures":[{"name":"cc_PositionDisplacements","defines":["CC_USE_MORPH","CC_MORPH_TARGET_HAS_POSITION"]},{"name":"cc_NormalDisplacements","defines":["CC_USE_MORPH","CC_MORPH_TARGET_HAS_NORMAL"]},{"name":"cc_TangentDisplacements","defines":["CC_USE_MORPH","CC_MORPH_TARGET_HAS_TANGENT"]},{"name":"cc_jointTexture","defines":["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{"name":"cc_realtimeJoint","defines":["CC_USE_SKINNING","!CC_USE_BAKED_ANIMATION","CC_USE_REAL_TIME_JOINT_TEXTURE"]}],"buffers":[],"images":[]},"statistics":{"CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS":169,"CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS":45}},"defines":[{"name":"USE_INSTANCING","type":"boolean"},{"name":"USE_BATCHING","type":"boolean"},{"name":"CC_USE_SKINNING","type":"boolean"},{"name":"CC_USE_BAKED_ANIMATION","type":"boolean"},{"name":"CC_USE_LIGHTMAP","type":"boolean"},{"name":"CC_RECEIVE_SHADOW","type":"boolean"},{"name":"CC_USE_MORPH","type":"boolean"},{"name":"CC_MORPH_TARGET_COUNT","type":"number","range":[2,8]},{"name":"CC_MORPH_TARGET_HAS_POSITION","type":"boolean"},{"name":"CC_MORPH_TARGET_HAS_NORMAL","type":"boolean"},{"name":"CC_MORPH_TARGET_HAS_TANGENT","type":"boolean"},{"name":"CC_MORPH_PRECOMPUTED","type":"boolean"},{"name":"CC_USE_REAL_TIME_JOINT_TEXTURE","type":"boolean"},{"name":"CC_USE_FOG","type":"number","range":[0,4]},{"name":"CC_USE_ACCURATE_FOG","type":"boolean"},{"name":"CC_SUPPORT_CASCADED_SHADOW_MAP","type":"boolean"},{"name":"HAS_SECOND_UV","type":"boolean"}]}],[{"name":"opaque","passes":[{"program":"select_pos_effect|legacy/main-functions/general-vs:vert|unlit-fs:frag","blendState":{"targets":[{"blend":true,"blendSrc":2,"blendDst":4,"blendSrcAlpha":2,"blendDstAlpha":4}]},"properties":{"mainTexture":{"value":"white","type":28},"mainColor":{"type":16,"value":[1,1,1,1]}}}]},{"name":"transparent","passes":[{"program":"select_pos_effect|legacy/main-functions/general-vs:vert|unlit-fs:frag","blendState":{"targets":[{"blend":true,"blendSrc":2,"blendDst":4,"blendSrcAlpha":2,"blendDstAlpha":4}]},"properties":{"mainTexture":{"value":"white","type":28},"mainColor":{"type":16,"value":[1,1,1,1]}}}]}]]],0,0,[],[],[]],[[[57,"land_effect",[{"hash":4073495106,"name":"land_effect|unlit-vs:vert|unlit-fs:frag","blocks":[{"name":"MyConstant","stageFlags":1,"binding":0,"members":[{"name":"tilingOffset","type":16,"count":1}],"defines":[]},{"name":"Constant","stageFlags":16,"binding":1,"members":[{"name":"mainColor","type":16,"count":1},{"name":"color1","type":16,"count":1},{"name":"color2","type":16,"count":1},{"name":"color3","type":16,"count":1},{"name":"color4","type":16,"count":1},{"name":"color5","type":16,"count":1}],"defines":[]}],"samplerTextures":[{"name":"mainTexture","type":28,"count":1,"stageFlags":16,"binding":2,"defines":[]}],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[],"attributes":[{"name":"a_texCoord","format":21,"location":0,"defines":[]},{"name":"a_position","format":44,"location":1,"defines":[]},{"name":"a_normal","format":44,"location":2,"defines":[]}],"fragColors":[{"name":"cc_FragColor","typename":"vec4","type":16,"count":1,"stageFlags":16,"location":0,"defines":[]}],"glsl3":{"vert":"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n  mediump vec4 cc_debug_view_mode;\n  mediump vec4 cc_debug_view_composite_pack_1;\n  mediump vec4 cc_debug_view_composite_pack_2;\n  mediump vec4 cc_debug_view_composite_pack_3;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_surfaceTransform;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\nlayout(std140) uniform CCLocal {\n  highp mat4 cc_matWorld;\n  highp mat4 cc_matWorldIT;\n  highp vec4 cc_lightingMapUVParam;\n  highp vec4 cc_localShadowBias;\n};\nin vec2 a_texCoord;\nin vec4 a_position;\nin vec4 a_normal;\nout vec4 poss;\nout vec4 normal;\nout vec2 v_uv;\nlayout(std140) uniform MyConstant {\n  vec4 tilingOffset;\n};\nvec4 vert () {\n  vec4 pos = cc_matViewProj * cc_matWorld * a_position;\n  v_uv = a_texCoord* tilingOffset.xy + tilingOffset.zw;\n  poss = a_position;\n  normal = a_normal;\n  return pos;\n}\nvoid main() { gl_Position = vert(); }","frag":"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n  mediump vec4 cc_debug_view_mode;\n  mediump vec4 cc_debug_view_composite_pack_1;\n  mediump vec4 cc_debug_view_composite_pack_2;\n  mediump vec4 cc_debug_view_composite_pack_3;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_surfaceTransform;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\n#define CC_SURFACES_DEBUG_VIEW_VERTEX_COLOR 1\n#define CC_SURFACES_DEBUG_VIEW_VERTEX_NORMAL CC_SURFACES_DEBUG_VIEW_VERTEX_COLOR + 1\n#define CC_SURFACES_DEBUG_VIEW_VERTEX_TANGENT CC_SURFACES_DEBUG_VIEW_VERTEX_NORMAL + 1\n#define CC_SURFACES_DEBUG_VIEW_WORLD_POS CC_SURFACES_DEBUG_VIEW_VERTEX_TANGENT + 1\n#define CC_SURFACES_DEBUG_VIEW_VERTEX_MIRROR CC_SURFACES_DEBUG_VIEW_WORLD_POS + 1\n#define CC_SURFACES_DEBUG_VIEW_FACE_SIDE CC_SURFACES_DEBUG_VIEW_VERTEX_MIRROR + 1\n#define CC_SURFACES_DEBUG_VIEW_UV0 CC_SURFACES_DEBUG_VIEW_FACE_SIDE + 1\n#define CC_SURFACES_DEBUG_VIEW_UV1 CC_SURFACES_DEBUG_VIEW_UV0 + 1\n#define CC_SURFACES_DEBUG_VIEW_UVLIGHTMAP CC_SURFACES_DEBUG_VIEW_UV1 + 1\n#define CC_SURFACES_DEBUG_VIEW_PROJ_DEPTH CC_SURFACES_DEBUG_VIEW_UVLIGHTMAP + 1\n#define CC_SURFACES_DEBUG_VIEW_LINEAR_DEPTH CC_SURFACES_DEBUG_VIEW_PROJ_DEPTH + 1\n#define CC_SURFACES_DEBUG_VIEW_FRAGMENT_NORMAL CC_SURFACES_DEBUG_VIEW_LINEAR_DEPTH + 1\n#define CC_SURFACES_DEBUG_VIEW_FRAGMENT_TANGENT CC_SURFACES_DEBUG_VIEW_FRAGMENT_NORMAL + 1\n#define CC_SURFACES_DEBUG_VIEW_FRAGMENT_BINORMAL CC_SURFACES_DEBUG_VIEW_FRAGMENT_TANGENT + 1\n#define CC_SURFACES_DEBUG_VIEW_BASE_COLOR CC_SURFACES_DEBUG_VIEW_FRAGMENT_BINORMAL + 1\n#define CC_SURFACES_DEBUG_VIEW_DIFFUSE_COLOR CC_SURFACES_DEBUG_VIEW_BASE_COLOR + 1\n#define CC_SURFACES_DEBUG_VIEW_SPECULAR_COLOR CC_SURFACES_DEBUG_VIEW_DIFFUSE_COLOR + 1\n#define CC_SURFACES_DEBUG_VIEW_TRANSPARENCY CC_SURFACES_DEBUG_VIEW_SPECULAR_COLOR + 1\n#define CC_SURFACES_DEBUG_VIEW_METALLIC CC_SURFACES_DEBUG_VIEW_TRANSPARENCY + 1\n#define CC_SURFACES_DEBUG_VIEW_ROUGHNESS CC_SURFACES_DEBUG_VIEW_METALLIC + 1\n#define CC_SURFACES_DEBUG_VIEW_SPECULAR_INTENSITY CC_SURFACES_DEBUG_VIEW_ROUGHNESS + 1\n#define CC_SURFACES_DEBUG_VIEW_DIRECT_DIFFUSE CC_SURFACES_DEBUG_VIEW_SPECULAR_INTENSITY + 1\n#define CC_SURFACES_DEBUG_VIEW_DIRECT_SPECULAR CC_SURFACES_DEBUG_VIEW_DIRECT_DIFFUSE + 1\n#define CC_SURFACES_DEBUG_VIEW_DIRECT_ALL CC_SURFACES_DEBUG_VIEW_DIRECT_SPECULAR + 1\n#define CC_SURFACES_DEBUG_VIEW_ENV_DIFFUSE CC_SURFACES_DEBUG_VIEW_DIRECT_ALL + 1\n#define CC_SURFACES_DEBUG_VIEW_ENV_SPECULAR CC_SURFACES_DEBUG_VIEW_ENV_DIFFUSE + 1\n#define CC_SURFACES_DEBUG_VIEW_ENV_ALL CC_SURFACES_DEBUG_VIEW_ENV_SPECULAR + 1\n#define CC_SURFACES_DEBUG_VIEW_EMISSIVE CC_SURFACES_DEBUG_VIEW_ENV_ALL + 1\n#define CC_SURFACES_DEBUG_VIEW_LIGHT_MAP CC_SURFACES_DEBUG_VIEW_EMISSIVE + 1\n#define CC_SURFACES_DEBUG_VIEW_SHADOW CC_SURFACES_DEBUG_VIEW_LIGHT_MAP + 1\n#define CC_SURFACES_DEBUG_VIEW_AO CC_SURFACES_DEBUG_VIEW_SHADOW + 1\n#define CC_SURFACES_DEBUG_VIEW_FOG CC_SURFACES_DEBUG_VIEW_AO + 1\n#define CC_SURFACES_DEBUG_VIEW_SINGLE 1\n#define CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC 2\n#define IS_DEBUG_VIEW_LIGHTING_ENABLE_WITH_ALBEDO (cc_debug_view_mode.y > 0.0)\n#define IS_DEBUG_VIEW_MISC_ENABLE_CSM_LAYER_COLORATION (cc_debug_view_mode.z > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_DIRECT_DIFFUSE (cc_debug_view_composite_pack_1.x > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_DIRECT_SPECULAR (cc_debug_view_composite_pack_1.y > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_ENV_DIFFUSE (cc_debug_view_composite_pack_1.z > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_ENV_SPECULAR (cc_debug_view_composite_pack_1.w > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_EMISSIVE (cc_debug_view_composite_pack_2.x > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_LIGHT_MAP (cc_debug_view_composite_pack_2.y > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_SHADOW (cc_debug_view_composite_pack_2.z > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_AO (cc_debug_view_composite_pack_2.w > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_NORMAL_MAP (cc_debug_view_composite_pack_3.x > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_FOG (cc_debug_view_composite_pack_3.y > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_TONE_MAPPING (cc_debug_view_composite_pack_3.z > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_GAMMA_CORRECTION (cc_debug_view_composite_pack_3.w > 0.0)\nin vec2 v_uv;\nin vec4 poss;\nin vec4 normal;\nuniform sampler2D mainTexture;\nlayout(std140) uniform Constant {\n  vec4 mainColor;\n  vec4 color1;\n  vec4 color2;\n  vec4 color3;\n  vec4 color4;\n  vec4 color5;\n};\nvec4 frag () {\n  vec4 uv = vec4(0.0,0.0,0.0,1.0);\n  vec2 v_uvn = vec2(v_uv.x ,v_uv.y);\n  uv = texture(mainTexture, v_uvn);\n  vec2 dp1=vec2(1.0,1.0);\n  vec2 dp2=vec2(poss.x,poss.z);\n  float d=dot(dp1,dp2)/2.0+0.5;\n  float p=1.0-d;\n  vec4 color_land=vec4(color2.x*d+color4.x*p,color2.y*d+color4.y*p,color2.z*d+color4.z*p,1.0);\n  vec4 color_hill=vec4(color1.x*d+color5.x*p,color1.y*d+color5.y*p,color1.z*d+color5.z*p,1.0);\n  if(poss.y>0.18){\n    return color3;\n  }\n  else if(poss.y>0.14){\n    vec4 dv=vec4(color3.x-color_hill.x,color3.y-color_hill.y,color3.z-color_hill.z,1.0)*(poss.y-0.14)/(0.04);\n    return vec4(color_hill.x+dv.x,color_hill.y+dv.y,color_hill.z+dv.z,1.0);\n  }\n  else if(poss.y>0.05){\n    return color_hill;\n  }\n  else if(poss.y>-0.02){\n    vec4 dv=vec4(color_hill.x-color_land.x,color_hill.y-color_land.y,color_hill.z-color_land.z,1.0)*(poss.y+0.02)/(0.07);\n    return vec4(color_land.x+dv.x,color_land.y+dv.y,color_land.z+dv.z,1.0);\n  }\n  else{\n      return color_land;\n  }\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"},"glsl1":{"vert":"\nprecision highp float;\nuniform highp mat4 cc_matViewProj;\nuniform highp mat4 cc_matWorld;\nattribute vec2 a_texCoord;\nattribute vec4 a_position;\nattribute vec4 a_normal;\nvarying vec4 poss;\nvarying vec4 normal;\nvarying vec2 v_uv;\n   uniform vec4 tilingOffset;\nvec4 vert () {\n  vec4 pos = cc_matViewProj * cc_matWorld * a_position;\n  v_uv = a_texCoord* tilingOffset.xy + tilingOffset.zw;\n  poss = a_position;\n  normal = a_normal;\n  return pos;\n}\nvoid main() { gl_Position = vert(); }","frag":"\nprecision highp float;\nuniform mediump vec4 cc_debug_view_mode;\n  uniform mediump vec4 cc_debug_view_composite_pack_1;\n  uniform mediump vec4 cc_debug_view_composite_pack_2;\n  uniform mediump vec4 cc_debug_view_composite_pack_3;\n#define CC_SURFACES_DEBUG_VIEW_VERTEX_COLOR 1\n#define CC_SURFACES_DEBUG_VIEW_VERTEX_NORMAL CC_SURFACES_DEBUG_VIEW_VERTEX_COLOR + 1\n#define CC_SURFACES_DEBUG_VIEW_VERTEX_TANGENT CC_SURFACES_DEBUG_VIEW_VERTEX_NORMAL + 1\n#define CC_SURFACES_DEBUG_VIEW_WORLD_POS CC_SURFACES_DEBUG_VIEW_VERTEX_TANGENT + 1\n#define CC_SURFACES_DEBUG_VIEW_VERTEX_MIRROR CC_SURFACES_DEBUG_VIEW_WORLD_POS + 1\n#define CC_SURFACES_DEBUG_VIEW_FACE_SIDE CC_SURFACES_DEBUG_VIEW_VERTEX_MIRROR + 1\n#define CC_SURFACES_DEBUG_VIEW_UV0 CC_SURFACES_DEBUG_VIEW_FACE_SIDE + 1\n#define CC_SURFACES_DEBUG_VIEW_UV1 CC_SURFACES_DEBUG_VIEW_UV0 + 1\n#define CC_SURFACES_DEBUG_VIEW_UVLIGHTMAP CC_SURFACES_DEBUG_VIEW_UV1 + 1\n#define CC_SURFACES_DEBUG_VIEW_PROJ_DEPTH CC_SURFACES_DEBUG_VIEW_UVLIGHTMAP + 1\n#define CC_SURFACES_DEBUG_VIEW_LINEAR_DEPTH CC_SURFACES_DEBUG_VIEW_PROJ_DEPTH + 1\n#define CC_SURFACES_DEBUG_VIEW_FRAGMENT_NORMAL CC_SURFACES_DEBUG_VIEW_LINEAR_DEPTH + 1\n#define CC_SURFACES_DEBUG_VIEW_FRAGMENT_TANGENT CC_SURFACES_DEBUG_VIEW_FRAGMENT_NORMAL + 1\n#define CC_SURFACES_DEBUG_VIEW_FRAGMENT_BINORMAL CC_SURFACES_DEBUG_VIEW_FRAGMENT_TANGENT + 1\n#define CC_SURFACES_DEBUG_VIEW_BASE_COLOR CC_SURFACES_DEBUG_VIEW_FRAGMENT_BINORMAL + 1\n#define CC_SURFACES_DEBUG_VIEW_DIFFUSE_COLOR CC_SURFACES_DEBUG_VIEW_BASE_COLOR + 1\n#define CC_SURFACES_DEBUG_VIEW_SPECULAR_COLOR CC_SURFACES_DEBUG_VIEW_DIFFUSE_COLOR + 1\n#define CC_SURFACES_DEBUG_VIEW_TRANSPARENCY CC_SURFACES_DEBUG_VIEW_SPECULAR_COLOR + 1\n#define CC_SURFACES_DEBUG_VIEW_METALLIC CC_SURFACES_DEBUG_VIEW_TRANSPARENCY + 1\n#define CC_SURFACES_DEBUG_VIEW_ROUGHNESS CC_SURFACES_DEBUG_VIEW_METALLIC + 1\n#define CC_SURFACES_DEBUG_VIEW_SPECULAR_INTENSITY CC_SURFACES_DEBUG_VIEW_ROUGHNESS + 1\n#define CC_SURFACES_DEBUG_VIEW_DIRECT_DIFFUSE CC_SURFACES_DEBUG_VIEW_SPECULAR_INTENSITY + 1\n#define CC_SURFACES_DEBUG_VIEW_DIRECT_SPECULAR CC_SURFACES_DEBUG_VIEW_DIRECT_DIFFUSE + 1\n#define CC_SURFACES_DEBUG_VIEW_DIRECT_ALL CC_SURFACES_DEBUG_VIEW_DIRECT_SPECULAR + 1\n#define CC_SURFACES_DEBUG_VIEW_ENV_DIFFUSE CC_SURFACES_DEBUG_VIEW_DIRECT_ALL + 1\n#define CC_SURFACES_DEBUG_VIEW_ENV_SPECULAR CC_SURFACES_DEBUG_VIEW_ENV_DIFFUSE + 1\n#define CC_SURFACES_DEBUG_VIEW_ENV_ALL CC_SURFACES_DEBUG_VIEW_ENV_SPECULAR + 1\n#define CC_SURFACES_DEBUG_VIEW_EMISSIVE CC_SURFACES_DEBUG_VIEW_ENV_ALL + 1\n#define CC_SURFACES_DEBUG_VIEW_LIGHT_MAP CC_SURFACES_DEBUG_VIEW_EMISSIVE + 1\n#define CC_SURFACES_DEBUG_VIEW_SHADOW CC_SURFACES_DEBUG_VIEW_LIGHT_MAP + 1\n#define CC_SURFACES_DEBUG_VIEW_AO CC_SURFACES_DEBUG_VIEW_SHADOW + 1\n#define CC_SURFACES_DEBUG_VIEW_FOG CC_SURFACES_DEBUG_VIEW_AO + 1\n#define CC_SURFACES_DEBUG_VIEW_SINGLE 1\n#define CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC 2\n#define IS_DEBUG_VIEW_LIGHTING_ENABLE_WITH_ALBEDO (cc_debug_view_mode.y > 0.0)\n#define IS_DEBUG_VIEW_MISC_ENABLE_CSM_LAYER_COLORATION (cc_debug_view_mode.z > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_DIRECT_DIFFUSE (cc_debug_view_composite_pack_1.x > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_DIRECT_SPECULAR (cc_debug_view_composite_pack_1.y > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_ENV_DIFFUSE (cc_debug_view_composite_pack_1.z > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_ENV_SPECULAR (cc_debug_view_composite_pack_1.w > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_EMISSIVE (cc_debug_view_composite_pack_2.x > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_LIGHT_MAP (cc_debug_view_composite_pack_2.y > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_SHADOW (cc_debug_view_composite_pack_2.z > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_AO (cc_debug_view_composite_pack_2.w > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_NORMAL_MAP (cc_debug_view_composite_pack_3.x > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_FOG (cc_debug_view_composite_pack_3.y > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_TONE_MAPPING (cc_debug_view_composite_pack_3.z > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_GAMMA_CORRECTION (cc_debug_view_composite_pack_3.w > 0.0)\nvarying vec2 v_uv;\nvarying vec4 poss;\nvarying vec4 normal;\nuniform sampler2D mainTexture;\n  uniform vec4 color1;\n  uniform vec4 color2;\n  uniform vec4 color3;\n  uniform vec4 color4;\n  uniform vec4 color5;\nvec4 frag () {\n  vec4 uv = vec4(0.0,0.0,0.0,1.0);\n  vec2 v_uvn = vec2(v_uv.x ,v_uv.y);\n  uv = texture2D(mainTexture, v_uvn);\n  vec2 dp1=vec2(1.0,1.0);\n  vec2 dp2=vec2(poss.x,poss.z);\n  float d=dot(dp1,dp2)/2.0+0.5;\n  float p=1.0-d;\n  vec4 color_land=vec4(color2.x*d+color4.x*p,color2.y*d+color4.y*p,color2.z*d+color4.z*p,1.0);\n  vec4 color_hill=vec4(color1.x*d+color5.x*p,color1.y*d+color5.y*p,color1.z*d+color5.z*p,1.0);\n  if(poss.y>0.18){\n    return color3;\n  }\n  else if(poss.y>0.14){\n    vec4 dv=vec4(color3.x-color_hill.x,color3.y-color_hill.y,color3.z-color_hill.z,1.0)*(poss.y-0.14)/(0.04);\n    return vec4(color_hill.x+dv.x,color_hill.y+dv.y,color_hill.z+dv.z,1.0);\n  }\n  else if(poss.y>0.05){\n    return color_hill;\n  }\n  else if(poss.y>-0.02){\n    vec4 dv=vec4(color_hill.x-color_land.x,color_hill.y-color_land.y,color_hill.z-color_land.z,1.0)*(poss.y+0.02)/(0.07);\n    return vec4(color_land.x+dv.x,color_land.y+dv.y,color_land.z+dv.z,1.0);\n  }\n  else{\n      return color_land;\n  }\n}\nvoid main() { gl_FragColor = frag(); }"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]},{"name":"CCCamera","defines":[]}],"samplerTextures":[],"buffers":[],"images":[]},"locals":{"blocks":[{"name":"CCLocal","defines":[]}],"samplerTextures":[],"buffers":[],"images":[]},"statistics":{"CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS":55,"CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS":50}},"defines":[]}],[{"name":"opaque","passes":[{"program":"land_effect|unlit-vs:vert|unlit-fs:frag","properties":{"mainTexture":{"value":"white","type":28},"mainColor":{"type":16,"value":[1,1,1,1]},"color1":{"type":16,"value":[1,1,1,1]},"color2":{"type":16,"value":[1,1,1,1]},"color3":{"type":16,"value":[1,1,1,1]},"color4":{"type":16,"value":[1,1,1,1]},"color5":{"type":16,"value":[1,1,1,1]},"tilingOffset":{"type":16,"value":[1,1,0,0]}}}]}]]],0,0,[],[],[]],[[{"name":"image_1","rect":{"x":0,"y":0,"width":163,"height":66},"offset":{"x":0,"y":0},"originalSize":{"width":163,"height":66},"rotated":false,"capInsets":[0,0,0,0],"vertices":{"rawPosition":[-81.5,-33,0,81.5,-33,0,-81.5,33,0,81.5,33,0],"indexes":[0,1,2,2,1,3],"uv":[0,66,163,66,0,0,163,0],"nuv":[0,0,1,0,0,1,1,1],"minPos":{"x":-81.5,"y":-33,"z":0},"maxPos":{"x":81.5,"y":33,"z":0}},"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[5],0,[0],[7],[28]],[[{"name":"image_4","rect":{"x":1,"y":1,"width":148,"height":53},"offset":{"x":-0.5,"y":0},"originalSize":{"width":151,"height":55},"rotated":false,"capInsets":[40,26,40,26],"vertices":{"rawPosition":[-74,-26.5,0,74,-26.5,0,-74,26.5,0,74,26.5,0],"indexes":[0,1,2,2,1,3],"uv":[1,54,149,54,1,1,149,1],"nuv":[0.006622516556291391,0.01818181818181818,0.9867549668874173,0.01818181818181818,0.006622516556291391,0.9818181818181818,0.9867549668874173,0.9818181818181818],"minPos":{"x":-74,"y":-26.5,"z":0},"maxPos":{"x":74,"y":26.5,"z":0}},"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[5],0,[0],[7],[29]],[[[80,".bin",1868395296,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":3170352,"length":1572864,"count":393216,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":3170352,"count":66049,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}]},"minPosition",8,[1,-1,-0.10000000894069672,-1],"maxPosition",8,[1,1,0.29999998211860657,1]]],-1],0,0,[],[],[]],[[[81,"GameScene"],[82,"Canvas",512,33554432,"35irQBDVJHsq3FtYoMs6qn",[-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58],[[1,-1,[0,"f7h+UC+nlHZIT1kr5rdzL+"],[5,1920,1080]],[91,-3,[0,"13+I6MGA1DxLHRRWOcCHGV"],-2],[92,45,-1.1368683772161603e-13,-1.1368683772161603e-13,-4,[0,"e72TRdYk9GeJThD7El7cKZ"]],[97,-5],[98,-6],[99,-7],[100,-8],[101,-9],[102,-10],[103,-11],[104,-12],[105,-13],[106,-14],[107,-15],[108,-16],[109,-17],[110,-18],[111,-19],[112,-20],[113,-21],[114,-22],[115,-23]],[1,959.9999999999999,540,0]],[20,"Pannel",512,33554432,[-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93],[[1,-59,[0,"fcblnCBm5COoBLFg55BdE5"],[5,1020,700]],[8,0,-60,[0,"32cAK3Q3NMtIsxi1hLBD7i"],[4,4278197031],143],[19,-62,[0,"d6NPlO1S9FLZmbSc9zcLVY"],[4,4292269782],-61,144]]],[27,"Datas",512,33554432,[-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114],[[11,-94,[0,"21m61fUOdJzq0TVcFyKIXP"]],[25,17,200,-95,[0,"ffn2uiSUdJRohCyoUShndY"]]],[1,0,150,0]],[20,"Datas",512,33554432,[-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134],[[11,-115,[0,"21m61fUOdJzq0TVcFyKIXP"]],[25,17,300,-116,[0,"ffn2uiSUdJRohCyoUShndY"]]]],[10,"Peoples",512,3,[-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148],[[9,-135,[5,0,0]]],[1,-450,-200,0]],[27,"ToggleGroup",512,33554432,[-152,-153,-154,-155,-156,-157,-158,-159,-160],[[73,-149,[0,"2egQc8X01EwpRwineKIxgb"]],[11,-150,[0,"00bCMVZidJ4aLRgEzANc3i"]],[63,18,-25,-151,[0,"b9A/RGPA5C07Giy8N/hTKG"]]],[1,0,-25,0]],[27,"ToggleGroup",512,33554432,[-164,-165,-166,-167,-168,-169,-170,-171],[[73,-161,[0,"2egQc8X01EwpRwineKIxgb"]],[11,-162,[0,"00bCMVZidJ4aLRgEzANc3i"]],[63,18,50,-163,[0,"b9A/RGPA5C07Giy8N/hTKG"]]],[1,0,50,0]],[121,"GameScene",[[-172,-173,-174,-175,-176,-177,-178,[58,"SelectPath",512,"22mye27ohBC6lzw6SWMZZo",-179],[58,"Farmlands",512,"deTIOux8xF+LmIrEQxaAoD",-180],1],1,1,1,1,1,1,1,4,4,1],[122,"e281cdb6-0f91-4c31-a8ba-05722d20f7ca"],[123,[124,0.78125,[2,0.2,0.5019607843137255,0.8,0.520833125],[2,0.2,0.5019607843137255,0.8,0.520833125]],[125,[4,4283190348],[0,512,512]],[126],[127,[4,4292993505]],[128]]],[20,"Pannel",512,33554432,[-185,-186,-187,7,-188,-189],[[1,-181,[0,"70Y//OymhGGrAjHNhxscqW"],[5,1000,700]],[17,1,0,-182,[0,"11mg67nulKKbNaJzjcFfJz"],184],[19,-184,[0,"a3a/+9JE5HMriUtsQB2kqM"],[4,4292269782],-183,185]]],[27,"Datas",512,33554432,[-192,-193,-194,-195,-196,-197,-198,-199],[[11,-190,[0,"21m61fUOdJzq0TVcFyKIXP"]],[25,17,300,-191,[0,"ffn2uiSUdJRohCyoUShndY"]]],[1,0,-50,0]],[20,"Pannel",512,33554432,[-204,-205,6,-206,-207],[[1,-200,[0,"70Y//OymhGGrAjHNhxscqW"],[5,1000,700]],[8,0,-201,[0,"11mg67nulKKbNaJzjcFfJz"],[4,4278197031],239],[19,-203,[0,"a3a/+9JE5HMriUtsQB2kqM"],[4,4292269782],-202,240]]],[20,"Pannel",512,33554432,[-212,-213,-214,-215],[[1,-208,[0,"50ETWLasZB1Jbz1YAmNAn+"],[5,1000,700]],[8,0,-209,[0,"590h5i7IVAOY39Z1Vd2e4G"],[4,4278197031],265],[19,-211,[0,"c2p5dngYBPZo8+VMFIlE9U"],[4,4292269782],-210,266]]],[27,"Datas",512,33554432,[-218,-219,-220,-221,-222,-223],[[11,-216,[0,"21m61fUOdJzq0TVcFyKIXP"]],[25,17,300,-217,[0,"ffn2uiSUdJRohCyoUShndY"]]],[1,0,-30,0]],[10,"Peoples",512,10,[-225,-226,-227,-228,-229,-230,-231],[[9,-224,[5,0,0]]],[1,-288.011,34.396,0]],[27,"Pannel",512,33554432,[-236,-237,-238],[[1,-232,[0,"e78XxrvehFmplTYvYj2vfm"],[5,1020,770]],[17,1,0,-233,[0,"9301Vylf9JcYh1tpnwX6ep"],49],[70,false,-235,[0,"2akEqVHiRBVodVMGcAcfjT"],[4,4292269782],-234,50]],[1,0,80,0]],[3,"Numbers",512,33554432,9,[-241,-242,-243,-244,-245],[[11,-239,[0,"75mpusVVRH+YQABnMiW0YY"]],[25,17,120,-240,[0,"ecRDTwzwNGUpzKwC87hZtI"]]],[1,0,180,0]],[3,"Foods",512,33554432,9,[-248,-249,-250,-251,-252],[[11,-246,[0,"0cfn6Ju75Na67BWRNZ15Ln"]],[25,17,400,-247,[0,"a1R5aIO51AqbduoA2ES3pZ"]]],[1,0,-100,0]],[3,"Foods",512,33554432,12,[-255,-256,-257,-258,-259],[[11,-253,[0,"21m61fUOdJzq0TVcFyKIXP"]],[25,17,200,-254,[0,"ffn2uiSUdJRohCyoUShndY"]]],[1,0,100,0]],[27,"Pannel",512,33554432,[-262,-263,-264,-265,-266],[[1,-260,[0,"fdUZ4JQghKZI354HuWA8M+"],[5,1020,840]],[17,1,0,-261,[0,"51wzxPzQ9MGJ5zTkh0YkfJ"],473]],[1,0,50,0]],[20,"Pannel",512,33554432,[-269,-270,-271,-272,-273],[[1,-267,[0,"e4DO62WT9NPoC3+UJtnr0E"],[5,900,500]],[6,1,0,-268,[0,"28RmTlUl1D2YfNqPLOhXMj"],[4,4278197031],515]]],[20,"Pannel",512,33554432,[-277,-278,-279,-280],[[1,-274,[0,"50ETWLasZB1Jbz1YAmNAn+"],[5,1000,640]],[29,-276,[0,"c2p5dngYBPZo8+VMFIlE9U"],[4,4292269782],-275]]],[3,"Go",512,33554432,1,[-286],[[1,-281,[0,"beBO0Dl/9Bb4mNMQSscqQr"],[5,150,150]],[8,0,-282,[0,"7aouuoCkpC8qveBciDXAKN"],[4,4292269782],14],[64,36,15,15,-283,[0,"bcZsb9SO9N/J+tX1b4tEGb"]],[13,1,-285,[0,"74KEIfX2tGe4rNVziqJb8v"],[[12,"31a4ckJ6dVL+71DCzcokiBL","startGame",1]],[4,4292269782],-284,15]],[1,870,-450,0]],[3,"Save",512,33554432,1,[-292],[[11,-287,[0,"e2Khj+sz5FraQ1cAnadY4p"]],[6,1,0,-288,[0,"36Lti5xWxJIoD8EjqQoOiV"],[4,4292269782],17],[13,1,-290,[0,"f3mhVJkJVKLpBfOPdKc7eO"],[[12,"31a4ckJ6dVL+71DCzcokiBL","saveScene",1]],[4,4292269782],-289,18],[44,9,30,150,-291,[0,"2cCw3g19JM16orMemvDVNY"]]],[1,-880,340,0]],[3,"Print",512,33554432,1,[-298],[[11,-293,[0,"e2Khj+sz5FraQ1cAnadY4p"]],[6,1,0,-294,[0,"36Lti5xWxJIoD8EjqQoOiV"],[4,4292269782],20],[13,1,-296,[0,"f3mhVJkJVKLpBfOPdKc7eO"],[[12,"31a4ckJ6dVL+71DCzcokiBL","printScene",1]],[4,4292269782],-295,21],[44,9,30,30,-297,[0,"2cCw3g19JM16orMemvDVNY"]]],[1,-880,460,0]],[3,"Log",512,33554432,1,[-304],[[11,-299,[0,"e2Khj+sz5FraQ1cAnadY4p"]],[6,1,0,-300,[0,"36Lti5xWxJIoD8EjqQoOiV"],[4,4292269782],23],[13,1,-302,[0,"f3mhVJkJVKLpBfOPdKc7eO"],[[12,"d4547TMjx9Jz4q5XMOHQkvb","show",1]],[4,4292269782],-301,24],[44,9,30,270,-303,[0,"2cCw3g19JM16orMemvDVNY"]]],[1,-880,220,0]],[3,"Map",512,33554432,1,[-310],[[11,-305,[0,"e2Khj+sz5FraQ1cAnadY4p"]],[6,1,0,-306,[0,"36Lti5xWxJIoD8EjqQoOiV"],[4,4292269782],26],[13,1,-308,[0,"f3mhVJkJVKLpBfOPdKc7eO"],[[12,"4e9096uXFFNuJEvIOJ7y0ad","show",1]],[4,4292269782],-307,27],[44,9,30,390,-309,[0,"2cCw3g19JM16orMemvDVNY"]]],[1,-880,100,0]],[3,"ShowKindom",512,33554432,1,[-316],[[11,-311,[0,"e2Khj+sz5FraQ1cAnadY4p"]],[6,1,0,-312,[0,"36Lti5xWxJIoD8EjqQoOiV"],[4,4292269782],29],[13,1,-314,[0,"f3mhVJkJVKLpBfOPdKc7eO"],[[12,"6f236v0G05GB7naLocyJIPj","show",1]],[4,4292269782],-313,30],[51,33,20,30,330,-315,[0,"2cCw3g19JM16orMemvDVNY"]]],[1,880,160,0]],[3,"ShowEntity",512,33554432,1,[-322],[[11,-317,[0,"e2Khj+sz5FraQ1cAnadY4p"]],[6,1,0,-318,[0,"36Lti5xWxJIoD8EjqQoOiV"],[4,4292269782],32],[13,1,-320,[0,"f3mhVJkJVKLpBfOPdKc7eO"],[[12,"2dd73lMiApGSK3B1AWboSez","showAllEntities",1]],[4,4292269782],-319,33],[51,33,1394.661,30,200,-321,[0,"2cCw3g19JM16orMemvDVNY"]]],[1,880,290,0]],[3,"ShowPeople",512,33554432,1,[-328],[[11,-323,[0,"e2Khj+sz5FraQ1cAnadY4p"]],[6,1,0,-324,[0,"36Lti5xWxJIoD8EjqQoOiV"],[4,4292269782],35],[13,1,-326,[0,"f3mhVJkJVKLpBfOPdKc7eO"],[[12,"2dd73lMiApGSK3B1AWboSez","showAllPeoples",1]],[4,4292269782],-325,36],[51,33,1394.661,30,70,-327,[0,"2cCw3g19JM16orMemvDVNY"]]],[1,880,420,0]],[3,"ChuZheng",512,33554432,2,[-334],[[1,-329,[0,"8fwQj8dgNDAoTi67Xt1ul0"],[5,150,110]],[6,1,0,-330,[0,"fbxmYgDWdNKrr706hgA+gA"],[4,4292269782],54],[14,1,-332,[0,"56Eq01blxJ4box83TKbDXQ"],[4,4292269782],[4,4282466625],-331,55],[15,-333]],[1,-400,260,0]],[3,"YunShu",512,33554432,2,[-340],[[1,-335,[0,"2arjKwwtxLTbrQqceXcCoO"],[5,150,110]],[6,1,0,-336,[0,"6fv15GVgxFvLsG6Nvit9dd"],[4,4292269782],57],[14,1,-338,[0,"9fl4Qx3TFD3buuyJoxTDrX"],[4,4292269782],[4,4282466625],-337,58],[15,-339]],[1,-240,260,0]],[3,"ZhuZha",512,33554432,2,[-346],[[1,-341,[0,"dddPNvD/ZKSaRughtU0woH"],[5,150,110]],[6,1,0,-342,[0,"a9HtFVyLdK3Imwdk3i2jJd"],[4,4292269782],60],[14,1,-344,[0,"acEb/CDRVBZLOHrQPTAYW5"],[4,4292269782],[4,4282466625],-343,61],[15,-345]],[1,-80,260,0]],[3,"ZhengBing",512,33554432,2,[-352],[[1,-347,[0,"10XwtG2TBCXYA9iy07uYfa"],[5,150,110]],[6,1,0,-348,[0,"e6CLhqG7lLVp4YpLDEhu+3"],[4,4292269782],63],[14,1,-350,[0,"611S1i/BZG24oLVw6lvJrn"],[4,4292269782],[4,4282466625],-349,64],[15,-351]],[1,80,260,0]],[3,"XunLian",512,33554432,2,[-358],[[1,-353,[0,"a2i6UWdptJXbuRvKwlD06q"],[5,150,110]],[6,1,0,-354,[0,"7cyQyCeUlB0Y2wOnaw7eGN"],[4,4292269782],66],[14,1,-356,[0,"55XSZJv91G1pzpPuby61zd"],[4,4292269782],[4,4282466625],-355,67],[15,-357]],[1,240,260,0]],[3,"CaoLian",512,33554432,2,[-364],[[1,-359,[0,"a2i6UWdptJXbuRvKwlD06q"],[5,150,110]],[6,1,0,-360,[0,"7cyQyCeUlB0Y2wOnaw7eGN"],[4,4292269782],69],[14,1,-362,[0,"55XSZJv91G1pzpPuby61zd"],[4,4292269782],[4,4282466625],-361,70],[15,-363]],[1,400,260,0]],[3,"XunShi",512,33554432,2,[-370],[[1,-365,[0,"54C3DAtfhFGJ7EJECq6hdT"],[5,150,110]],[6,1,0,-366,[0,"94tSGmhTZIeZWu9N2TeYta"],[4,4292269782],72],[14,1,-368,[0,"ee45jY0kFO+7VmKJIwI+Ev"],[4,4292269782],[4,4282466625],-367,73],[15,-369]],[1,-400,130,0]],[3,"MaiJing",512,33554432,2,[-376],[[1,-371,[0,"57C/Rh94RKXrj5EGFdTwOS"],[5,150,110]],[6,1,0,-372,[0,"actTmPzyxFZanxXMliK7tB"],[4,4292269782],75],[14,1,-374,[0,"078fNTmS5HGom0ScUHpSu0"],[4,4292269782],[4,4282466625],-373,76],[15,-375]],[1,-240,130,0]],[3,"MaiChu",512,33554432,2,[-382],[[1,-377,[0,"7bqHeHQwVJCJ2aCcz7sD4k"],[5,150,110]],[6,1,0,-378,[0,"25GjBnSiRDk5m9zg9BCVgd"],[4,4292269782],78],[14,1,-380,[0,"22yOLvFsdK+KP50ez1a02y"],[4,4292269782],[4,4282466625],-379,79],[15,-381]],[1,-80,130,0]],[3,"XiuShan",512,33554432,2,[-388],[[1,-383,[0,"358zz0RW1CWK3dZoj4iGtB"],[5,150,110]],[6,1,0,-384,[0,"a7L4O0NyhHE61wPPtLwFPu"],[4,4292269782],81],[14,1,-386,[0,"f5ok156ppAwIcqcwIg5ZfL"],[4,4292269782],[4,4282466625],-385,82],[15,-387]],[1,80,130,0]],[3,"KaiKeng",512,33554432,2,[-394],[[1,-389,[0,"72kjwW2qVCOrbr/8+UMegZ"],[5,150,110]],[6,1,0,-390,[0,"16e/vxZ+RPT5L61wES+/cG"],[4,4292269782],84],[14,1,-392,[0,"66JnrkwypPK6J2I3FISFOn"],[4,4292269782],[4,4282466625],-391,85],[15,-393]],[1,240,130,0]],[3,"CheHui",512,33554432,2,[-400],[[1,-395,[0,"5bCauDk3lDQItWofy0+IH6"],[5,150,110]],[6,1,0,-396,[0,"0f2PcjCvJLzIM2Ed/6S/ep"],[4,4292269782],87],[14,1,-398,[0,"77idCcr2dGLLz6D3l9BnNX"],[4,4292269782],[4,4282466625],-397,88],[15,-399]],[1,400,130,0]],[3,"YiDong",512,33554432,2,[-406],[[1,-401,[0,"a2zk5Tu5NPzIUZ320tncMq"],[5,150,110]],[6,1,0,-402,[0,"04GQVaLA1OhrcC+QRh6flL"],[4,4292269782],90],[14,1,-404,[0,"c3cdvDT5dHkZJIhMIbWZUA"],[4,4292269782],[4,4282466625],-403,91],[15,-405]],[1,-400,0,0]],[3,"LiuYan",512,33554432,2,[-412],[[1,-407,[0,"32nszBX1JGqKZ4sX6LJVOA"],[5,150,110]],[6,1,0,-408,[0,"a53y92x7pKtI4mTd8Ihjmz"],[4,4292269782],93],[14,1,-410,[0,"0fuN7kendB1IoCxSQIWpQV"],[4,4292269782],[4,4282466625],-409,94],[15,-411]],[1,-240,0,0]],[3,"JueWei",512,33554432,2,[-418],[[1,-413,[0,"43H7ChZblAOJn25R40PJmK"],[5,150,110]],[6,1,0,-414,[0,"44LUR7WY9BV6Fjpyqf3Fui"],[4,4292269782],96],[14,1,-416,[0,"3fbxCl7AJFybbyNM723fB/"],[4,4292269782],[4,4282466625],-415,97],[15,-417]],[1,-80,0,0]],[3,"XiRao",512,33554432,2,[-424],[[1,-419,[0,"55q14JmjRNCL1TwLthGibB"],[5,150,110]],[6,1,0,-420,[0,"bdlyJ8YOVJ0aHLWfr9XsQV"],[4,4292269782],99],[14,1,-422,[0,"15c9SpJ2NMoL8cA3BPFOEm"],[4,4292269782],[4,4282466625],-421,100],[15,-423]],[1,80,0,0]],[3,"MaiFu",512,33554432,2,[-430],[[1,-425,[0,"8cf+DCxXxHWJJWUja/IiHY"],[5,150,110]],[6,1,0,-426,[0,"1eB6+YGjdFOKVZYeL4Ph8T"],[4,4292269782],102],[14,1,-428,[0,"c1CfnFac9LZrCaXCO1/uyn"],[4,4292269782],[4,4282466625],-427,103],[15,-429]],[1,240,0,0]],[3,"GongJi",512,33554432,2,[-436],[[1,-431,[0,"8epYB7TfZI86+hZEVvMz/N"],[5,150,110]],[6,1,0,-432,[0,"a9pBmhOVZLP7A0fGgSBg8O"],[4,4292269782],105],[14,1,-434,[0,"c1Ewgn6hBKcp/15/bsjoz/"],[4,4292269782],[4,4282466625],-433,106],[15,-435]],[1,400,0,0]],[3,"TanSuo",512,33554432,2,[-442],[[1,-437,[0,"74dcrJKtBI4ojwABTtCo2u"],[5,150,110]],[6,1,0,-438,[0,"18gL201yJPqaNxbYmZ4gkQ"],[4,4292269782],108],[14,1,-440,[0,"c2klb5V/tNUp75Iko26gjP"],[4,4292269782],[4,4282466625],-439,109],[15,-441]],[1,-400,-130,0]],[3,"YiHe",512,33554432,2,[-448],[[1,-443,[0,"1chKx/5nVEbrc4RXjzbxvm"],[5,150,110]],[6,1,0,-444,[0,"cd3Zf2NWdIVZMqR4UifAIp"],[4,4292269782],111],[14,1,-446,[0,"dbbRfcYaxHeaMh0xPSQsk6"],[4,4292269782],[4,4282466625],-445,112],[15,-447]],[1,-240,-130,0]],[3,"JiangLi",512,33554432,2,[-454],[[1,-449,[0,"e8OlMXseNEnL/vVBJQqECD"],[5,150,110]],[6,1,0,-450,[0,"17uedYpZZFZoQDsc2WoHuc"],[4,4292269782],114],[14,1,-452,[0,"001hdOn2VAhJhVwOUQeazQ"],[4,4292269782],[4,4282466625],-451,115],[15,-453]],[1,-80,-130,0]],[3,"LiuFang",512,33554432,2,[-460],[[1,-455,[0,"aeNrtfIzVOBrrW+4DbP0u0"],[5,150,110]],[6,1,0,-456,[0,"5aJJzzGLJO5qZZo97pLaxe"],[4,4292269782],117],[14,1,-458,[0,"e9Kg1KtEpPpI2Y0OkYcDGe"],[4,4292269782],[4,4282466625],-457,118],[15,-459]],[1,80,-130,0]],[3,"LiJian",512,33554432,2,[-466],[[1,-461,[0,"04LqMlZP9Gs6BQf+/9jsWF"],[5,150,110]],[6,1,0,-462,[0,"08gEX7xdNIc6iCeztmDnv3"],[4,4292269782],120],[14,1,-464,[0,"11G/BOkjhF2YUb29G+51Nk"],[4,4292269782],[4,4282466625],-463,121],[15,-465]],[1,240,-130,0]],[3,"ZhuanYi",512,33554432,2,[-472],[[1,-467,[0,"e14RyTxXhPo4ijvTxXKdT1"],[5,150,110]],[6,1,0,-468,[0,"08FsPjBXhI5KXK+RXLL2Lu"],[4,4292269782],123],[14,1,-470,[0,"72z4n1Zc1Oroi9O6B382IJ"],[4,4292269782],[4,4282466625],-469,124],[15,-471]],[1,400,-130,0]],[3,"ChuJue",512,33554432,2,[-478],[[1,-473,[0,"f5AytewGlO0onFoERF6NXV"],[5,150,110]],[6,1,0,-474,[0,"d5ok6KPolIlYSsIJwYq5cp"],[4,4292269782],126],[14,1,-476,[0,"489Vt3WuFOWZO39yb6rKVw"],[4,4292269782],[4,4282466625],-475,127],[15,-477]],[1,-400,-260,0]],[3,"QuanXiang",512,33554432,2,[-484],[[1,-479,[0,"a4eJqk/kVGrpckRSuFq0Cr"],[5,150,110]],[6,1,0,-480,[0,"3btES+UU1HG4eqXOW4V/th"],[4,4292269782],129],[14,1,-482,[0,"19EYpgf89GyJLSIpgWuZ/1"],[4,4292269782],[4,4282466625],-481,130],[15,-483]],[1,-240,-260,0]],[3,"WeiZhi-001",512,33554432,2,[-490],[[1,-485,[0,"a4eJqk/kVGrpckRSuFq0Cr"],[5,150,110]],[6,1,0,-486,[0,"3btES+UU1HG4eqXOW4V/th"],[4,4292269782],132],[14,1,-488,[0,"19EYpgf89GyJLSIpgWuZ/1"],[4,4292269782],[4,4282466625],-487,133],[15,-489]],[1,-80,-260,0]],[3,"WeiZhi-002",512,33554432,2,[-496],[[1,-491,[0,"a4eJqk/kVGrpckRSuFq0Cr"],[5,150,110]],[6,1,0,-492,[0,"3btES+UU1HG4eqXOW4V/th"],[4,4292269782],135],[14,1,-494,[0,"19EYpgf89GyJLSIpgWuZ/1"],[4,4292269782],[4,4282466625],-493,136],[15,-495]],[1,80,-260,0]],[3,"WeiZhi-003",512,33554432,2,[-502],[[1,-497,[0,"a4eJqk/kVGrpckRSuFq0Cr"],[5,150,110]],[6,1,0,-498,[0,"3btES+UU1HG4eqXOW4V/th"],[4,4292269782],138],[14,1,-500,[0,"19EYpgf89GyJLSIpgWuZ/1"],[4,4292269782],[4,4282466625],-499,139],[15,-501]],[1,240,-260,0]],[3,"XingXi",512,33554432,2,[-508],[[1,-503,[0,"a4eJqk/kVGrpckRSuFq0Cr"],[5,150,110]],[6,1,0,-504,[0,"3btES+UU1HG4eqXOW4V/th"],[4,4292269782],141],[14,1,-506,[0,"19EYpgf89GyJLSIpgWuZ/1"],[4,4292269782],[4,4282466625],-505,142],[15,-507]],[1,400,-260,0]],[3,"Ok",512,33554432,9,[-514],[[1,-509,[0,"cbx7ppkXRIFJUKhVqfVK5X"],[5,160,100]],[6,1,0,-510,[0,"56ROAerN5N2J3fbKUnM+OT"],[4,4292269782],149],[13,1,-512,[0,"b3PnVYdy9HrI8jQO6M4QMs"],[[12,"d0a193veX5KUJlB76XpF002","ok",1]],[4,4292269782],-511,150],[26,20,55,120,-513,[0,"32b4mY/tVLf6+sIscfzg++"]]],[1,120,-245,0]],[3,"Cancel",512,33554432,9,[-520],[[1,-515,[0,"cbx7ppkXRIFJUKhVqfVK5X"],[5,160,100]],[6,1,0,-516,[0,"56ROAerN5N2J3fbKUnM+OT"],[4,4292269782],152],[38,1,-518,[0,"b3PnVYdy9HrI8jQO6M4QMs"],[4,4292269782],-517,153],[26,20,55,-120,-519,[0,"32b4mY/tVLf6+sIscfzg++"]]],[1,-120,-245,0]],[18,"SelectEntityPannel",512,false,33554432,1,[-522,-523,-524,-525,-526],[[11,-521,[0,"7fTnall6dGRJRUXDvxfnf5"]]]],[42,"Ok",512,false,33554432,62,[-532],[[1,-527,[0,"adulv6eolIzq+lUxTzX8Et"],[5,160,110]],[6,1,0,-528,[0,"9d1ccKf1VFS7P0rogUM5x6"],[4,4292269782],189],[71,1,-530,[0,"86fN0sM1pFxKmDV5WAfiI5"],[[12,"112efbsavxHt4x/S3z8KvCo","ok",1]],[4,4292269782],-529,190,191,192,193],[45,12,295,90,300,-531,[0,"2aWqqKzOxA/bg3FXAuy9fi"],1]],[1,-585,-395,0]],[3,"Cancel",512,33554432,62,[-538],[[1,-533,[0,"f6xEyilwNK9Imxw8Hx31UQ"],[5,160,110]],[6,1,0,-534,[0,"48U6J2l+ZBFLG21fLqCcMD"],[4,4292269782],195],[13,1,-536,[0,"6bT8jCPIRCtpFgHKR6Z7mL"],[[12,"112efbsavxHt4x/S3z8KvCo","cancel",1]],[4,4292269782],-535,196],[45,12,95,90,300,-537,[0,"1bdm3kdPVOaJK0vMcb2o7R"],1]],[1,-785,-395,0]],[18,"SelectPosPannel",512,false,33554432,1,[-540,-541,-542,-543,-544],[[11,-539,[0,"7fTnall6dGRJRUXDvxfnf5"]]]],[42,"Ok",512,false,33554432,65,[-550],[[1,-545,[0,"adulv6eolIzq+lUxTzX8Et"],[5,160,110]],[6,1,0,-546,[0,"9d1ccKf1VFS7P0rogUM5x6"],[4,4292269782],201],[71,1,-548,[0,"86fN0sM1pFxKmDV5WAfiI5"],[[12,"2d389DbUWFMUKLvkpe+51LN","ok",1]],[4,4292269782],-547,202,203,204,205],[45,12,295,90,300,-549,[0,"2aWqqKzOxA/bg3FXAuy9fi"],1]],[1,-585,-395,0]],[3,"Cancel",512,33554432,65,[-556],[[1,-551,[0,"f6xEyilwNK9Imxw8Hx31UQ"],[5,160,110]],[6,1,0,-552,[0,"48U6J2l+ZBFLG21fLqCcMD"],[4,4292269782],207],[13,1,-554,[0,"6bT8jCPIRCtpFgHKR6Z7mL"],[[12,"2d389DbUWFMUKLvkpe+51LN","cancel",1]],[4,4292269782],-553,208],[45,12,95,90,300,-555,[0,"1bdm3kdPVOaJK0vMcb2o7R"],1]],[1,-785,-395,0]],[3,"Ok",512,33554432,11,[-562],[[1,-557,[0,"cbx7ppkXRIFJUKhVqfVK5X"],[5,160,100]],[6,1,0,-558,[0,"56ROAerN5N2J3fbKUnM+OT"],[4,4292269782],214],[13,1,-560,[0,"b3PnVYdy9HrI8jQO6M4QMs"],[[12,"8912bcg9PBJyYlAycwLwv0w","ok",1]],[4,4292269782],-559,215],[26,20,105,120,-561,[0,"32b4mY/tVLf6+sIscfzg++"]]],[1,120,-195,0]],[3,"Cancel",512,33554432,11,[-568],[[1,-563,[0,"cbx7ppkXRIFJUKhVqfVK5X"],[5,160,100]],[6,1,0,-564,[0,"56ROAerN5N2J3fbKUnM+OT"],[4,4292269782],237],[38,1,-566,[0,"b3PnVYdy9HrI8jQO6M4QMs"],[4,4292269782],-565,238],[26,20,105,-120,-567,[0,"32b4mY/tVLf6+sIscfzg++"]]],[1,-120,-195,0]],[3,"Ok",512,33554432,12,[-574],[[1,-569,[0,"e9BQ6zJKpKL4ijwOxeItDj"],[5,160,100]],[6,1,0,-570,[0,"0dwyse+PFKtYTm8ACJaDqS"],[4,4292269782],251],[13,1,-572,[0,"a3n/ZPEw1Ls7FnirCKA7l0"],[[12,"c58005x9MhMOKjSx/GDWT6b","ok",1]],[4,4292269782],-571,252],[26,20,170,120,-573,[0,"55zCFQCApISqIq1dL7sdo+"]]],[1,120,-130,0]],[3,"Cancel",512,33554432,12,[-580],[[1,-575,[0,"e9BQ6zJKpKL4ijwOxeItDj"],[5,160,100]],[6,1,0,-576,[0,"0dwyse+PFKtYTm8ACJaDqS"],[4,4292269782],263],[38,1,-578,[0,"a3n/ZPEw1Ls7FnirCKA7l0"],[4,4292269782],-577,264],[26,20,170,-120,-579,[0,"55zCFQCApISqIq1dL7sdo+"]]],[1,-120,-130,0]],[59,"Items",33554432,19,[-582,-583,-584,-585,-586],[[50,-581]]],[3,"Up",512,33554432,19,[-592],[[1,-587,[0,"e9BQ6zJKpKL4ijwOxeItDj"],[5,200,100]],[6,1,0,-588,[0,"0dwyse+PFKtYTm8ACJaDqS"],[4,4292269782],468],[72,1,-590,[0,"a3n/ZPEw1Ls7FnirCKA7l0"],[[12,"d4547TMjx9Jz4q5XMOHQkvb","up",1]],[4,4292269782],[4,4282006074],-589,469],[26,20,-110,-200,-591,[0,"55zCFQCApISqIq1dL7sdo+"]]],[1,-200,-480,0]],[3,"Down",512,33554432,19,[-598],[[1,-593,[0,"e9BQ6zJKpKL4ijwOxeItDj"],[5,200,100]],[6,1,0,-594,[0,"0dwyse+PFKtYTm8ACJaDqS"],[4,4292269782],471],[72,1,-596,[0,"a3n/ZPEw1Ls7FnirCKA7l0"],[[12,"d4547TMjx9Jz4q5XMOHQkvb","down",1]],[4,4292269782],[4,4282795590],-595,472],[26,20,-110,200,-597,[0,"55zCFQCApISqIq1dL7sdo+"]]],[1,200,-480,0]],[3,"Ok",512,33554432,15,[-603],[[1,-599,[0,"7aAtS9oThPLoU2n3mKeRMM"],[5,150,110]],[6,1,0,-600,[0,"90+0GVarxKOpsFCm53UFbl"],[4,4292269782],44],[13,1,-602,[0,"2bDfg4tL5PBr9PKsVxGHiQ"],[[12,"f20fd898CZD3aAk7QWlvUUN","ok",1]],[4,4292269782],-601,45]],[1,200,-460,0]],[3,"Close",512,33554432,15,[-608],[[1,-604,[0,"7aAtS9oThPLoU2n3mKeRMM"],[5,150,110]],[6,1,0,-605,[0,"90+0GVarxKOpsFCm53UFbl"],[4,4292269782],47],[13,1,-607,[0,"2bDfg4tL5PBr9PKsVxGHiQ"],[[12,"f20fd898CZD3aAk7QWlvUUN","close",1]],[4,4292269782],-606,48]],[1,-200,-460,0]],[3,"Toggle1",512,33554432,7,[-614],[[1,-609,[0,"02HN/NFOFHFJovX0g8Ict2"],[5,50,50]],[7,0,-610,[0,"faFsHJIohBOLA2d1QgPkoU"],154],[74,-613,[0,"f6VWkm8W5Opon7W5Tlm0K1"],[4,4292269782],-612,-611,155]],[1,-205.777,0,0]],[3,"Toggle2",512,33554432,7,[-620],[[1,-615,[0,"75UdI2TS5JwYhkKKyPbUcc"],[5,50,50]],[7,0,-616,[0,"0dninaUKROmov9Gagwv2gc"],156],[39,false,-619,[0,"c3M66Rp15NJ5GCf5lTbmYU"],[4,4292269782],-618,-617,157]],[1,-37.171,0,0]],[3,"Toggle3",512,33554432,7,[-626],[[1,-621,[0,"0bhGDhY69OmK71aiNTgJB1"],[5,50,50]],[7,0,-622,[0,"a3l47NFlBAB4XNTcsAUJ8e"],158],[39,false,-625,[0,"23zxumoxBNZ6FpAQfMottI"],[4,4292269782],-624,-623,159]],[1,133.477,0,0]],[3,"Toggle4",512,33554432,7,[-632],[[1,-627,[0,"a7pHlHvxVMI7W93dhMiAx0"],[5,50,50]],[7,0,-628,[0,"3bjcCgcfBKyK7Vd5diRuBV"],160],[39,false,-631,[0,"82ugApXbBFqrMvF5YrdQ67"],[4,4292269782],-630,-629,161]],[1,311.547,0,0]],[3,"Add",512,33554432,16,[-637],[[1,-633,[0,"cfKWb9cQ5M+5yuzEcdPGJb"],[5,110,90]],[6,1,0,-634,[0,"c4X6njlR9J+quPSEgaRo0M"],[4,4292269782],167],[13,1,-636,[0,"68TWWB9+BHyKfN9g+Y3RUz"],[[12,"d0a193veX5KUJlB76XpF002","add",1]],[4,4292269782],-635,168]],[1,200,0,0]],[3,"Cut",512,33554432,16,[-642],[[1,-638,[0,"e5bS01rA9HYpDJNf+rHPLi"],[5,110,90]],[6,1,0,-639,[0,"d58ohX60xFvKSRDV8Izt1c"],[4,4292269782],169],[13,1,-641,[0,"1chqtABkBFs4+4+hs7kZS4"],[[12,"d0a193veX5KUJlB76XpF002","cut",1]],[4,4292269782],-640,170]],[1,-200,0,0]],[3,"Add2",512,33554432,16,[-647],[[1,-643,[0,"cfKWb9cQ5M+5yuzEcdPGJb"],[5,130,90]],[6,1,0,-644,[0,"c4X6njlR9J+quPSEgaRo0M"],[4,4292269782],171],[13,1,-646,[0,"68TWWB9+BHyKfN9g+Y3RUz"],[[12,"d0a193veX5KUJlB76XpF002","add2",1]],[4,4292269782],-645,172]],[1,340,0,0]],[3,"Cut2",512,33554432,16,[-652],[[1,-648,[0,"e5bS01rA9HYpDJNf+rHPLi"],[5,130,90]],[6,1,0,-649,[0,"d58ohX60xFvKSRDV8Izt1c"],[4,4292269782],173],[13,1,-651,[0,"1chqtABkBFs4+4+hs7kZS4"],[[12,"d0a193veX5KUJlB76XpF002","cut2",1]],[4,4292269782],-650,174]],[1,-340,0,0]],[3,"Add",512,33554432,17,[-657],[[1,-653,[0,"cfKWb9cQ5M+5yuzEcdPGJb"],[5,110,90]],[6,1,0,-654,[0,"c4X6njlR9J+quPSEgaRo0M"],[4,4292269782],176],[13,1,-656,[0,"68TWWB9+BHyKfN9g+Y3RUz"],[[12,"d0a193veX5KUJlB76XpF002","addFood",1]],[4,4292269782],-655,177]],[1,200,0,0]],[3,"Cut",512,33554432,17,[-662],[[1,-658,[0,"e5bS01rA9HYpDJNf+rHPLi"],[5,110,90]],[6,1,0,-659,[0,"d58ohX60xFvKSRDV8Izt1c"],[4,4292269782],178],[13,1,-661,[0,"1chqtABkBFs4+4+hs7kZS4"],[[12,"d0a193veX5KUJlB76XpF002","cutFood",1]],[4,4292269782],-660,179]],[1,-200,0,0]],[3,"Add2",512,33554432,17,[-667],[[1,-663,[0,"cfKWb9cQ5M+5yuzEcdPGJb"],[5,130,90]],[6,1,0,-664,[0,"c4X6njlR9J+quPSEgaRo0M"],[4,4292269782],180],[13,1,-666,[0,"68TWWB9+BHyKfN9g+Y3RUz"],[[12,"d0a193veX5KUJlB76XpF002","addFood2",1]],[4,4292269782],-665,181]],[1,340,0,0]],[3,"Cut2",512,33554432,17,[-672],[[1,-668,[0,"e5bS01rA9HYpDJNf+rHPLi"],[5,130,90]],[6,1,0,-669,[0,"d58ohX60xFvKSRDV8Izt1c"],[4,4292269782],182],[13,1,-671,[0,"1chqtABkBFs4+4+hs7kZS4"],[[12,"d0a193veX5KUJlB76XpF002","cutFood2",1]],[4,4292269782],-670,183]],[1,-340,0,0]],[3,"Toggle2",512,33554432,6,[-678],[[1,-673,[0,"75UdI2TS5JwYhkKKyPbUcc"],[5,60,60]],[7,0,-674,[0,"0dninaUKROmov9Gagwv2gc"],222],[74,-677,[0,"c3M66Rp15NJ5GCf5lTbmYU"],[4,4292269782],-676,-675,223]],[1,-247.593,0,0]],[3,"Toggle3",512,33554432,6,[-684],[[1,-679,[0,"0bhGDhY69OmK71aiNTgJB1"],[5,60,60]],[7,0,-680,[0,"a3l47NFlBAB4XNTcsAUJ8e"],224],[39,false,-683,[0,"23zxumoxBNZ6FpAQfMottI"],[4,4292269782],-682,-681,225]],[1,-47.593,0,0]],[3,"Toggle4",512,33554432,6,[-690],[[1,-685,[0,"a7pHlHvxVMI7W93dhMiAx0"],[5,60,60]],[7,0,-686,[0,"3bjcCgcfBKyK7Vd5diRuBV"],226],[39,false,-689,[0,"82ugApXbBFqrMvF5YrdQ67"],[4,4292269782],-688,-687,227]],[1,152.407,0,0]],[3,"Numbers",512,33554432,11,[-693,-694,-695],[[11,-691,[0,"75mpusVVRH+YQABnMiW0YY"]],[25,17,150,-692,[0,"ecRDTwzwNGUpzKwC87hZtI"]]],[1,0,150,0]],[3,"Add",512,33554432,92,[-700],[[1,-696,[0,"cfKWb9cQ5M+5yuzEcdPGJb"],[5,110,90]],[6,1,0,-697,[0,"c4X6njlR9J+quPSEgaRo0M"],[4,4292269782],232],[13,1,-699,[0,"68TWWB9+BHyKfN9g+Y3RUz"],[[12,"8912bcg9PBJyYlAycwLwv0w","add",1]],[4,4292269782],-698,233]],[1,200,0,0]],[3,"Cut",512,33554432,92,[-705],[[1,-701,[0,"e5bS01rA9HYpDJNf+rHPLi"],[5,110,90]],[6,1,0,-702,[0,"d58ohX60xFvKSRDV8Izt1c"],[4,4292269782],234],[13,1,-704,[0,"1chqtABkBFs4+4+hs7kZS4"],[[12,"8912bcg9PBJyYlAycwLwv0w","cut",1]],[4,4292269782],-703,235]],[1,-200,0,0]],[3,"Add",512,33554432,18,[-710],[[1,-706,[0,"b45PnyqKlMuokCqzLBzeaG"],[5,100,90]],[6,1,0,-707,[0,"c7pR5H7wlLkLpPPxXiIEia"],[4,4292269782],254],[13,1,-709,[0,"a06+Om63lBFJE6X0wDXAfm"],[[12,"c58005x9MhMOKjSx/GDWT6b","add",1]],[4,4292269782],-708,255]],[1,200,0,0]],[3,"Cut",512,33554432,18,[-715],[[1,-711,[0,"06Z99ZWzxDnLy6UWFlVELt"],[5,100,90]],[6,1,0,-712,[0,"94NGCPrYxDPZi6W5JO7nBi"],[4,4292269782],256],[13,1,-714,[0,"bayHrHyJVNC5y9GVrJmV6t"],[[12,"c58005x9MhMOKjSx/GDWT6b","cut",1]],[4,4292269782],-713,257]],[1,-200,0,0]],[3,"Add2",512,33554432,18,[-720],[[1,-716,[0,"b45PnyqKlMuokCqzLBzeaG"],[5,130,90]],[6,1,0,-717,[0,"c7pR5H7wlLkLpPPxXiIEia"],[4,4292269782],258],[13,1,-719,[0,"a06+Om63lBFJE6X0wDXAfm"],[[12,"c58005x9MhMOKjSx/GDWT6b","add2",1]],[4,4292269782],-718,259]],[1,330,0,0]],[3,"Cut2",512,33554432,18,[-725],[[1,-721,[0,"06Z99ZWzxDnLy6UWFlVELt"],[5,130,90]],[6,1,0,-722,[0,"94NGCPrYxDPZi6W5JO7nBi"],[4,4292269782],260],[13,1,-724,[0,"bayHrHyJVNC5y9GVrJmV6t"],[[12,"c58005x9MhMOKjSx/GDWT6b","cut2",1]],[4,4292269782],-723,261]],[1,-330,0,0]],[20,"Pannel",512,33554432,[-730],[[1,-726,[0,"e78XxrvehFmplTYvYj2vfm"],[5,1020,770]],[17,1,0,-727,[0,"9301Vylf9JcYh1tpnwX6ep"],271],[70,false,-729,[0,"2akEqVHiRBVodVMGcAcfjT"],[4,4292269782],-728,272]]],[20,"Pannel",512,33554432,[-734,3],[[1,-731,[0,"50ETWLasZB1Jbz1YAmNAn+"],[5,1100,800]],[29,-733,[0,"c2p5dngYBPZo8+VMFIlE9U"],[4,4292269782],-732]]],[10,"Data1",512,3,[-736,-737,-738,-739],[[9,-735,[5,0,0]]],[1,-450,160,0]],[10,"Data2",512,3,[-741,-742,-743,-744],[[9,-740,[5,0,0]]],[1,-450,90,0]],[10,"Data3",512,3,[-746,-747,-748,-749],[[9,-745,[5,0,0]]],[1,-450,20,0]],[10,"Data4",512,3,[-751,-752,-753,-754],[[9,-750,[5,0,0]]],[1,-450,-50,0]],[10,"Data5",512,3,[-756,-757,-758,-759],[[9,-755,[5,0,0]]],[1,-450,-120,0]],[10,"Data6",512,3,[-761,-762,-763,-764],[[9,-760,[5,0,0]]],[1,-73.534,160,0]],[10,"Data7",512,3,[-766,-767,-768,-769],[[9,-765,[5,0,0]]],[1,-73.534,90,0]],[10,"Data8",512,3,[-771,-772,-773,-774],[[9,-770,[5,0,0]]],[1,-73.534,20,0]],[10,"Data9",512,3,[-776,-777,-778,-779],[[9,-775,[5,0,0]]],[1,-73.534,-50,0]],[10,"Data10",512,3,[-781,-782,-783,-784],[[9,-780,[5,0,0]]],[1,-73.534,-120,0]],[10,"Data11",512,3,[-786,-787,-788,-789],[[9,-785,[5,0,0]]],[1,293.152,160,0]],[10,"Data12",512,3,[-791,-792,-793,-794],[[9,-790,[5,0,0]]],[1,293.152,90,0]],[10,"Data13",512,3,[-796,-797,-798,-799],[[9,-795,[5,0,0]]],[1,293.152,20,0]],[10,"Data14",512,3,[-801,-802,-803,-804],[[9,-800,[5,0,0]]],[1,293.152,-50,0]],[10,"Data15",512,3,[-806,-807,-808,-809],[[9,-805,[5,0,0]]],[1,293.152,-120,0]],[20,"Pannel",512,33554432,[-813,4],[[1,-810,[0,"50ETWLasZB1Jbz1YAmNAn+"],[5,1000,700]],[29,-812,[0,"c2p5dngYBPZo8+VMFIlE9U"],[4,4292269782],-811]]],[10,"Data1",512,4,[-815,-816,-817,-818],[[9,-814,[5,0,0]]],[1,-400,247.591,0]],[10,"Data2",512,4,[-820,-821,-822,-823],[[9,-819,[5,0,0]]],[1,-400,177.591,0]],[10,"Data3",512,4,[-825,-826,-827,-828],[[9,-824,[5,0,0]]],[1,-400,107.591,0]],[10,"Data4",512,4,[-830,-831,-832,-833],[[9,-829,[5,0,0]]],[1,-400,37.591,0]],[10,"Data5",512,4,[-835,-836,-837,-838],[[9,-834,[5,0,0]]],[1,-400,-32.409,0]],[10,"Data6",512,4,[-840,-841,-842,-843],[[9,-839,[5,0,0]]],[1,-73.534,247.591,0]],[10,"Data7",512,4,[-845,-846,-847,-848],[[9,-844,[5,0,0]]],[1,-73.534,177.591,0]],[10,"Data8",512,4,[-850,-851,-852,-853],[[9,-849,[5,0,0]]],[1,-73.534,107.591,0]],[10,"Data9",512,4,[-855,-856,-857,-858],[[9,-854,[5,0,0]]],[1,-73.534,37.591,0]],[10,"Data10",512,4,[-860,-861,-862,-863],[[9,-859,[5,0,0]]],[1,-73.534,-32.409,0]],[10,"Data11",512,4,[-865,-866,-867,-868],[[9,-864,[5,0,0]]],[1,250.571,247.591,0]],[10,"Data12",512,4,[-870,-871,-872,-873],[[9,-869,[5,0,0]]],[1,250.571,177.591,0]],[10,"Data13",512,4,[-875,-876,-877,-878],[[9,-874,[5,0,0]]],[1,250.571,107.591,0]],[10,"Data14",512,4,[-880,-881,-882,-883],[[9,-879,[5,0,0]]],[1,250.571,37.591,0]],[10,"Data15",512,4,[-885,-886,-887,-888],[[9,-884,[5,0,0]]],[1,250.571,-32.409,0]],[20,"Pannel",512,33554432,[-891,-892,-893],[[1,-889,[0,"fdUZ4JQghKZI354HuWA8M+"],[5,900,350]],[8,0,-890,[0,"51wzxPzQ9MGJ5zTkh0YkfJ"],[4,4278197031],442]]],[20,"Pannel",512,33554432,[-897,13],[[1,-894,[0,"50ETWLasZB1Jbz1YAmNAn+"],[5,960,640]],[29,-896,[0,"c2p5dngYBPZo8+VMFIlE9U"],[4,4292269782],-895]]],[3,"Ok",512,33554432,13,[-902],[[1,-898,[0,"98TYGMtwRBTYZZn4EZmhzJ"],[5,150,80]],[6,1,0,-899,[0,"77BcV1zfNHo4LI4KRqZupe"],[4,4292269782],500],[13,1,-901,[0,"2fOwBXUwBNvaJ4NyyrOq4C"],[[12,"a305chztDJCIZvvkEe271W/","ok",1]],[4,4292269782],-900,501]],[1,0,-192.437,0]],[3,"Yes",512,33554432,20,[-907],[[1,-903,[0,"23YIzB1jlCAq2yHW8njDaw"],[5,180,110]],[6,1,0,-904,[0,"b8N7rdeWlKAYMgrutvEkX5"],[4,4292269782],510],[38,1,-906,[0,"774ZN43RlAx4DED2VZOM+i"],[4,4292269782],-905,511]],[1,120,-120,0]],[3,"No",512,33554432,20,[-912],[[1,-908,[0,"25iFTEGFRN7abo/eaAixoU"],[5,180,110]],[6,1,0,-909,[0,"82yrY0tGRKsJ0G85S+OBSa"],[4,4292269782],513],[38,1,-911,[0,"2elJlbNFxI0INzHKXmsq2f"],[4,4292269782],-910,514]],[1,-120,-120,0]],[20,"Pannel",512,33554432,[-916,10],[[1,-913,[0,"50ETWLasZB1Jbz1YAmNAn+"],[5,800,600]],[29,-915,[0,"c2p5dngYBPZo8+VMFIlE9U"],[4,4292269782],-914]]],[10,"Data1",512,10,[-918,-919,-920,-921],[[9,-917,[5,0,0]]],[1,-265.866,231.779,0]],[10,"Data2",512,10,[-923,-924,-925,-926],[[9,-922,[5,0,0]]],[1,-265.866,135.257,0]],[10,"Data3",512,10,[-928,-929,-930,-931],[[9,-927,[5,0,0]]],[1,89.226,232.92,0]],[10,"Data4",512,10,[-933,-934,-935,-936],[[9,-932,[5,0,0]]],[1,89.226,136.398,0]],[3,"Ok",512,33554432,10,[-941],[[1,-937,[0,"98TYGMtwRBTYZZn4EZmhzJ"],[5,150,90]],[6,1,0,-938,[0,"77BcV1zfNHo4LI4KRqZupe"],[4,4292269782],552],[13,1,-940,[0,"2fOwBXUwBNvaJ4NyyrOq4C"],[[12,"64ebfBjuHFKhq/fkgDxdrxl","ok",1]],[4,4292269782],-939,553]],[1,200,-165.431,0]],[3,"Cancel",512,33554432,10,[-946],[[1,-942,[0,"98TYGMtwRBTYZZn4EZmhzJ"],[5,150,90]],[6,1,0,-943,[0,"77BcV1zfNHo4LI4KRqZupe"],[4,4292269782],555],[13,1,-945,[0,"2fOwBXUwBNvaJ4NyyrOq4C"],[[12,"64ebfBjuHFKhq/fkgDxdrxl","cancel",1]],[4,4292269782],-944,556]],[1,-200,-165.431,0]],[3,"EntityInfo",512,33554432,1,[-949,-950],[[23,-947,[0,"34ZN3peA5FLqABLEYYksXL"],[5,1500,50],[0,0,0.5]],[93,12,-948,[0,"6d0LVLIEFDm76kNckum4cy"]]],[1,-960,-515,0]],[3,"MyInfo",512,33554432,1,[-953,-954],[[23,-951,[0,"19/4pKbvpAQ6iBLjTz01ii"],[5,1500,50],[0,1,0.5]],[94,33,50,50,-952,[0,"b9ZpZBXXNIspzq5NrDhYZ6"]]],[1,910,515,0]],[3,"Mask",512,33554432,1,[-958],[[1,-955,[0,"c0YDMfTTdD74LJTJbReAQ9"],[5,60,60]],[129,1,true,-956,[0,"8fRUxyU7JP5Yz6+nFVm02j"]],[64,36,60,60,-957,[0,"d3IfpA/stFj6CVZGhS3NTB"]]],[1,870,-450,0]],[18,"Cover",512,false,33554432,1,[-962],[[1,-959,[0,"f7NISe7HdAD68SLfhnddy8"],[5,1920,1080]],[7,0,-960,[0,"e71ctEmpxFC4KlSYRZNz/a"],38],[95,45,1343,754,-961]]],[18,"PeopleSelectPannel",512,false,33554432,1,[-965,15],[[11,-963,[0,"eb5HFTk4RLRpdbGH8bz1MB"]],[52,18,1030,1030,100,-964,[0,"ecTLDqt5pI4JcvrxpMtetT"]]]],[2,"Bg",512,33554432,148,[[1,-966,[0,"603b11jEZOQo79CCPBQrlb"],[5,3000,1500]],[8,0,-967,[0,"06+OQGXdxCZLIQyHr/Eret"],[4,1677721600],39],[19,-969,[0,"2aWB/2dLhGHIIu4UuSmX3L"],[4,4292269782],-968,40]]],[28,"ScrollView",512,33554432,15,[-974],[[1,-970,[0,"b8ClkqsIxOU5m6fKMx6mx7"],[5,1000,750]],[67,false,1,0,-971,[0,"e7b3E+BWpJ3aXvFDifgNkP"],[4,4278197031],42],[55,0.23,0.75,false,-973,[0,"0b3hFEreREXrpvNO+JYxJN"],-972]]],[18,"EntityOrderPannel",512,false,33554432,1,[-977,2],[[11,-975,[0,"6egJUdibBNwpoWcpMNLegP"]],[52,18,1030,1030,100,-976,[0,"aaW2a9RdRLJqOjpnudRnD7"]]]],[2,"Bg",512,33554432,151,[[1,-978,[0,"a1/Uz4gDpJWrtYuxelfs2P"],[5,3000,1500]],[8,0,-979,[0,"6cHa+zeJhPNqzJ/mv15m4k"],[4,1677721600],51],[29,-981,[0,"5fP9lZ+AdDi4hE5DRbYZAO"],[4,4292269782],-980]]],[21,"Bg",512,33554432,[[1,-982,[0,"f7a3fHnRlPXKT/Myjjly4W"],[5,3000,1500]],[8,0,-983,[0,"4eCaV7vQxMUa5w5wydpkQW"],[4,1677721600],145],[19,-985,[0,"88gN/Y0lFFHpsqckj4iRcM"],[4,4292269782],-984,146]]],[21,"Bg",512,33554432,[[1,-986,[0,"f7a3fHnRlPXKT/Myjjly4W"],[5,3000,1500]],[8,0,-987,[0,"4eCaV7vQxMUa5w5wydpkQW"],[4,335544320],210],[19,-989,[0,"88gN/Y0lFFHpsqckj4iRcM"],[4,4292269782],-988,211]]],[21,"Bg",512,33554432,[[1,-990,[0,"93m8yjWulM4ptYkXmOr578"],[5,3000,1500]],[8,0,-991,[0,"de9F8/Ni9GUaAaHhdc6tEg"],[4,1677721600],241],[19,-993,[0,"f5AqQ6GR9Gs4j/Px0IneGr"],[4,4292269782],-992,242]]],[20,"Pannel",512,33554432,[-996,-997],[[1,-994,[0,"d4EUy5rt9GzJRmAMjoGaQ6"],[5,900,500]],[8,0,-995,[0,"f5DODqoAlP8rwpVMrd2bXb"],[4,4278197031],246]]],[21,"Bg",512,33554432,[[1,-998,[0,"78I+veoEpAuLPdv6bdLwa9"],[5,3000,1500]],[8,0,-999,[0,"e3bqAxCC5K+K8P/zV2IdDc"],[4,1677721600],247],[19,-1001,[0,"8eIhleMzRF3L6LXP45o7ha"],[4,4292269782],-1000,248]]],[18,"InfoShowPannel",512,false,33554432,1,[-1004,99],[[11,-1002,[0,"eb5HFTk4RLRpdbGH8bz1MB"]],[52,18,1030,1030,100,-1003,[0,"ecTLDqt5pI4JcvrxpMtetT"]]]],[2,"Bg",512,33554432,158,[[1,-1005,[0,"603b11jEZOQo79CCPBQrlb"],[5,3000,1500]],[8,0,-1006,[0,"06+OQGXdxCZLIQyHr/Eret"],[4,1677721600],267],[19,-1008,[0,"2aWB/2dLhGHIIu4UuSmX3L"],[4,4292269782],-1007,268]]],[28,"ScrollView",512,33554432,99,[-1013],[[1,-1009,[0,"b8ClkqsIxOU5m6fKMx6mx7"],[5,1000,750]],[116,false,1,0,-1010,[0,"e7b3E+BWpJ3aXvFDifgNkP"],270],[55,0.23,0.75,false,-1012,[0,"0b3hFEreREXrpvNO+JYxJN"],-1011]]],[21,"Bg",512,33554432,[[1,-1014,[0,"78I+veoEpAuLPdv6bdLwa9"],[5,3000,1500]],[8,0,-1015,[0,"e3bqAxCC5K+K8P/zV2IdDc"],[4,1677721600],273],[19,-1017,[0,"8eIhleMzRF3L6LXP45o7ha"],[4,4292269782],-1016,274]]],[21,"Bg",512,33554432,[[1,-1018,[0,"78I+veoEpAuLPdv6bdLwa9"],[5,3000,1500]],[8,0,-1019,[0,"e3bqAxCC5K+K8P/zV2IdDc"],[4,3120562176],367],[19,-1021,[0,"8eIhleMzRF3L6LXP45o7ha"],[4,4292269782],-1020,368]]],[21,"Bg",512,33554432,[[1,-1022,[0,"64EuSIp19H54VAgtBJQfKI"],[5,3000,1500]],[8,0,-1023,[0,"1eVGu8Sh5DtJFFyYsdnG3J"],[4,1677721600],436],[19,-1025,[0,"a5rIP0NAVGHo/dUhZGcgN0"],[4,4292269782],-1024,437]]],[21,"Bg",512,33554432,[[1,-1026,[0,"64EuSIp19H54VAgtBJQfKI"],[5,3000,1500]],[8,0,-1027,[0,"1eVGu8Sh5DtJFFyYsdnG3J"],[4,1677721600],443],[19,-1029,[0,"a5rIP0NAVGHo/dUhZGcgN0"],[4,4292269782],-1028,444]]],[20,"Pannel",512,33554432,[-1031,-1032,-1033],[[1,-1030,[0,"fdUZ4JQghKZI354HuWA8M+"],[5,900,900]]]],[21,"Bg",512,33554432,[[1,-1034,[0,"64EuSIp19H54VAgtBJQfKI"],[5,3000,1500]],[8,0,-1035,[0,"1eVGu8Sh5DtJFFyYsdnG3J"],[4,1677721600],449],[19,-1037,[0,"a5rIP0NAVGHo/dUhZGcgN0"],[4,4292269782],-1036,450]]],[21,"Bg",512,33554432,[[1,-1038,[0,"64EuSIp19H54VAgtBJQfKI"],[5,3000,1500]],[8,0,-1039,[0,"1eVGu8Sh5DtJFFyYsdnG3J"],[4,1677721600],474],[29,-1041,[0,"a5rIP0NAVGHo/dUhZGcgN0"],[4,4292269782],-1040]]],[20,"Pannel",512,33554432,[-1044,-1045],[[1,-1042,[0,"fdUZ4JQghKZI354HuWA8M+"],[5,1100,800]],[68,false,0,-1043,[0,"51wzxPzQ9MGJ5zTkh0YkfJ"],477]]],[28,"ScrollView",512,33554432,168,[-1050],[[1,-1046,[0,"71kmounFRG/K27WWBbH2RB"],[5,1000,720]],[67,false,1,0,-1047,[0,"8ce2Xg/B9GhY0DNafD/vxa"],[4,4278197031],476],[55,0.23,0.75,false,-1049,[0,"a8UaPDxYhIX5MrqvKGMJdR"],-1048]]],[21,"Bg",512,33554432,[[1,-1051,[0,"78I+veoEpAuLPdv6bdLwa9"],[5,3000,1500]],[8,0,-1052,[0,"e3bqAxCC5K+K8P/zV2IdDc"],[4,3120562176],478],[19,-1054,[0,"8eIhleMzRF3L6LXP45o7ha"],[4,4292269782],-1053,479]]],[21,"Bg",512,33554432,[[1,-1055,[0,"f4OwX4pH1LFpMC4LtIpD2C"],[5,3000,1500]],[8,0,-1056,[0,"bbsfmaUrlNt4vzUqo6Cp4Z"],[4,1677721600],502],[19,-1058,[0,"f2F05cxyZOKYAg79br2zEi"],[4,4292269782],-1057,503]]],[21,"Bg",512,33554432,[[1,-1059,[0,"78I+veoEpAuLPdv6bdLwa9"],[5,3000,1500]],[8,0,-1060,[0,"e3bqAxCC5K+K8P/zV2IdDc"],[4,3120562176],516],[19,-1062,[0,"8eIhleMzRF3L6LXP45o7ha"],[4,4292269782],-1061,517]]],[21,"Bg",512,33554432,[[1,-1063,[0,"78I+veoEpAuLPdv6bdLwa9"],[5,3000,1500]],[8,0,-1064,[0,"e3bqAxCC5K+K8P/zV2IdDc"],[4,3120562176],557],[19,-1066,[0,"8eIhleMzRF3L6LXP45o7ha"],[4,4292269782],-1065,558]]],[42,"Toast",512,false,33554432,1,[-1069,-1070],[[11,-1067,[0,"19xFpOnNZGQIG4BLQ+NDmQ"]],[96,20,90,-1068,[0,"6bFoeKASNDQZWxPFAzN+Yb"]]],[1,0,-400,0]],[28,"Mask",512,33554432,150,[-1073],[[1,-1071,[0,"63CPmRjERH1r2DSKVIEiBs"],[5,1000,750]],[54,-1072,[0,"78WghCHK5JapZ2u+s7KoxG"]]]],[4,"Content",512,33554432,175,[[23,-1074,[0,"41/ZBSQDVHN7W9f4IuSZ2r"],[5,1000,2000],[0,0,1]],[117,false,0,-1075,[0,"6d77ezfsRI463zHKu6N42s"],[4,4278197031],41]],[1,-500,375,0]],[18,"SelectArmyPannel",512,false,33554432,1,[153,9],[[11,-1076,[0,"ca2OH5F9hOKL2ycxF3/EyT"]]]],[4,"Title",512,33554432,62,[[23,-1077,[0,"6botpwCulPn5vkCHQB16bj"],[5,600,63],[0,0,0.5]],[33,"请选择一个箭头指示的目标",50,50,50,false,-1078,[0,"77siwbdpRI9bQq8C7Wdd62"],187],[65,9,150,50,108.5,63,-1079,[0,"d5ZyGpPk5HtKtNMg4UsD6W"],1]],[1,-810,458.5,0]],[4,"Label",512,33554432,62,[[1,-1080,[0,"6botpwCulPn5vkCHQB16bj"],[5,0,63]],[33,"",50,50,50,false,-1081,[0,"77siwbdpRI9bQq8C7Wdd62"],197],[66,20,208.5,-1082,[0,"d5ZyGpPk5HtKtNMg4UsD6W"],1]],[1,0,-300,0]],[4,"Title",512,33554432,65,[[23,-1083,[0,"6botpwCulPn5vkCHQB16bj"],[5,600,63],[0,0,0.5]],[33,"请选择红色区域的任意位置",50,50,50,false,-1084,[0,"77siwbdpRI9bQq8C7Wdd62"],199],[65,9,150,50,108.5,63,-1085,[0,"d5ZyGpPk5HtKtNMg4UsD6W"],1]],[1,-810,458.5,0]],[4,"Label",512,33554432,65,[[1,-1086,[0,"6botpwCulPn5vkCHQB16bj"],[5,0,63]],[33,"",50,50,50,false,-1087,[0,"77siwbdpRI9bQq8C7Wdd62"],209],[66,20,208.5,-1088,[0,"d5ZyGpPk5HtKtNMg4UsD6W"],1]],[1,0,-300,0]],[18,"TrainArmyPannel",512,false,33554432,1,[154,11],[[11,-1089,[0,"ca2OH5F9hOKL2ycxF3/EyT"]]]],[18,"InformationPannel",512,false,33554432,1,[155,156],[[11,-1090,[0,"ffM5wWxidDHoghgNy/L7eT"]]]],[18,"BuyAndSellPannel",512,false,33554432,1,[157,12],[[11,-1091,[0,"96cbMfIfZPu6eHkV07aSlf"]]]],[28,"Mask",512,33554432,160,[-1094],[[1,-1092,[0,"63CPmRjERH1r2DSKVIEiBs"],[5,1000,750]],[54,-1093,[0,"78WghCHK5JapZ2u+s7KoxG"]]]],[4,"Content",512,33554432,185,[[23,-1095,[0,"41/ZBSQDVHN7W9f4IuSZ2r"],[5,1000,2000],[0,0,1]],[68,false,0,-1096,[0,"6d77ezfsRI463zHKu6N42s"],269]],[1,-500,375,0]],[18,"EntityInfoPannel",512,false,33554432,1,[161,100],[[11,-1097,[0,"96cbMfIfZPu6eHkV07aSlf"]]]],[3,"Name",512,33554432,3,[-1100],[[1,-1098,[0,"f7NISe7HdAD68SLfhnddy8"],[5,200,65]],[6,1,0,-1099,[0,"e71ctEmpxFC4KlSYRZNz/a"],[4,4278232550],278]],[1,0,245.927,0]],[3,"StoryFrame",512,33554432,3,[-1103],[[1,-1101,[0,"f7NISe7HdAD68SLfhnddy8"],[5,1010,200]],[17,1,0,-1102,[0,"e71ctEmpxFC4KlSYRZNz/a"],280]],[1,0,-416.755,0]],[28,"Tag",512,33554432,5,[-1106],[[1,-1104,[0,"f7NISe7HdAD68SLfhnddy8"],[5,120,50]],[8,0,-1105,[0,"e71ctEmpxFC4KlSYRZNz/a"],[4,4278214290],342]]],[3,"People0",512,33554432,5,[-1109],[[1,-1107,[0,"f7NISe7HdAD68SLfhnddy8"],[5,135,50]],[7,0,-1108,[0,"e71ctEmpxFC4KlSYRZNz/a"],344]],[1,149.075,0,0]],[3,"People1",512,33554432,5,[-1112],[[1,-1110,[0,"f7NISe7HdAD68SLfhnddy8"],[5,135,50]],[7,0,-1111,[0,"e71ctEmpxFC4KlSYRZNz/a"],346]],[1,294.075,0,0]],[3,"People2",512,33554432,5,[-1115],[[1,-1113,[0,"f7NISe7HdAD68SLfhnddy8"],[5,135,50]],[7,0,-1114,[0,"e71ctEmpxFC4KlSYRZNz/a"],348]],[1,439.075,0,0]],[3,"People3",512,33554432,5,[-1118],[[1,-1116,[0,"f7NISe7HdAD68SLfhnddy8"],[5,135,50]],[7,0,-1117,[0,"e71ctEmpxFC4KlSYRZNz/a"],350]],[1,584.075,0,0]],[3,"People4",512,33554432,5,[-1121],[[1,-1119,[0,"f7NISe7HdAD68SLfhnddy8"],[5,135,50]],[7,0,-1120,[0,"e71ctEmpxFC4KlSYRZNz/a"],352]],[1,729.075,0,0]],[3,"People5",512,33554432,5,[-1124],[[1,-1122,[0,"f7NISe7HdAD68SLfhnddy8"],[5,135,50]],[7,0,-1123,[0,"e71ctEmpxFC4KlSYRZNz/a"],354]],[1,874.075,0,0]],[3,"People6",512,33554432,5,[-1127],[[1,-1125,[0,"f7NISe7HdAD68SLfhnddy8"],[5,135,50]],[7,0,-1126,[0,"e71ctEmpxFC4KlSYRZNz/a"],356]],[1,149.075,-68.566,0]],[3,"People7",512,33554432,5,[-1130],[[1,-1128,[0,"f7NISe7HdAD68SLfhnddy8"],[5,135,50]],[7,0,-1129,[0,"e71ctEmpxFC4KlSYRZNz/a"],358]],[1,294.075,-68.566,0]],[3,"People8",512,33554432,5,[-1133],[[1,-1131,[0,"f7NISe7HdAD68SLfhnddy8"],[5,135,50]],[7,0,-1132,[0,"e71ctEmpxFC4KlSYRZNz/a"],360]],[1,439.075,-68.566,0]],[3,"People9",512,33554432,5,[-1136],[[1,-1134,[0,"f7NISe7HdAD68SLfhnddy8"],[5,135,50]],[7,0,-1135,[0,"e71ctEmpxFC4KlSYRZNz/a"],362]],[1,584.075,-68.566,0]],[3,"People10",512,33554432,5,[-1139],[[1,-1137,[0,"f7NISe7HdAD68SLfhnddy8"],[5,135,50]],[7,0,-1138,[0,"e71ctEmpxFC4KlSYRZNz/a"],364]],[1,729.075,-68.566,0]],[3,"People11",512,33554432,5,[-1142],[[1,-1140,[0,"f7NISe7HdAD68SLfhnddy8"],[5,135,50]],[7,0,-1141,[0,"e71ctEmpxFC4KlSYRZNz/a"],366]],[1,874.075,-68.566,0]],[18,"PeopleInfoPannel",512,false,33554432,1,[162,116],[[11,-1143,[0,"96cbMfIfZPu6eHkV07aSlf"]]]],[3,"Name",512,33554432,4,[-1146],[[1,-1144,[0,"f7NISe7HdAD68SLfhnddy8"],[5,200,65]],[6,1,0,-1145,[0,"e71ctEmpxFC4KlSYRZNz/a"],[4,4278232550],371]],[1,0,345.395,0]],[3,"HeadFrame",512,33554432,4,[-1149],[[1,-1147,[0,"f7NISe7HdAD68SLfhnddy8"],[5,160,200]],[17,1,0,-1148,[0,"e71ctEmpxFC4KlSYRZNz/a"],373]],[1,-383.367,-207.614,0]],[3,"StoryFrame",512,33554432,4,[-1152],[[1,-1150,[0,"f7NISe7HdAD68SLfhnddy8"],[5,750,200]],[17,1,0,-1151,[0,"e71ctEmpxFC4KlSYRZNz/a"],375]],[1,86.456,-207.818,0]],[18,"DialogPannel",512,false,33554432,1,[163,132],[[11,-1153,[0,"1df+2AX0NLKpDCE/6mv1w9"]]]],[18,"MapPannel",512,false,33554432,1,[164,165],[[11,-1154,[0,"1df+2AX0NLKpDCE/6mv1w9"]]]],[4,"Gray",512,33554432,165,[[23,-1155,[0,"55pCbtzR5GbojKMArZkfim"],[5,800,800],[0,0,0]],[120,-1156,[0,"d7mA/fqXRM5rvrJnRjW4eJ"],446],[7,0,-1157,[0,"9fmGjNI65I4o47vHRR6+7S"],447]],[1,-400,-400,0]],[18,"LogPannel",512,false,33554432,1,[166,19],[[11,-1158,[0,"1df+2AX0NLKpDCE/6mv1w9"]]]],[34,"Frame",33554432,[-1161],[[9,-1159,[5,980,150]],[37,1,0,-1160,453]]],[34,"Frame",33554432,[-1164],[[9,-1162,[5,980,150]],[37,1,0,-1163,456]]],[34,"Frame",33554432,[-1167],[[9,-1165,[5,980,150]],[37,1,0,-1166,459]]],[34,"Frame",33554432,[-1170],[[9,-1168,[5,980,150]],[37,1,0,-1169,462]]],[34,"Frame",33554432,[-1173],[[9,-1171,[5,980,150]],[37,1,0,-1172,465]]],[18,"KindomPannel",512,false,33554432,1,[167,168],[[11,-1174,[0,"1df+2AX0NLKpDCE/6mv1w9"]]]],[28,"View",512,33554432,169,[-1177],[[1,-1175,[0,"adVJjE6iNG9YcIKwDKe/zq"],[5,1000,720]],[54,-1176,[0,"4eIg29oQZFVLk+NZnwDdlk"]]]],[18,"CundangSoltPannel",512,false,33554432,1,[170,133],[[11,-1178,[0,"96cbMfIfZPu6eHkV07aSlf"]]]],[3,"Name",512,33554432,13,[-1181],[[1,-1179,[0,"f7NISe7HdAD68SLfhnddy8"],[5,280,65]],[6,1,0,-1180,[0,"e71ctEmpxFC4KlSYRZNz/a"],[4,4278232550],482]],[1,0,350,0]],[10,"Data1",512,13,[-1183,-1184],[[9,-1182,[5,0,0]]],[1,-90,237.563,0]],[3,"Tag",512,33554432,220,[-1187],[[1,-1185,[0,"f7NISe7HdAD68SLfhnddy8"],[5,160,60]],[8,0,-1186,[0,"e71ctEmpxFC4KlSYRZNz/a"],[4,4278214290],484]],[1,-153.18,0,0]],[3,"Frame",512,33554432,220,[-1190],[[1,-1188,[0,"f7NISe7HdAD68SLfhnddy8"],[5,400,60]],[17,1,0,-1189,[0,"e71ctEmpxFC4KlSYRZNz/a"],486]],[1,213.881,0.446,0]],[10,"Data2",512,13,[-1192,-1193],[[9,-1191,[5,0,0]]],[1,-90,137.563,0]],[3,"Tag",512,33554432,223,[-1196],[[1,-1194,[0,"f7NISe7HdAD68SLfhnddy8"],[5,160,60]],[8,0,-1195,[0,"e71ctEmpxFC4KlSYRZNz/a"],[4,4278214290],488]],[1,-153.18,0,0]],[3,"Frame",512,33554432,223,[-1199],[[1,-1197,[0,"f7NISe7HdAD68SLfhnddy8"],[5,400,60]],[17,1,0,-1198,[0,"e71ctEmpxFC4KlSYRZNz/a"],490]],[1,213.881,0.446,0]],[10,"Data3",512,13,[-1201,-1202],[[9,-1200,[5,0,0]]],[1,-90,37.563,0]],[3,"Tag",512,33554432,226,[-1205],[[1,-1203,[0,"f7NISe7HdAD68SLfhnddy8"],[5,160,60]],[8,0,-1204,[0,"e71ctEmpxFC4KlSYRZNz/a"],[4,4278214290],492]],[1,-153.18,0,0]],[3,"Frame",512,33554432,226,[-1208],[[1,-1206,[0,"f7NISe7HdAD68SLfhnddy8"],[5,400,60]],[17,1,0,-1207,[0,"e71ctEmpxFC4KlSYRZNz/a"],494]],[1,213.881,0.446,0]],[10,"Data4",512,13,[-1210,-1211],[[9,-1209,[5,0,0]]],[1,-90,-62.437,0]],[3,"Tag",512,33554432,229,[-1214],[[1,-1212,[0,"f7NISe7HdAD68SLfhnddy8"],[5,160,60]],[8,0,-1213,[0,"e71ctEmpxFC4KlSYRZNz/a"],[4,4278214290],496]],[1,-153.18,0,0]],[3,"Frame",512,33554432,229,[-1217],[[1,-1215,[0,"f7NISe7HdAD68SLfhnddy8"],[5,400,60]],[17,1,0,-1216,[0,"e71ctEmpxFC4KlSYRZNz/a"],498]],[1,213.881,0.446,0]],[18,"Confirm",512,false,33554432,1,[171,20],[[11,-1218,[0,"97aYwnIYxLY4GocopslxQi"]]]],[42,"Head",512,false,33554432,20,[-1221],[[1,-1219,[0,"01S8KtW5pFMrSWR87Ho+Jc"],[5,100,120]],[17,1,0,-1220,[0,"766FVJSh5NhLRZ9O8hOEHt"],506]],[1,0,130,0]],[18,"OrderConfirmPannel",512,false,33554432,1,[172,137],[[11,-1222,[0,"96cbMfIfZPu6eHkV07aSlf"]]]],[3,"Name",512,33554432,10,[-1225],[[1,-1223,[0,"f7NISe7HdAD68SLfhnddy8"],[5,200,65]],[6,1,0,-1224,[0,"e71ctEmpxFC4KlSYRZNz/a"],[4,4278232550],520]],[1,0,350,0]],[3,"Tag",512,33554432,14,[-1228],[[1,-1226,[0,"f7NISe7HdAD68SLfhnddy8"],[5,140,50]],[8,0,-1227,[0,"e71ctEmpxFC4KlSYRZNz/a"],[4,4278214290],538]],[1,22.982,0,0]],[3,"People0",512,33554432,14,[-1231],[[1,-1229,[0,"f7NISe7HdAD68SLfhnddy8"],[5,170,50]],[7,0,-1230,[0,"e71ctEmpxFC4KlSYRZNz/a"],540]],[1,201.389,0,0]],[3,"People1",512,33554432,14,[-1234],[[1,-1232,[0,"f7NISe7HdAD68SLfhnddy8"],[5,170,50]],[7,0,-1233,[0,"e71ctEmpxFC4KlSYRZNz/a"],542]],[1,379.979,0,0]],[3,"People2",512,33554432,14,[-1237],[[1,-1235,[0,"f7NISe7HdAD68SLfhnddy8"],[5,170,50]],[7,0,-1236,[0,"e71ctEmpxFC4KlSYRZNz/a"],544]],[1,554.548,0,0]],[3,"People3",512,33554432,14,[-1240],[[1,-1238,[0,"f7NISe7HdAD68SLfhnddy8"],[5,170,50]],[7,0,-1239,[0,"e71ctEmpxFC4KlSYRZNz/a"],546]],[1,201.389,-68.566,0]],[3,"People4",512,33554432,14,[-1243],[[1,-1241,[0,"f7NISe7HdAD68SLfhnddy8"],[5,170,50]],[7,0,-1242,[0,"e71ctEmpxFC4KlSYRZNz/a"],548]],[1,379.979,-68.566,0]],[3,"People5",512,33554432,14,[-1246],[[1,-1244,[0,"f7NISe7HdAD68SLfhnddy8"],[5,170,50]],[7,0,-1245,[0,"e71ctEmpxFC4KlSYRZNz/a"],550]],[1,554.548,-68.566,0]],[18,"OrderInfomationPannel",512,false,33554432,1,[173,21],[[11,-1247,[0,"96cbMfIfZPu6eHkV07aSlf"]]]],[3,"Name",512,33554432,21,[-1250],[[1,-1248,[0,"f7NISe7HdAD68SLfhnddy8"],[5,200,65]],[6,1,0,-1249,[0,"e71ctEmpxFC4KlSYRZNz/a"],[4,4278232550],561]],[1,0,250,0]],[89,"Camera",512,"c9DMICJLFO5IeO07EPon7U",8,[[-1251,[136,-1252]],1,4],[1,0,8,0],[3,-0.3826834323650898,0,0,0.9238795325112867],[1,-45,0,0]],[83,"Land",512,"b6K+q0oQlOG5bwQxweQ7iG",8,[[76,"Plane<ModelComponent>",-1253,[0,"e0uHCYkZ1D1I9glcT6oLf2"],[3],[56],4],[138,-1254,[1,10,0.001,10],5]],[1,-0.2,-0.1,0.75],[3,0,1,0,6.123233995736766e-17],[1,12,1,12],[1,0,180,0]],[90,"UICamera",512,33554432,1,[[-1255,[50,-1256]],1,4],[1,0,0,1000]],[2,"Sprite",512,33554432,144,[[1,-1257,[0,"be8rJNaj5IXonCHLUVzJZh"],[5,1600,50]],[7,0,-1258,[0,"fbiY5ZXolHEqdJ5wkCJzoF"],8]]],[4,"Label",512,33554432,144,[[23,-1259,[0,"d2l5iO3ilAuK8MjcAQ7C+O"],[5,0,37.8],[0,0,0.5]],[33,"",30,30,30,false,-1260,[0,"28vJ5vjsRAE6OeqNwo3Dxq"],9]],[1,20,0,0]],[2,"Sprite",512,33554432,145,[[1,-1261,[0,"22zw+LAtJBI5rxwu4uGvwa"],[5,1600,50]],[7,0,-1262,[0,"c2fH2NAfFD87Fna393BK+d"],10]]],[4,"Label",512,33554432,145,[[23,-1263,[0,"9bU8oFLGtL6a/oFvFFXPeI"],[5,0,37.8],[0,1,0.5]],[33,"",30,30,30,false,-1264,[0,"caoC9g4RxMcaspP9dy/bOK"],11]],[1,20,0,0]],[2,"Progress",512,33554432,146,[[1,-1265,[0,"934krh4EtCPrFZGfLfnGFU"],[5,150,150]],[118,3,2,0,-1266,[0,"92f3TgLolPxqfBDhEDwx3j"],[4,4292269782],[0,0.5,0.5],12]]],[2,"Label",512,33554432,22,[[1,-1267,[0,"8eLiyG70NH84TSnTFd1Nal"],[5,94,63]],[130,"进行",47,47,50,false,-1268,[0,"59UWbp0PhOWZ/9r/eWHPyj"],[4,4290032820],13]]],[2,"Label",512,33554432,23,[[1,-1269,[0,"c05Pg+5MZCgolannlN2rYL"],[5,100,40]],[30,"保存",32,32,1,false,false,-1270,[0,"06sBfMhppCiqQ5+IZ8ylIN"],[4,4292269782],16]]],[2,"Label",512,33554432,24,[[1,-1271,[0,"c05Pg+5MZCgolannlN2rYL"],[5,100,40]],[30,"退出",32,32,1,false,false,-1272,[0,"06sBfMhppCiqQ5+IZ8ylIN"],[4,4292269782],19]]],[2,"Label",512,33554432,25,[[1,-1273,[0,"c05Pg+5MZCgolannlN2rYL"],[5,100,40]],[30,"情报",32,32,1,false,false,-1274,[0,"06sBfMhppCiqQ5+IZ8ylIN"],[4,4292269782],22]]],[2,"Label",512,33554432,26,[[1,-1275,[0,"c05Pg+5MZCgolannlN2rYL"],[5,100,40]],[30,"地图",32,32,1,false,false,-1276,[0,"06sBfMhppCiqQ5+IZ8ylIN"],[4,4292269782],25]]],[2,"Label",512,33554432,27,[[1,-1277,[0,"c05Pg+5MZCgolannlN2rYL"],[5,100,40]],[30,"势力",32,32,1,false,false,-1278,[0,"06sBfMhppCiqQ5+IZ8ylIN"],[4,4292269782],28]]],[2,"Label",512,33554432,28,[[1,-1279,[0,"c05Pg+5MZCgolannlN2rYL"],[5,100,40]],[30,"实体",32,32,1,false,false,-1280,[0,"06sBfMhppCiqQ5+IZ8ylIN"],[4,4292269782],31]]],[2,"Label",512,33554432,29,[[1,-1281,[0,"c05Pg+5MZCgolannlN2rYL"],[5,100,40]],[30,"武将",32,32,1,false,false,-1282,[0,"06sBfMhppCiqQ5+IZ8ylIN"],[4,4292269782],34]]],[60,"Tips",33554432,147,[[9,-1283,[5,0,50.4]],[131,"",40,false,-1284,37]],[1,0,-443.932,0]],[2,"Label",512,33554432,75,[[1,-1285,[0,"6engM4ugtBeo3UuJiTKIVR"],[5,100,60]],[24,"确定",40,1,false,false,-1286,[0,"24l6pT6m9Fsb9kMdVROnX+"],43]]],[2,"Label",512,33554432,76,[[1,-1287,[0,"6engM4ugtBeo3UuJiTKIVR"],[5,100,60]],[24,"取消",40,1,false,false,-1288,[0,"24l6pT6m9Fsb9kMdVROnX+"],46]]],[2,"Sprite",512,33554432,2,[[1,-1289,[0,"b3OXGCGnVFY60YC1io2ZN+"],[5,1020,700]],[17,1,0,-1290,[0,"71KZ2At2ZPuZa8E04tZWwq"],52]]],[2,"Label",512,33554432,30,[[1,-1291,[0,"687cydylFL9ZnGvQsXcyRI"],[5,110,70]],[16,"出征",40,60,1,false,false,-1292,[0,"b5VfWsnZRCwpsmmY+JdHqT"],[4,4291151301],53]]],[2,"Label",512,33554432,31,[[1,-1293,[0,"a1UoJHvFJDl7Ey8c20YjvQ"],[5,110,70]],[16,"运输",40,60,1,false,false,-1294,[0,"56TfvcB2NDspnUw50KTuG0"],[4,4291151301],56]]],[2,"Label",512,33554432,32,[[1,-1295,[0,"6baNDerjNACqIRLEyarMuP"],[5,110,70]],[16,"驻扎",40,60,1,false,false,-1296,[0,"0439ni4llFJJa/ePOSikCA"],[4,4291151301],59]]],[2,"Label",512,33554432,33,[[1,-1297,[0,"0f3pfdJpJEVrLJL2pgvCLl"],[5,110,70]],[16,"征兵",40,60,1,false,false,-1298,[0,"9be4yKVcpOuLt1hP3h0LH4"],[4,4291151301],62]]],[2,"Label",512,33554432,34,[[1,-1299,[0,"b7zjoLZNxB6KQkIaJu1DXX"],[5,110,70]],[16,"训练",40,60,1,false,false,-1300,[0,"batvMJwH1AAov0azqZI2cG"],[4,4291151301],65]]],[2,"Label",512,33554432,35,[[1,-1301,[0,"b7zjoLZNxB6KQkIaJu1DXX"],[5,110,70]],[16,"操练",40,60,1,false,false,-1302,[0,"batvMJwH1AAov0azqZI2cG"],[4,4291151301],68]]],[2,"Label",512,33554432,36,[[1,-1303,[0,"acV380215DM63F7UILeqor"],[5,110,70]],[16,"巡视",40,60,1,false,false,-1304,[0,"98GpYjJAFENavw9PdrnOjK"],[4,4291151301],71]]],[2,"Label",512,33554432,37,[[1,-1305,[0,"ccIBluAZ1NYahNSM3XTaIO"],[5,110,70]],[16,"买进",40,60,1,false,false,-1306,[0,"67i89mdrhNsrM8p8MyRfLC"],[4,4291151301],74]]],[2,"Label",512,33554432,38,[[1,-1307,[0,"f446ZtGcFCQr9zFcyjJqVj"],[5,110,70]],[16,"卖出",40,60,1,false,false,-1308,[0,"58kRCTozVDwYyTZs7HA4yM"],[4,4291151301],77]]],[2,"Label",512,33554432,39,[[1,-1309,[0,"d2WZi3F9tHR5QvRip1Bgvt"],[5,110,70]],[16,"修缮",40,60,1,false,false,-1310,[0,"f3yXqSFC9BxrdC0Gr8lsXk"],[4,4291151301],80]]],[2,"Label",512,33554432,40,[[1,-1311,[0,"71GSyF0lhEu6f1TM2Cv5Ul"],[5,110,70]],[16,"开垦",40,60,1,false,false,-1312,[0,"e6hWuqIHZK2bkJ2DbxE0Nj"],[4,4291151301],83]]],[2,"Label",512,33554432,41,[[1,-1313,[0,"76GepxvmNInLjjT01q+TVn"],[5,110,70]],[16,"撤回",40,60,1,false,false,-1314,[0,"42rSZY9fFGl6XTyg9NN7w3"],[4,4291151301],86]]],[2,"Label",512,33554432,42,[[1,-1315,[0,"b3bmGzIBZNhbos+mJz94j0"],[5,110,70]],[16,"移动",40,60,1,false,false,-1316,[0,"42kP7KawlE5ryUEYUYaRoF"],[4,4291151301],89]]],[2,"Label",512,33554432,43,[[1,-1317,[0,"49mp1YNUhEYK/XNC0ZPZ87"],[5,110,70]],[16,"流言",40,60,1,false,false,-1318,[0,"51J1nQnPJKSKX5Zj4/iwAZ"],[4,4291151301],92]]],[2,"Label",512,33554432,44,[[1,-1319,[0,"6c/lI5OAtBoZC+NaQYZuyF"],[5,110,70]],[16,"爵位",40,60,1,false,false,-1320,[0,"58xwc8PMpKKbcvO8NxGDZf"],[4,4291151301],95]]],[2,"Label",512,33554432,45,[[1,-1321,[0,"67c7MsvuVCrbz7YNHC/Iis"],[5,110,70]],[16,"袭扰",40,60,1,false,false,-1322,[0,"435/2ya/lAhqj1lFsqKaHu"],[4,4291151301],98]]],[2,"Label",512,33554432,46,[[1,-1323,[0,"0f0aYXGx5JX7pVyczvB/Ev"],[5,110,70]],[16,"埋伏",40,60,1,false,false,-1324,[0,"24mb91WdpABp7e1dwug1/n"],[4,4291151301],101]]],[2,"Label",512,33554432,47,[[1,-1325,[0,"052chG1SRF46ccAzI/y14J"],[5,110,70]],[16,"攻击",40,60,1,false,false,-1326,[0,"73OL1k/ctB4IYzGqekMQPL"],[4,4291151301],104]]],[2,"Label",512,33554432,48,[[1,-1327,[0,"aee2ZlZWVNiZXtqqSkelqC"],[5,110,70]],[16,"探索",40,60,1,false,false,-1328,[0,"c7N+yCQ11PxYUbjV7Nt/Gb"],[4,4291151301],107]]],[2,"Label",512,33554432,49,[[1,-1329,[0,"fcjBsyj0xJo5KK9QzCN7GA"],[5,110,70]],[16,"议和",40,60,1,false,false,-1330,[0,"dcl6GMi8dGBoVCfOt6uUeU"],[4,4291151301],110]]],[2,"Label",512,33554432,50,[[1,-1331,[0,"39cc4eWaRCoZozGhgfJ050"],[5,110,70]],[16,"奖赏",40,60,1,false,false,-1332,[0,"15636hWOZBxZK6goVmIOKx"],[4,4291151301],113]]],[2,"Label",512,33554432,51,[[1,-1333,[0,"7deVUivy9P+pDRxqNEgwoz"],[5,110,70]],[16,"流放",40,60,1,false,false,-1334,[0,"15LABns4RGeINhD4FPAhsN"],[4,4291151301],116]]],[2,"Label",512,33554432,52,[[1,-1335,[0,"3aOQQpqjhB1o74C3tSqmr0"],[5,110,70]],[16,"离间",40,60,1,false,false,-1336,[0,"17yt4BdERMdqDDOGp5zI82"],[4,4291151301],119]]],[2,"Label",512,33554432,53,[[1,-1337,[0,"1aotaqOAZBXJpxGbZWwb1R"],[5,110,70]],[16,"转移",40,60,1,false,false,-1338,[0,"d5P5gbTQtKHr5ZIGs5pKQX"],[4,4291151301],122]]],[2,"Label",512,33554432,54,[[1,-1339,[0,"67jshbKr5HMoKUypQr9CNs"],[5,110,70]],[16,"处决",40,60,1,false,false,-1340,[0,"f5DKA1PHBIw5L1KNEXEJnl"],[4,4291151301],125]]],[2,"Label",512,33554432,55,[[1,-1341,[0,"72gPAY55dF0Lv+Cmum2BR2"],[5,110,70]],[16,"劝降",40,60,1,false,false,-1342,[0,"f9zHFnfsBK8IbQkdWbMt3L"],[4,4291151301],128]]],[2,"Label",512,33554432,56,[[1,-1343,[0,"72gPAY55dF0Lv+Cmum2BR2"],[5,110,70]],[16,"未知",40,60,1,false,false,-1344,[0,"f9zHFnfsBK8IbQkdWbMt3L"],[4,4291151301],131]]],[2,"Label",512,33554432,57,[[1,-1345,[0,"72gPAY55dF0Lv+Cmum2BR2"],[5,110,70]],[16,"未知",40,60,1,false,false,-1346,[0,"f9zHFnfsBK8IbQkdWbMt3L"],[4,4291151301],134]]],[2,"Label",512,33554432,58,[[1,-1347,[0,"72gPAY55dF0Lv+Cmum2BR2"],[5,110,70]],[16,"未知",40,60,1,false,false,-1348,[0,"f9zHFnfsBK8IbQkdWbMt3L"],[4,4291151301],137]]],[2,"Label",512,33554432,59,[[1,-1349,[0,"72gPAY55dF0Lv+Cmum2BR2"],[5,110,70]],[16,"信息",40,60,1,false,false,-1350,[0,"f9zHFnfsBK8IbQkdWbMt3L"],[4,4291151301],140]]],[2,"Sprite",512,33554432,9,[[1,-1351,[0,"d8hXsSM4NGKLdhI1GkI9WA"],[5,1000,700]],[17,1,0,-1352,[0,"d90P7uhDRGYKaBD0I0xB0V"],147]]],[2,"Label",512,33554432,60,[[1,-1353,[0,"10xlGxO41PoZuVcxNFjf5Y"],[5,110,70]],[47,"确定",45,45,60,1,false,false,-1354,[0,"53yWX+c6NEf4mWpqcnxpT0"],148]]],[2,"Label",512,33554432,61,[[1,-1355,[0,"10xlGxO41PoZuVcxNFjf5Y"],[5,110,70]],[47,"取消",45,45,60,1,false,false,-1356,[0,"53yWX+c6NEf4mWpqcnxpT0"],151]]],[62,"Checkmark",512,33554432,77,[[[1,-1357,[0,"5aeJn3APhHb455Qc9Nfbfk"],[5,32,32]],-1358],4,1]],[36,"Checkmark",512,false,33554432,78,[[[32,"Checkmark<UITransformComponent>",-1359,[0,"d5txXbDKdHfq/q+O/eFMqX"],[5,32,32]],-1360],4,1]],[36,"Checkmark",512,false,33554432,79,[[[32,"Checkmark<UITransformComponent>",-1361,[0,"d0X9CYGNBB6KJi6S3lAJh6"],[5,32,32]],-1362],4,1]],[36,"Checkmark",512,false,33554432,80,[[[32,"Checkmark<UITransformComponent>",-1363,[0,"c88YVduqlM65JXVDOLGWzy"],[5,32,32]],-1364],4,1]],[4,"Label1",512,33554432,7,[[1,-1365,[0,"dbLfrNsydCLblf4aaadMnG"],[5,0,50.4]],[48,"",35,35,false,-1366,[0,"99ve7l8fJDBpt92mdDBd+Z"],[4,4290822336],162]],[1,-283.565,0,0]],[4,"Label2",512,33554432,7,[[1,-1367,[0,"8er8pOgNNJZaDrpSc5clQM"],[5,0,50.4]],[48,"",35,35,false,-1368,[0,"f3gel2NvJHbZlsyZI32D2E"],[4,4290822336],163]],[1,-105.57,0,0]],[4,"Label3",512,33554432,7,[[1,-1369,[0,"8b7w+0FsJAo6zrD7vaZZ9T"],[5,0,50.4]],[48,"",35,35,false,-1370,[0,"4eOulxQvtJG7DcJLYZrSvb"],[4,4290822336],164]],[1,63.184,0,0]],[4,"Label4",512,33554432,7,[[1,-1371,[0,"57MOWszfVE3pwSDq0NUz8H"],[5,0,50.4]],[48,"",35,35,false,-1372,[0,"f2EGSWBAhF17cBbMEAYEI/"],[4,4290822336],165]],[1,240.817,0,0]],[2,"Label",512,33554432,16,[[1,-1373,[0,"23DbfRL99OI4t+9gNPLotP"],[5,200,50.4]],[31,"人数：1000",40,false,-1374,[0,"e6MWDOdbpHcovUMci4GbyJ"],[4,4290164406],166]]],[2,"Label",512,33554432,81,[[1,-1375,[0,"94FttV6rZKzaMc+LWxnlPg"],[5,100,40]],[22,"+100",37,37,1,false,-1376,[0,"29LzN17+dJH6XzrkzOJ6z/"]]]],[2,"Label",512,33554432,82,[[1,-1377,[0,"7368yTjaRKNYRZLuQ0eNWT"],[5,100,40]],[22,"-100",37,37,1,false,-1378,[0,"60V6Hj+ulDT4V7RYf/waJV"]]]],[2,"Label",512,33554432,83,[[1,-1379,[0,"94FttV6rZKzaMc+LWxnlPg"],[5,130,40]],[22,"+1000",37,37,1,false,-1380,[0,"29LzN17+dJH6XzrkzOJ6z/"]]]],[2,"Label",512,33554432,84,[[1,-1381,[0,"7368yTjaRKNYRZLuQ0eNWT"],[5,130,40]],[22,"-1000",37,37,1,false,-1382,[0,"60V6Hj+ulDT4V7RYf/waJV"]]]],[2,"Label",512,33554432,17,[[1,-1383,[0,"45cjX1qTdG7Y+SGjPngMtV"],[5,200,50.4]],[31,"粮草：1000",40,false,-1384,[0,"25d/prFFVCT5H2obZaBppv"],[4,4291282887],175]]],[2,"Label",512,33554432,85,[[1,-1385,[0,"94FttV6rZKzaMc+LWxnlPg"],[5,100,40]],[22,"+100",37,37,1,false,-1386,[0,"29LzN17+dJH6XzrkzOJ6z/"]]]],[2,"Label",512,33554432,86,[[1,-1387,[0,"7368yTjaRKNYRZLuQ0eNWT"],[5,100,40]],[22,"-100",37,37,1,false,-1388,[0,"60V6Hj+ulDT4V7RYf/waJV"]]]],[2,"Label",512,33554432,87,[[1,-1389,[0,"94FttV6rZKzaMc+LWxnlPg"],[5,130,40]],[22,"+1000",37,37,1,false,-1390,[0,"29LzN17+dJH6XzrkzOJ6z/"]]]],[2,"Label",512,33554432,88,[[1,-1391,[0,"7368yTjaRKNYRZLuQ0eNWT"],[5,130,40]],[22,"-1000",37,37,1,false,-1392,[0,"60V6Hj+ulDT4V7RYf/waJV"]]]],[2,"Bg",512,33554432,62,[[1,-1393,[0,"1cYDfR6ddKTKumtso1Q/jt"],[5,3000,1500]],[8,0,-1394,[0,"48MZ1Ql/9G84Z5EZwRk3um"],[4,838860800],186]]],[2,"Label",512,33554432,63,[[1,-1395,[0,"904hukHuhKdZKprTR8V3WN"],[5,100,60]],[24,"确定",40,1,false,false,-1396,[0,"cbwuVTAt9NwIh5JVkUI0RZ"],188]]],[2,"Label",512,33554432,64,[[1,-1397,[0,"8f+jvwZjFB6b2U+FWVK6FN"],[5,100,60]],[24,"取消",40,1,false,false,-1398,[0,"91OVmw7ftLJI4ZbUoYvlKE"],194]]],[2,"Bg",512,33554432,65,[[1,-1399,[0,"1cYDfR6ddKTKumtso1Q/jt"],[5,3000,1500]],[8,0,-1400,[0,"48MZ1Ql/9G84Z5EZwRk3um"],[4,838860800],198]]],[2,"Label",512,33554432,66,[[1,-1401,[0,"904hukHuhKdZKprTR8V3WN"],[5,100,60]],[24,"确定",40,1,false,false,-1402,[0,"cbwuVTAt9NwIh5JVkUI0RZ"],200]]],[2,"Label",512,33554432,67,[[1,-1403,[0,"8f+jvwZjFB6b2U+FWVK6FN"],[5,100,60]],[24,"取消",40,1,false,false,-1404,[0,"91OVmw7ftLJI4ZbUoYvlKE"],206]]],[2,"Sprite",512,33554432,11,[[1,-1405,[0,"d8hXsSM4NGKLdhI1GkI9WA"],[5,1000,700]],[17,1,0,-1406,[0,"d90P7uhDRGYKaBD0I0xB0V"],212]]],[2,"Label",512,33554432,68,[[1,-1407,[0,"10xlGxO41PoZuVcxNFjf5Y"],[5,110,70]],[47,"确定",45,45,60,1,false,false,-1408,[0,"53yWX+c6NEf4mWpqcnxpT0"],213]]],[4,"Toggle5",512,33554432,6,[[1,-1409,[0,"75UdI2TS5JwYhkKKyPbUcc"],[5,60,60]],[53,0,-1410,[0,"0dninaUKROmov9Gagwv2gc"],[4,4284900966],216,217]],[1,-247.593,0,0]],[4,"Toggle6",512,33554432,6,[[1,-1411,[0,"0bhGDhY69OmK71aiNTgJB1"],[5,60,60]],[53,0,-1412,[0,"a3l47NFlBAB4XNTcsAUJ8e"],[4,4284900966],218,219]],[1,-47.593,0,0]],[4,"Toggle7",512,33554432,6,[[1,-1413,[0,"a7pHlHvxVMI7W93dhMiAx0"],[5,60,60]],[53,0,-1414,[0,"3bjcCgcfBKyK7Vd5diRuBV"],[4,4284900966],220,221]],[1,152.407,0,0]],[62,"Checkmark",512,33554432,89,[[[32,"Checkmark<UITransformComponent>",-1415,[0,"d5txXbDKdHfq/q+O/eFMqX"],[5,32,32]],-1416],4,1]],[36,"Checkmark",512,false,33554432,90,[[[32,"Checkmark<UITransformComponent>",-1417,[0,"d0X9CYGNBB6KJi6S3lAJh6"],[5,32,32]],-1418],4,1]],[36,"Checkmark",512,false,33554432,91,[[[32,"Checkmark<UITransformComponent>",-1419,[0,"c88YVduqlM65JXVDOLGWzy"],[5,32,32]],-1420],4,1]],[4,"Label2",512,33554432,6,[[1,-1421,[0,"8er8pOgNNJZaDrpSc5clQM"],[5,0,50.4]],[31,"",40,false,-1422,[0,"f3gel2NvJHbZlsyZI32D2E"],[4,4290624957],228]],[1,-164.311,0,0]],[4,"Label3",512,33554432,6,[[1,-1423,[0,"8b7w+0FsJAo6zrD7vaZZ9T"],[5,0,50.4]],[31,"",40,false,-1424,[0,"4eOulxQvtJG7DcJLYZrSvb"],[4,4290624957],229]],[1,35.689,0,0]],[4,"Label4",512,33554432,6,[[1,-1425,[0,"57MOWszfVE3pwSDq0NUz8H"],[5,0,50.4]],[31,"",40,false,-1426,[0,"f2EGSWBAhF17cBbMEAYEI/"],[4,4290624957],230]],[1,235.689,0,0]],[2,"Label",512,33554432,92,[[1,-1427,[0,"23DbfRL99OI4t+9gNPLotP"],[5,200,50.4]],[132,"人数：1000",40,false,-1428,[0,"e6MWDOdbpHcovUMci4GbyJ"],231]]],[2,"Label",512,33554432,93,[[1,-1429,[0,"94FttV6rZKzaMc+LWxnlPg"],[5,100,40]],[22,"+100",35,35,1,false,-1430,[0,"29LzN17+dJH6XzrkzOJ6z/"]]]],[2,"Label",512,33554432,94,[[1,-1431,[0,"7368yTjaRKNYRZLuQ0eNWT"],[5,100,40]],[22,"-100",35,35,1,false,-1432,[0,"60V6Hj+ulDT4V7RYf/waJV"]]]],[2,"Label",512,33554432,69,[[1,-1433,[0,"10xlGxO41PoZuVcxNFjf5Y"],[5,110,70]],[47,"取消",45,45,60,1,false,false,-1434,[0,"53yWX+c6NEf4mWpqcnxpT0"],236]]],[2,"Sprite",512,33554432,156,[[1,-1435,[0,"cbhM5I0eJPUI8d4+Va5fHv"],[5,900,500]],[17,1,0,-1436,[0,"02xBh77GBHJZumb37jrBkJ"],243]]],[2,"Label",512,33554432,156,[[1,-1437,[0,"99/se9UZxHFZZwswIhP+YR"],[5,800,50.4]],[77,"",1,800,false,-1438,244,245]]],[2,"Sprite",512,33554432,12,[[1,-1439,[0,"d8hXsSM4NGKLdhI1GkI9WA"],[5,1000,700]],[17,1,0,-1440,[0,"d90P7uhDRGYKaBD0I0xB0V"],249]]],[2,"Label",512,33554432,70,[[1,-1441,[0,"a819r6kfBP0IAd6HtX1HoQ"],[5,110,70]],[49,"确定",40,60,1,false,false,-1442,[0,"adMPUsV5pBh7QA0/O7wygd"],250]]],[2,"Label",512,33554432,18,[[1,-1443,[0,"e2JsWKsM5A1q4pAkN+TYtp"],[5,140,50.4]],[31,"粮草：0",40,false,-1444,[0,"c3g6hQ6SNNR7YIjh3OD+CB"],[4,4290164406],253]]],[2,"Label",512,33554432,95,[[1,-1445,[0,"0awd+Df6pDpY0jPgJR7rgJ"],[5,100,40]],[22,"+100",32,32,1,false,-1446,[0,"3fGwD6kztMXIEOglQX4ix2"]]]],[2,"Label",512,33554432,96,[[1,-1447,[0,"a5a4uU/Y5JtqSj0gq7e2jZ"],[5,100,40]],[22,"-100",32,32,1,false,-1448,[0,"6bdMgc9uxIIaxNmLvBorY/"]]]],[2,"Label",512,33554432,97,[[1,-1449,[0,"0awd+Df6pDpY0jPgJR7rgJ"],[5,130,40]],[22,"+1000",32,32,1,false,-1450,[0,"3fGwD6kztMXIEOglQX4ix2"]]]],[2,"Label",512,33554432,98,[[1,-1451,[0,"a5a4uU/Y5JtqSj0gq7e2jZ"],[5,130,40]],[22,"-1000",32,32,1,false,-1452,[0,"6bdMgc9uxIIaxNmLvBorY/"]]]],[2,"Label",512,33554432,71,[[1,-1453,[0,"a819r6kfBP0IAd6HtX1HoQ"],[5,110,70]],[49,"取消",40,60,1,false,false,-1454,[0,"adMPUsV5pBh7QA0/O7wygd"],262]]],[2,"Sprite",512,33554432,100,[[1,-1455,[0,"d8hXsSM4NGKLdhI1GkI9WA"],[5,1100,800]],[17,1,0,-1456,[0,"d90P7uhDRGYKaBD0I0xB0V"],275]]],[4,"PeoplesLabel",512,33554432,3,[[23,-1457,[0,"e2JsWKsM5A1q4pAkN+TYtp"],[5,720,50.4],[0,0.5,1]],[133,"",40,3,false,-1458,[0,"c3g6hQ6SNNR7YIjh3OD+CB"],[4,4291743438],276]],[1,0,-244.146,0]],[2,"Label",512,33554432,188,[[1,-1459,[0,"e2JsWKsM5A1q4pAkN+TYtp"],[5,60,37.8]],[40,"刘备",30,30,30,false,true,-1460,[0,"c3g6hQ6SNNR7YIjh3OD+CB"],277]]],[4,"Label",512,33554432,189,[[23,-1461,[0,"e2JsWKsM5A1q4pAkN+TYtp"],[5,1000,37.8],[0,0,1]],[75,"本设施暂无任何说明",0,30,30,30,3,false,-1462,[0,"c3g6hQ6SNNR7YIjh3OD+CB"],[4,4291743438],279]],[1,-493.487,82.823,0]],[2,"Tag",512,33554432,101,[[1,-1463,[0,"f7NISe7HdAD68SLfhnddy8"],[5,120,50]],[8,0,-1464,[0,"e71ctEmpxFC4KlSYRZNz/a"],[4,4278214290],281]]],[4,"Bg",512,33554432,101,[[1,-1465,[0,"f7NISe7HdAD68SLfhnddy8"],[5,135,50]],[7,0,-1466,[0,"e71ctEmpxFC4KlSYRZNz/a"],282]],[1,150,0.446,0]],[2,"Key",512,33554432,101,[[1,-1467,[0,"c68UOAlNhN171Umca6yVvF"],[5,60,50.4]],[5,"兵力",30,30,false,-1468,[0,"2frm37uaJHQr0AEEaYyM82"],283]]],[4,"Value",512,33554432,101,[[1,-1469,[0,"c68UOAlNhN171Umca6yVvF"],[5,60,50.4]],[5,"1234",30,30,false,-1470,[0,"2frm37uaJHQr0AEEaYyM82"],284]],[1,150,0.446,0]],[2,"Tag",512,33554432,102,[[1,-1471,[0,"f7NISe7HdAD68SLfhnddy8"],[5,120,50]],[8,0,-1472,[0,"e71ctEmpxFC4KlSYRZNz/a"],[4,4278214290],285]]],[4,"Bg",512,33554432,102,[[1,-1473,[0,"f7NISe7HdAD68SLfhnddy8"],[5,135,50]],[7,0,-1474,[0,"e71ctEmpxFC4KlSYRZNz/a"],286]],[1,150,0.446,0]],[2,"Key",512,33554432,102,[[1,-1475,[0,"c68UOAlNhN171Umca6yVvF"],[5,60,50.4]],[5,"兵力",30,30,false,-1476,[0,"2frm37uaJHQr0AEEaYyM82"],287]]],[4,"Value",512,33554432,102,[[1,-1477,[0,"c68UOAlNhN171Umca6yVvF"],[5,60,50.4]],[5,"1234",30,30,false,-1478,[0,"2frm37uaJHQr0AEEaYyM82"],288]],[1,150,0.446,0]],[2,"Tag",512,33554432,103,[[1,-1479,[0,"f7NISe7HdAD68SLfhnddy8"],[5,120,50]],[8,0,-1480,[0,"e71ctEmpxFC4KlSYRZNz/a"],[4,4278214290],289]]],[4,"Bg",512,33554432,103,[[1,-1481,[0,"f7NISe7HdAD68SLfhnddy8"],[5,135,50]],[7,0,-1482,[0,"e71ctEmpxFC4KlSYRZNz/a"],290]],[1,150,0.446,0]],[2,"Key",512,33554432,103,[[1,-1483,[0,"c68UOAlNhN171Umca6yVvF"],[5,60,50.4]],[5,"兵力",30,30,false,-1484,[0,"2frm37uaJHQr0AEEaYyM82"],291]]],[4,"Value",512,33554432,103,[[1,-1485,[0,"c68UOAlNhN171Umca6yVvF"],[5,60,50.4]],[5,"1234",30,30,false,-1486,[0,"2frm37uaJHQr0AEEaYyM82"],292]],[1,150,0.446,0]],[2,"Tag",512,33554432,104,[[1,-1487,[0,"f7NISe7HdAD68SLfhnddy8"],[5,120,50]],[8,0,-1488,[0,"e71ctEmpxFC4KlSYRZNz/a"],[4,4278214290],293]]],[4,"Bg",512,33554432,104,[[1,-1489,[0,"f7NISe7HdAD68SLfhnddy8"],[5,135,50]],[7,0,-1490,[0,"e71ctEmpxFC4KlSYRZNz/a"],294]],[1,150,0.446,0]],[2,"Key",512,33554432,104,[[1,-1491,[0,"c68UOAlNhN171Umca6yVvF"],[5,60,50.4]],[5,"兵力",30,30,false,-1492,[0,"2frm37uaJHQr0AEEaYyM82"],295]]],[4,"Value",512,33554432,104,[[1,-1493,[0,"c68UOAlNhN171Umca6yVvF"],[5,60,50.4]],[5,"1234",30,30,false,-1494,[0,"2frm37uaJHQr0AEEaYyM82"],296]],[1,150,0.446,0]],[2,"Tag",512,33554432,105,[[1,-1495,[0,"f7NISe7HdAD68SLfhnddy8"],[5,120,50]],[8,0,-1496,[0,"e71ctEmpxFC4KlSYRZNz/a"],[4,4278214290],297]]],[4,"Bg",512,33554432,105,[[1,-1497,[0,"f7NISe7HdAD68SLfhnddy8"],[5,135,50]],[7,0,-1498,[0,"e71ctEmpxFC4KlSYRZNz/a"],298]],[1,150,0.446,0]],[2,"Key",512,33554432,105,[[1,-1499,[0,"c68UOAlNhN171Umca6yVvF"],[5,60,50.4]],[5,"兵力",30,30,false,-1500,[0,"2frm37uaJHQr0AEEaYyM82"],299]]],[4,"Value",512,33554432,105,[[1,-1501,[0,"c68UOAlNhN171Umca6yVvF"],[5,60,50.4]],[5,"1234",30,30,false,-1502,[0,"2frm37uaJHQr0AEEaYyM82"],300]],[1,150,0.446,0]],[2,"Tag",512,33554432,106,[[1,-1503,[0,"f7NISe7HdAD68SLfhnddy8"],[5,120,50]],[8,0,-1504,[0,"e71ctEmpxFC4KlSYRZNz/a"],[4,4278214290],301]]],[4,"Bg",512,33554432,106,[[1,-1505,[0,"f7NISe7HdAD68SLfhnddy8"],[5,135,50]],[7,0,-1506,[0,"e71ctEmpxFC4KlSYRZNz/a"],302]],[1,150,0.446,0]],[2,"Key",512,33554432,106,[[1,-1507,[0,"c68UOAlNhN171Umca6yVvF"],[5,60,50.4]],[5,"兵力",30,30,false,-1508,[0,"2frm37uaJHQr0AEEaYyM82"],303]]],[4,"Value",512,33554432,106,[[1,-1509,[0,"c68UOAlNhN171Umca6yVvF"],[5,60,50.4]],[5,"1234",30,30,false,-1510,[0,"2frm37uaJHQr0AEEaYyM82"],304]],[1,150,0.446,0]],[2,"Tag",512,33554432,107,[[1,-1511,[0,"f7NISe7HdAD68SLfhnddy8"],[5,120,50]],[8,0,-1512,[0,"e71ctEmpxFC4KlSYRZNz/a"],[4,4278214290],305]]],[4,"Bg",512,33554432,107,[[1,-1513,[0,"f7NISe7HdAD68SLfhnddy8"],[5,135,50]],[7,0,-1514,[0,"e71ctEmpxFC4KlSYRZNz/a"],306]],[1,150,0.446,0]],[2,"Key",512,33554432,107,[[1,-1515,[0,"c68UOAlNhN171Umca6yVvF"],[5,60,50.4]],[5,"兵力",30,30,false,-1516,[0,"2frm37uaJHQr0AEEaYyM82"],307]]],[4,"Value",512,33554432,107,[[1,-1517,[0,"c68UOAlNhN171Umca6yVvF"],[5,60,50.4]],[5,"1234",30,30,false,-1518,[0,"2frm37uaJHQr0AEEaYyM82"],308]],[1,150,0.446,0]],[2,"Tag",512,33554432,108,[[1,-1519,[0,"f7NISe7HdAD68SLfhnddy8"],[5,120,50]],[8,0,-1520,[0,"e71ctEmpxFC4KlSYRZNz/a"],[4,4278214290],309]]],[4,"Bg",512,33554432,108,[[1,-1521,[0,"f7NISe7HdAD68SLfhnddy8"],[5,135,50]],[7,0,-1522,[0,"e71ctEmpxFC4KlSYRZNz/a"],310]],[1,150,0.446,0]],[2,"Key",512,33554432,108,[[1,-1523,[0,"c68UOAlNhN171Umca6yVvF"],[5,60,50.4]],[5,"兵力",30,30,false,-1524,[0,"2frm37uaJHQr0AEEaYyM82"],311]]],[4,"Value",512,33554432,108,[[1,-1525,[0,"c68UOAlNhN171Umca6yVvF"],[5,60,50.4]],[5,"1234",30,30,false,-1526,[0,"2frm37uaJHQr0AEEaYyM82"],312]],[1,150,0.446,0]],[2,"Tag",512,33554432,109,[[1,-1527,[0,"f7NISe7HdAD68SLfhnddy8"],[5,120,50]],[8,0,-1528,[0,"e71ctEmpxFC4KlSYRZNz/a"],[4,4278214290],313]]],[4,"Bg",512,33554432,109,[[1,-1529,[0,"f7NISe7HdAD68SLfhnddy8"],[5,135,50]],[7,0,-1530,[0,"e71ctEmpxFC4KlSYRZNz/a"],314]],[1,150,0.446,0]],[2,"Key",512,33554432,109,[[1,-1531,[0,"c68UOAlNhN171Umca6yVvF"],[5,60,50.4]],[5,"兵力",30,30,false,-1532,[0,"2frm37uaJHQr0AEEaYyM82"],315]]],[4,"Value",512,33554432,109,[[1,-1533,[0,"c68UOAlNhN171Umca6yVvF"],[5,60,50.4]],[5,"1234",30,30,false,-1534,[0,"2frm37uaJHQr0AEEaYyM82"],316]],[1,150,0.446,0]],[2,"Tag",512,33554432,110,[[1,-1535,[0,"f7NISe7HdAD68SLfhnddy8"],[5,120,50]],[8,0,-1536,[0,"e71ctEmpxFC4KlSYRZNz/a"],[4,4278214290],317]]],[4,"Bg",512,33554432,110,[[1,-1537,[0,"f7NISe7HdAD68SLfhnddy8"],[5,135,50]],[7,0,-1538,[0,"e71ctEmpxFC4KlSYRZNz/a"],318]],[1,150,0.446,0]],[2,"Key",512,33554432,110,[[1,-1539,[0,"c68UOAlNhN171Umca6yVvF"],[5,60,50.4]],[5,"兵力",30,30,false,-1540,[0,"2frm37uaJHQr0AEEaYyM82"],319]]],[4,"Value",512,33554432,110,[[1,-1541,[0,"c68UOAlNhN171Umca6yVvF"],[5,60,50.4]],[5,"1234",30,30,false,-1542,[0,"2frm37uaJHQr0AEEaYyM82"],320]],[1,150,0.446,0]],[2,"Tag",512,33554432,111,[[1,-1543,[0,"f7NISe7HdAD68SLfhnddy8"],[5,120,50]],[8,0,-1544,[0,"e71ctEmpxFC4KlSYRZNz/a"],[4,4278214290],321]]],[4,"Bg",512,33554432,111,[[1,-1545,[0,"f7NISe7HdAD68SLfhnddy8"],[5,135,50]],[7,0,-1546,[0,"e71ctEmpxFC4KlSYRZNz/a"],322]],[1,150,0.446,0]],[2,"Key",512,33554432,111,[[1,-1547,[0,"c68UOAlNhN171Umca6yVvF"],[5,60,50.4]],[5,"兵力",30,30,false,-1548,[0,"2frm37uaJHQr0AEEaYyM82"],323]]],[4,"Value",512,33554432,111,[[1,-1549,[0,"c68UOAlNhN171Umca6yVvF"],[5,60,50.4]],[5,"1234",30,30,false,-1550,[0,"2frm37uaJHQr0AEEaYyM82"],324]],[1,150,0.446,0]],[2,"Tag",512,33554432,112,[[1,-1551,[0,"f7NISe7HdAD68SLfhnddy8"],[5,120,50]],[8,0,-1552,[0,"e71ctEmpxFC4KlSYRZNz/a"],[4,4278214290],325]]],[4,"Bg",512,33554432,112,[[1,-1553,[0,"f7NISe7HdAD68SLfhnddy8"],[5,135,50]],[7,0,-1554,[0,"e71ctEmpxFC4KlSYRZNz/a"],326]],[1,150,0.446,0]],[2,"Key",512,33554432,112,[[1,-1555,[0,"c68UOAlNhN171Umca6yVvF"],[5,60,50.4]],[5,"兵力",30,30,false,-1556,[0,"2frm37uaJHQr0AEEaYyM82"],327]]],[4,"Value",512,33554432,112,[[1,-1557,[0,"c68UOAlNhN171Umca6yVvF"],[5,60,50.4]],[5,"1234",30,30,false,-1558,[0,"2frm37uaJHQr0AEEaYyM82"],328]],[1,150,0.446,0]],[2,"Tag",512,33554432,113,[[1,-1559,[0,"f7NISe7HdAD68SLfhnddy8"],[5,120,50]],[8,0,-1560,[0,"e71ctEmpxFC4KlSYRZNz/a"],[4,4278214290],329]]],[4,"Bg",512,33554432,113,[[1,-1561,[0,"f7NISe7HdAD68SLfhnddy8"],[5,135,50]],[7,0,-1562,[0,"e71ctEmpxFC4KlSYRZNz/a"],330]],[1,150,0.446,0]],[2,"Key",512,33554432,113,[[1,-1563,[0,"c68UOAlNhN171Umca6yVvF"],[5,60,50.4]],[5,"兵力",30,30,false,-1564,[0,"2frm37uaJHQr0AEEaYyM82"],331]]],[4,"Value",512,33554432,113,[[1,-1565,[0,"c68UOAlNhN171Umca6yVvF"],[5,60,50.4]],[5,"1234",30,30,false,-1566,[0,"2frm37uaJHQr0AEEaYyM82"],332]],[1,150,0.446,0]],[2,"Tag",512,33554432,114,[[1,-1567,[0,"f7NISe7HdAD68SLfhnddy8"],[5,120,50]],[8,0,-1568,[0,"e71ctEmpxFC4KlSYRZNz/a"],[4,4278214290],333]]],[4,"Bg",512,33554432,114,[[1,-1569,[0,"f7NISe7HdAD68SLfhnddy8"],[5,135,50]],[7,0,-1570,[0,"e71ctEmpxFC4KlSYRZNz/a"],334]],[1,150,0.446,0]],[2,"Key",512,33554432,114,[[1,-1571,[0,"c68UOAlNhN171Umca6yVvF"],[5,60,50.4]],[5,"兵力",30,30,false,-1572,[0,"2frm37uaJHQr0AEEaYyM82"],335]]],[4,"Value",512,33554432,114,[[1,-1573,[0,"c68UOAlNhN171Umca6yVvF"],[5,60,50.4]],[5,"1234",30,30,false,-1574,[0,"2frm37uaJHQr0AEEaYyM82"],336]],[1,150,0.446,0]],[2,"Tag",512,33554432,115,[[1,-1575,[0,"f7NISe7HdAD68SLfhnddy8"],[5,120,50]],[8,0,-1576,[0,"e71ctEmpxFC4KlSYRZNz/a"],[4,4278214290],337]]],[4,"Bg",512,33554432,115,[[1,-1577,[0,"f7NISe7HdAD68SLfhnddy8"],[5,135,50]],[7,0,-1578,[0,"e71ctEmpxFC4KlSYRZNz/a"],338]],[1,150,0.446,0]],[2,"Key",512,33554432,115,[[1,-1579,[0,"c68UOAlNhN171Umca6yVvF"],[5,60,50.4]],[5,"兵力",30,30,false,-1580,[0,"2frm37uaJHQr0AEEaYyM82"],339]]],[4,"Value",512,33554432,115,[[1,-1581,[0,"c68UOAlNhN171Umca6yVvF"],[5,60,50.4]],[5,"1234",30,30,false,-1582,[0,"2frm37uaJHQr0AEEaYyM82"],340]],[1,150,0.446,0]],[2,"Key",512,33554432,190,[[1,-1583,[0,"c68UOAlNhN171Umca6yVvF"],[5,60,50.4]],[5,"武将",30,30,false,-1584,[0,"2frm37uaJHQr0AEEaYyM82"],341]]],[2,"Value",512,33554432,191,[[1,-1585,[0,"c68UOAlNhN171Umca6yVvF"],[5,120,50.4]],[5,"诸葛孔明",30,30,false,-1586,[0,"2frm37uaJHQr0AEEaYyM82"],343]]],[2,"Value",512,33554432,192,[[1,-1587,[0,"c68UOAlNhN171Umca6yVvF"],[5,120,50.4]],[5,"诸葛孔明",30,30,false,-1588,[0,"2frm37uaJHQr0AEEaYyM82"],345]]],[2,"Value",512,33554432,193,[[1,-1589,[0,"c68UOAlNhN171Umca6yVvF"],[5,120,50.4]],[5,"诸葛孔明",30,30,false,-1590,[0,"2frm37uaJHQr0AEEaYyM82"],347]]],[2,"Value",512,33554432,194,[[1,-1591,[0,"c68UOAlNhN171Umca6yVvF"],[5,120,50.4]],[5,"诸葛孔明",30,30,false,-1592,[0,"2frm37uaJHQr0AEEaYyM82"],349]]],[2,"Value",512,33554432,195,[[1,-1593,[0,"c68UOAlNhN171Umca6yVvF"],[5,120,50.4]],[5,"诸葛孔明",30,30,false,-1594,[0,"2frm37uaJHQr0AEEaYyM82"],351]]],[2,"Value",512,33554432,196,[[1,-1595,[0,"c68UOAlNhN171Umca6yVvF"],[5,120,50.4]],[5,"诸葛孔明",30,30,false,-1596,[0,"2frm37uaJHQr0AEEaYyM82"],353]]],[2,"Value",512,33554432,197,[[1,-1597,[0,"c68UOAlNhN171Umca6yVvF"],[5,120,50.4]],[5,"诸葛孔明",30,30,false,-1598,[0,"2frm37uaJHQr0AEEaYyM82"],355]]],[2,"Value",512,33554432,198,[[1,-1599,[0,"c68UOAlNhN171Umca6yVvF"],[5,120,50.4]],[5,"诸葛孔明",30,30,false,-1600,[0,"2frm37uaJHQr0AEEaYyM82"],357]]],[2,"Value",512,33554432,199,[[1,-1601,[0,"c68UOAlNhN171Umca6yVvF"],[5,120,50.4]],[5,"诸葛孔明",30,30,false,-1602,[0,"2frm37uaJHQr0AEEaYyM82"],359]]],[2,"Value",512,33554432,200,[[1,-1603,[0,"c68UOAlNhN171Umca6yVvF"],[5,120,50.4]],[5,"诸葛孔明",30,30,false,-1604,[0,"2frm37uaJHQr0AEEaYyM82"],361]]],[2,"Value",512,33554432,201,[[1,-1605,[0,"c68UOAlNhN171Umca6yVvF"],[5,120,50.4]],[5,"诸葛孔明",30,30,false,-1606,[0,"2frm37uaJHQr0AEEaYyM82"],363]]],[2,"Value",512,33554432,202,[[1,-1607,[0,"c68UOAlNhN171Umca6yVvF"],[5,120,50.4]],[5,"诸葛孔明",30,30,false,-1608,[0,"2frm37uaJHQr0AEEaYyM82"],365]]],[2,"Sprite",512,33554432,116,[[1,-1609,[0,"d8hXsSM4NGKLdhI1GkI9WA"],[5,1000,700]],[17,1,0,-1610,[0,"d90P7uhDRGYKaBD0I0xB0V"],369]]],[2,"Label",512,33554432,204,[[1,-1611,[0,"e2JsWKsM5A1q4pAkN+TYtp"],[5,60,37.8]],[40,"刘备",30,30,30,false,true,-1612,[0,"c3g6hQ6SNNR7YIjh3OD+CB"],370]]],[2,"Head",512,33554432,205,[[1,-1613,[0,"f7NISe7HdAD68SLfhnddy8"],[5,150,190]],[7,0,-1614,[0,"e71ctEmpxFC4KlSYRZNz/a"],372]]],[4,"Label",512,33554432,206,[[23,-1615,[0,"e2JsWKsM5A1q4pAkN+TYtp"],[5,700,37.8],[0,0,1]],[75,"此人尚未添加任何传记",0,30,30,30,3,false,-1616,[0,"c3g6hQ6SNNR7YIjh3OD+CB"],[4,4291743438],374]],[1,-353.533,82.823,0]],[2,"Tag",512,33554432,117,[[1,-1617,[0,"f7NISe7HdAD68SLfhnddy8"],[5,120,50]],[8,0,-1618,[0,"e71ctEmpxFC4KlSYRZNz/a"],[4,4278214290],376]]],[4,"Bg",512,33554432,117,[[1,-1619,[0,"f7NISe7HdAD68SLfhnddy8"],[5,120,50]],[7,0,-1620,[0,"e71ctEmpxFC4KlSYRZNz/a"],377]],[1,150,0.446,0]],[2,"Key",512,33554432,117,[[1,-1621,[0,"c68UOAlNhN171Umca6yVvF"],[5,60,50.4]],[5,"兵力",30,30,false,-1622,[0,"2frm37uaJHQr0AEEaYyM82"],378]]],[4,"Value",512,33554432,117,[[1,-1623,[0,"c68UOAlNhN171Umca6yVvF"],[5,60,50.4]],[5,"1234",30,30,false,-1624,[0,"2frm37uaJHQr0AEEaYyM82"],379]],[1,150,0.446,0]],[2,"Tag",512,33554432,118,[[1,-1625,[0,"f7NISe7HdAD68SLfhnddy8"],[5,120,50]],[8,0,-1626,[0,"e71ctEmpxFC4KlSYRZNz/a"],[4,4278214290],380]]],[4,"Bg",512,33554432,118,[[1,-1627,[0,"f7NISe7HdAD68SLfhnddy8"],[5,120,50]],[7,0,-1628,[0,"e71ctEmpxFC4KlSYRZNz/a"],381]],[1,150,0.446,0]],[2,"Key",512,33554432,118,[[1,-1629,[0,"c68UOAlNhN171Umca6yVvF"],[5,60,50.4]],[5,"兵力",30,30,false,-1630,[0,"2frm37uaJHQr0AEEaYyM82"],382]]],[4,"Value",512,33554432,118,[[1,-1631,[0,"c68UOAlNhN171Umca6yVvF"],[5,60,50.4]],[5,"1234",30,30,false,-1632,[0,"2frm37uaJHQr0AEEaYyM82"],383]],[1,150,0.446,0]],[2,"Tag",512,33554432,119,[[1,-1633,[0,"f7NISe7HdAD68SLfhnddy8"],[5,120,50]],[8,0,-1634,[0,"e71ctEmpxFC4KlSYRZNz/a"],[4,4278214290],384]]],[4,"Bg",512,33554432,119,[[1,-1635,[0,"f7NISe7HdAD68SLfhnddy8"],[5,120,50]],[7,0,-1636,[0,"e71ctEmpxFC4KlSYRZNz/a"],385]],[1,150,0.446,0]],[2,"Key",512,33554432,119,[[1,-1637,[0,"c68UOAlNhN171Umca6yVvF"],[5,60,50.4]],[5,"兵力",30,30,false,-1638,[0,"2frm37uaJHQr0AEEaYyM82"],386]]],[4,"Value",512,33554432,119,[[1,-1639,[0,"c68UOAlNhN171Umca6yVvF"],[5,60,50.4]],[5,"1234",30,30,false,-1640,[0,"2frm37uaJHQr0AEEaYyM82"],387]],[1,150,0.446,0]],[2,"Tag",512,33554432,120,[[1,-1641,[0,"f7NISe7HdAD68SLfhnddy8"],[5,120,50]],[8,0,-1642,[0,"e71ctEmpxFC4KlSYRZNz/a"],[4,4278214290],388]]],[4,"Bg",512,33554432,120,[[1,-1643,[0,"f7NISe7HdAD68SLfhnddy8"],[5,120,50]],[7,0,-1644,[0,"e71ctEmpxFC4KlSYRZNz/a"],389]],[1,150,0.446,0]],[2,"Key",512,33554432,120,[[1,-1645,[0,"c68UOAlNhN171Umca6yVvF"],[5,60,50.4]],[5,"兵力",30,30,false,-1646,[0,"2frm37uaJHQr0AEEaYyM82"],390]]],[4,"Value",512,33554432,120,[[1,-1647,[0,"c68UOAlNhN171Umca6yVvF"],[5,60,50.4]],[5,"1234",30,30,false,-1648,[0,"2frm37uaJHQr0AEEaYyM82"],391]],[1,150,0.446,0]],[2,"Tag",512,33554432,121,[[1,-1649,[0,"f7NISe7HdAD68SLfhnddy8"],[5,120,50]],[8,0,-1650,[0,"e71ctEmpxFC4KlSYRZNz/a"],[4,4278214290],392]]],[4,"Bg",512,33554432,121,[[1,-1651,[0,"f7NISe7HdAD68SLfhnddy8"],[5,120,50]],[7,0,-1652,[0,"e71ctEmpxFC4KlSYRZNz/a"],393]],[1,150,0.446,0]],[2,"Key",512,33554432,121,[[1,-1653,[0,"c68UOAlNhN171Umca6yVvF"],[5,60,50.4]],[5,"兵力",30,30,false,-1654,[0,"2frm37uaJHQr0AEEaYyM82"],394]]],[4,"Value",512,33554432,121,[[1,-1655,[0,"c68UOAlNhN171Umca6yVvF"],[5,60,50.4]],[5,"1234",30,30,false,-1656,[0,"2frm37uaJHQr0AEEaYyM82"],395]],[1,150,0.446,0]],[2,"Tag",512,33554432,122,[[1,-1657,[0,"f7NISe7HdAD68SLfhnddy8"],[5,120,50]],[8,0,-1658,[0,"e71ctEmpxFC4KlSYRZNz/a"],[4,4278214290],396]]],[4,"Bg",512,33554432,122,[[1,-1659,[0,"f7NISe7HdAD68SLfhnddy8"],[5,120,50]],[7,0,-1660,[0,"e71ctEmpxFC4KlSYRZNz/a"],397]],[1,150,0.446,0]],[2,"Key",512,33554432,122,[[1,-1661,[0,"c68UOAlNhN171Umca6yVvF"],[5,60,50.4]],[5,"兵力",30,30,false,-1662,[0,"2frm37uaJHQr0AEEaYyM82"],398]]],[4,"Value",512,33554432,122,[[1,-1663,[0,"c68UOAlNhN171Umca6yVvF"],[5,60,50.4]],[5,"1234",30,30,false,-1664,[0,"2frm37uaJHQr0AEEaYyM82"],399]],[1,150,0.446,0]],[2,"Tag",512,33554432,123,[[1,-1665,[0,"f7NISe7HdAD68SLfhnddy8"],[5,120,50]],[8,0,-1666,[0,"e71ctEmpxFC4KlSYRZNz/a"],[4,4278214290],400]]],[4,"Bg",512,33554432,123,[[1,-1667,[0,"f7NISe7HdAD68SLfhnddy8"],[5,120,50]],[7,0,-1668,[0,"e71ctEmpxFC4KlSYRZNz/a"],401]],[1,150,0.446,0]],[2,"Key",512,33554432,123,[[1,-1669,[0,"c68UOAlNhN171Umca6yVvF"],[5,60,50.4]],[5,"兵力",30,30,false,-1670,[0,"2frm37uaJHQr0AEEaYyM82"],402]]],[4,"Value",512,33554432,123,[[1,-1671,[0,"c68UOAlNhN171Umca6yVvF"],[5,60,50.4]],[5,"1234",30,30,false,-1672,[0,"2frm37uaJHQr0AEEaYyM82"],403]],[1,150,0.446,0]],[2,"Tag",512,33554432,124,[[1,-1673,[0,"f7NISe7HdAD68SLfhnddy8"],[5,120,50]],[8,0,-1674,[0,"e71ctEmpxFC4KlSYRZNz/a"],[4,4278214290],404]]],[4,"Bg",512,33554432,124,[[1,-1675,[0,"f7NISe7HdAD68SLfhnddy8"],[5,120,50]],[7,0,-1676,[0,"e71ctEmpxFC4KlSYRZNz/a"],405]],[1,150,0.446,0]],[2,"Key",512,33554432,124,[[1,-1677,[0,"c68UOAlNhN171Umca6yVvF"],[5,60,50.4]],[5,"兵力",30,30,false,-1678,[0,"2frm37uaJHQr0AEEaYyM82"],406]]],[4,"Value",512,33554432,124,[[1,-1679,[0,"c68UOAlNhN171Umca6yVvF"],[5,60,50.4]],[5,"1234",30,30,false,-1680,[0,"2frm37uaJHQr0AEEaYyM82"],407]],[1,150,0.446,0]],[2,"Tag",512,33554432,125,[[1,-1681,[0,"f7NISe7HdAD68SLfhnddy8"],[5,120,50]],[8,0,-1682,[0,"e71ctEmpxFC4KlSYRZNz/a"],[4,4278214290],408]]],[4,"Bg",512,33554432,125,[[1,-1683,[0,"f7NISe7HdAD68SLfhnddy8"],[5,120,50]],[7,0,-1684,[0,"e71ctEmpxFC4KlSYRZNz/a"],409]],[1,150,0.446,0]],[2,"Key",512,33554432,125,[[1,-1685,[0,"c68UOAlNhN171Umca6yVvF"],[5,60,50.4]],[5,"兵力",30,30,false,-1686,[0,"2frm37uaJHQr0AEEaYyM82"],410]]],[4,"Value",512,33554432,125,[[1,-1687,[0,"c68UOAlNhN171Umca6yVvF"],[5,60,50.4]],[5,"1234",30,30,false,-1688,[0,"2frm37uaJHQr0AEEaYyM82"],411]],[1,150,0.446,0]],[2,"Tag",512,33554432,126,[[1,-1689,[0,"f7NISe7HdAD68SLfhnddy8"],[5,120,50]],[8,0,-1690,[0,"e71ctEmpxFC4KlSYRZNz/a"],[4,4278214290],412]]],[4,"Bg",512,33554432,126,[[1,-1691,[0,"f7NISe7HdAD68SLfhnddy8"],[5,120,50]],[7,0,-1692,[0,"e71ctEmpxFC4KlSYRZNz/a"],413]],[1,150,0.446,0]],[2,"Key",512,33554432,126,[[1,-1693,[0,"c68UOAlNhN171Umca6yVvF"],[5,60,50.4]],[5,"兵力",30,30,false,-1694,[0,"2frm37uaJHQr0AEEaYyM82"],414]]],[4,"Value",512,33554432,126,[[1,-1695,[0,"c68UOAlNhN171Umca6yVvF"],[5,60,50.4]],[5,"1234",30,30,false,-1696,[0,"2frm37uaJHQr0AEEaYyM82"],415]],[1,150,0.446,0]],[2,"Tag",512,33554432,127,[[1,-1697,[0,"f7NISe7HdAD68SLfhnddy8"],[5,120,50]],[8,0,-1698,[0,"e71ctEmpxFC4KlSYRZNz/a"],[4,4278214290],416]]],[4,"Bg",512,33554432,127,[[1,-1699,[0,"f7NISe7HdAD68SLfhnddy8"],[5,120,50]],[7,0,-1700,[0,"e71ctEmpxFC4KlSYRZNz/a"],417]],[1,150,0.446,0]],[2,"Key",512,33554432,127,[[1,-1701,[0,"c68UOAlNhN171Umca6yVvF"],[5,60,50.4]],[5,"兵力",30,30,false,-1702,[0,"2frm37uaJHQr0AEEaYyM82"],418]]],[4,"Value",512,33554432,127,[[1,-1703,[0,"c68UOAlNhN171Umca6yVvF"],[5,60,50.4]],[5,"1234",30,30,false,-1704,[0,"2frm37uaJHQr0AEEaYyM82"],419]],[1,150,0.446,0]],[2,"Tag",512,33554432,128,[[1,-1705,[0,"f7NISe7HdAD68SLfhnddy8"],[5,120,50]],[8,0,-1706,[0,"e71ctEmpxFC4KlSYRZNz/a"],[4,4278214290],420]]],[4,"Bg",512,33554432,128,[[1,-1707,[0,"f7NISe7HdAD68SLfhnddy8"],[5,120,50]],[7,0,-1708,[0,"e71ctEmpxFC4KlSYRZNz/a"],421]],[1,150,0.446,0]],[2,"Key",512,33554432,128,[[1,-1709,[0,"c68UOAlNhN171Umca6yVvF"],[5,60,50.4]],[5,"兵力",30,30,false,-1710,[0,"2frm37uaJHQr0AEEaYyM82"],422]]],[4,"Value",512,33554432,128,[[1,-1711,[0,"c68UOAlNhN171Umca6yVvF"],[5,60,50.4]],[5,"1234",30,30,false,-1712,[0,"2frm37uaJHQr0AEEaYyM82"],423]],[1,150,0.446,0]],[2,"Tag",512,33554432,129,[[1,-1713,[0,"f7NISe7HdAD68SLfhnddy8"],[5,120,50]],[8,0,-1714,[0,"e71ctEmpxFC4KlSYRZNz/a"],[4,4278214290],424]]],[4,"Bg",512,33554432,129,[[1,-1715,[0,"f7NISe7HdAD68SLfhnddy8"],[5,120,50]],[7,0,-1716,[0,"e71ctEmpxFC4KlSYRZNz/a"],425]],[1,150,0.446,0]],[2,"Key",512,33554432,129,[[1,-1717,[0,"c68UOAlNhN171Umca6yVvF"],[5,60,50.4]],[5,"兵力",30,30,false,-1718,[0,"2frm37uaJHQr0AEEaYyM82"],426]]],[4,"Value",512,33554432,129,[[1,-1719,[0,"c68UOAlNhN171Umca6yVvF"],[5,60,50.4]],[5,"1234",30,30,false,-1720,[0,"2frm37uaJHQr0AEEaYyM82"],427]],[1,150,0.446,0]],[2,"Tag",512,33554432,130,[[1,-1721,[0,"f7NISe7HdAD68SLfhnddy8"],[5,120,50]],[8,0,-1722,[0,"e71ctEmpxFC4KlSYRZNz/a"],[4,4278214290],428]]],[4,"Bg",512,33554432,130,[[1,-1723,[0,"f7NISe7HdAD68SLfhnddy8"],[5,120,50]],[7,0,-1724,[0,"e71ctEmpxFC4KlSYRZNz/a"],429]],[1,150,0.446,0]],[2,"Key",512,33554432,130,[[1,-1725,[0,"c68UOAlNhN171Umca6yVvF"],[5,60,50.4]],[5,"兵力",30,30,false,-1726,[0,"2frm37uaJHQr0AEEaYyM82"],430]]],[4,"Value",512,33554432,130,[[1,-1727,[0,"c68UOAlNhN171Umca6yVvF"],[5,60,50.4]],[5,"1234",30,30,false,-1728,[0,"2frm37uaJHQr0AEEaYyM82"],431]],[1,150,0.446,0]],[2,"Tag",512,33554432,131,[[1,-1729,[0,"f7NISe7HdAD68SLfhnddy8"],[5,120,50]],[8,0,-1730,[0,"e71ctEmpxFC4KlSYRZNz/a"],[4,4278214290],432]]],[4,"Bg",512,33554432,131,[[1,-1731,[0,"f7NISe7HdAD68SLfhnddy8"],[5,120,50]],[7,0,-1732,[0,"e71ctEmpxFC4KlSYRZNz/a"],433]],[1,150,0.446,0]],[2,"Key",512,33554432,131,[[1,-1733,[0,"c68UOAlNhN171Umca6yVvF"],[5,60,50.4]],[5,"兵力",30,30,false,-1734,[0,"2frm37uaJHQr0AEEaYyM82"],434]]],[4,"Value",512,33554432,131,[[1,-1735,[0,"c68UOAlNhN171Umca6yVvF"],[5,60,50.4]],[5,"1234",30,30,false,-1736,[0,"2frm37uaJHQr0AEEaYyM82"],435]],[1,150,0.446,0]],[2,"Sprite",512,33554432,132,[[1,-1737,[0,"d8hXsSM4NGKLdhI1GkI9WA"],[5,900,350]],[17,1,0,-1738,[0,"d90P7uhDRGYKaBD0I0xB0V"],438]]],[4,"HeadImage",512,33554432,132,[[1,-1739,[0,"fb4J9pYxJKiLZvo5g62Uw4"],[5,150,200]],[7,0,-1740,[0,"25+9TSStFJC6TRZhsjO/9t"],439]],[1,-325.433,0,0]],[4,"Label",512,33554432,132,[[1,-1741,[0,"6d93waEGFBIbwbQOHMDrn8"],[5,600,50.4]],[77,"",1,600,false,-1742,440,441]],[1,100,0,0]],[2,"Bg",512,33554432,165,[[1,-1743,[0,"55pCbtzR5GbojKMArZkfim"],[5,820,820]],[6,1,0,-1744,[0,"20UGQn4U9GUoln0NJQTkbG"],[4,1694498815],445]]],[84,"Frame",512,false,33554432,165,[[1,-1745,[0,"d8hXsSM4NGKLdhI1GkI9WA"],[5,820,820]],[17,1,0,-1746,[0,"d90P7uhDRGYKaBD0I0xB0V"],448]]],[43,"LogItem1",33554432,72,[211],[[9,-1747,[5,0,0]]],[1,0,320,0]],[35,"Label",33554432,211,[[9,-1748,[5,900,50.4]],[41,"",1,35,900,false,-1749,451,452]]],[43,"LogItem2",33554432,72,[212],[[9,-1750,[5,0,0]]],[1,0,160,0]],[35,"Label",33554432,212,[[9,-1751,[5,900,50.4]],[41,"",1,35,900,false,-1752,454,455]]],[59,"LogItem3",33554432,72,[213],[[9,-1753,[5,0,0]]]],[35,"Label",33554432,213,[[9,-1754,[5,900,50.4]],[41,"",1,35,900,false,-1755,457,458]]],[43,"LogItem4",33554432,72,[214],[[9,-1756,[5,0,0]]],[1,0,-160,0]],[35,"Label",33554432,214,[[9,-1757,[5,900,50.4]],[41,"",1,35,900,false,-1758,460,461]]],[43,"LogItem5",33554432,72,[215],[[9,-1759,[5,0,0]]],[1,0,-320,0]],[35,"Label",33554432,215,[[9,-1760,[5,900,50.4]],[41,"",1,35,900,false,-1761,463,464]]],[2,"Label",512,33554432,19,[[1,-1762,[0,"c68UOAlNhN171Umca6yVvF"],[5,0,50.4]],[31,"",40,false,-1763,[0,"2frm37uaJHQr0AEEaYyM82"],[4,4285559039],466]]],[2,"Label",512,33554432,73,[[1,-1764,[0,"a819r6kfBP0IAd6HtX1HoQ"],[5,110,70]],[49,"上一页",40,60,1,false,false,-1765,[0,"adMPUsV5pBh7QA0/O7wygd"],467]]],[2,"Label",512,33554432,74,[[1,-1766,[0,"a819r6kfBP0IAd6HtX1HoQ"],[5,110,70]],[49,"下一页",40,60,1,false,false,-1767,[0,"adMPUsV5pBh7QA0/O7wygd"],470]]],[60,"Page",33554432,19,[[9,-1768,[5,55.61,50.4]],[134,"0/5",40,-1769]],[1,0,-480,0]],[2,"Sprite",512,33554432,168,[[1,-1770,[0,"d8hXsSM4NGKLdhI1GkI9WA"],[5,1020,740]],[17,1,0,-1771,[0,"d90P7uhDRGYKaBD0I0xB0V"],475]]],[4,"Content",512,33554432,217,[[23,-1772,[0,"99yn0cfL9MmZYfJbPmK9qL"],[5,1000,720],[0,0.5,1]]],[1,0,360,0]],[2,"Sprite",512,33554432,133,[[1,-1773,[0,"d8hXsSM4NGKLdhI1GkI9WA"],[5,960,640]],[17,1,0,-1774,[0,"d90P7uhDRGYKaBD0I0xB0V"],480]]],[2,"Label",512,33554432,219,[[1,-1775,[0,"e2JsWKsM5A1q4pAkN+TYtp"],[5,180,37.8]],[40,"选择存档位置",30,30,30,false,true,-1776,[0,"c3g6hQ6SNNR7YIjh3OD+CB"],481]]],[2,"Key",512,33554432,221,[[1,-1777,[0,"c68UOAlNhN171Umca6yVvF"],[5,75,50.4]],[5,"存档1",30,30,false,-1778,[0,"2frm37uaJHQr0AEEaYyM82"],483]]],[4,"Value",512,33554432,222,[[1,-1779,[0,"c68UOAlNhN171Umca6yVvF"],[5,0,50.4]],[5,"",30,30,false,-1780,[0,"2frm37uaJHQr0AEEaYyM82"],485]],[1,2.3509999999998854,0,0]],[2,"Key",512,33554432,224,[[1,-1781,[0,"c68UOAlNhN171Umca6yVvF"],[5,75,50.4]],[5,"存档2",30,30,false,-1782,[0,"2frm37uaJHQr0AEEaYyM82"],487]]],[4,"Value",512,33554432,225,[[1,-1783,[0,"c68UOAlNhN171Umca6yVvF"],[5,0,50.4]],[5,"",30,30,false,-1784,[0,"2frm37uaJHQr0AEEaYyM82"],489]],[1,2.3509999999998854,0,0]],[2,"Key",512,33554432,227,[[1,-1785,[0,"c68UOAlNhN171Umca6yVvF"],[5,75,50.4]],[5,"存档3",30,30,false,-1786,[0,"2frm37uaJHQr0AEEaYyM82"],491]]],[4,"Value",512,33554432,228,[[1,-1787,[0,"c68UOAlNhN171Umca6yVvF"],[5,0,50.4]],[5,"",30,30,false,-1788,[0,"2frm37uaJHQr0AEEaYyM82"],493]],[1,2.3509999999998854,0,0]],[2,"Key",512,33554432,230,[[1,-1789,[0,"c68UOAlNhN171Umca6yVvF"],[5,75,50.4]],[5,"存档4",30,30,false,-1790,[0,"2frm37uaJHQr0AEEaYyM82"],495]]],[4,"Value",512,33554432,231,[[1,-1791,[0,"c68UOAlNhN171Umca6yVvF"],[5,0,50.4]],[5,"",30,30,false,-1792,[0,"2frm37uaJHQr0AEEaYyM82"],497]],[1,2.3509999999998854,0,0]],[2,"Label",512,33554432,134,[[1,-1793,[0,"07QMd0h1dLcYd/vjigaip6"],[5,100,40]],[24,"确定",40,1,false,false,-1794,[0,"ee3IZdy2dLIaAWpjI7P0FL"],499]]],[2,"Sprite",512,33554432,20,[[1,-1795,[0,"01S8KtW5pFMrSWR87Ho+Jc"],[5,900,500]],[17,1,0,-1796,[0,"766FVJSh5NhLRZ9O8hOEHt"],504]]],[2,"Frame",512,33554432,233,[[1,-1797,[0,"01S8KtW5pFMrSWR87Ho+Jc"],[5,110,130]],[17,1,0,-1798,[0,"766FVJSh5NhLRZ9O8hOEHt"],505]]],[4,"Label",512,33554432,20,[[1,-1799,[0,"c4EiNH8kJAVatzrVaJBbmw"],[5,800,50.4]],[139,"",1,800,false,-1800,[0,"aeJ6QXGqBDLouVt9/JiEKd"],507,508]],[1,0,60,0]],[2,"Label",512,33554432,135,[[1,-1801,[0,"86gMGzxPlMRozxZYInvqTC"],[5,100,50]],[24,"是",40,1,false,false,-1802,[0,"e3y80yCpJI6Ld5Y193HjFx"],509]]],[2,"Label",512,33554432,136,[[1,-1803,[0,"f7NytuAz1EkatbSUJc/ntg"],[5,100,50]],[24,"否",40,1,false,false,-1804,[0,"56s4klhi9C75VUp92CHw+H"],512]]],[2,"Sprite",512,33554432,137,[[1,-1805,[0,"d8hXsSM4NGKLdhI1GkI9WA"],[5,800,600]],[17,1,0,-1806,[0,"d90P7uhDRGYKaBD0I0xB0V"],518]]],[2,"Label",512,33554432,235,[[1,-1807,[0,"e2JsWKsM5A1q4pAkN+TYtp"],[5,60,37.8]],[40,"刘备",30,30,30,false,true,-1808,[0,"c3g6hQ6SNNR7YIjh3OD+CB"],519]]],[2,"Tag",512,33554432,138,[[1,-1809,[0,"f7NISe7HdAD68SLfhnddy8"],[5,140,50]],[8,0,-1810,[0,"e71ctEmpxFC4KlSYRZNz/a"],[4,4278214290],521]]],[4,"Bg",512,33554432,138,[[1,-1811,[0,"f7NISe7HdAD68SLfhnddy8"],[5,170,50]],[7,0,-1812,[0,"e71ctEmpxFC4KlSYRZNz/a"],522]],[1,178.209,0.446,0]],[2,"Key",512,33554432,138,[[1,-1813,[0,"c68UOAlNhN171Umca6yVvF"],[5,60,50.4]],[5,"兵力",30,30,false,-1814,[0,"2frm37uaJHQr0AEEaYyM82"],523]]],[4,"Value",512,33554432,138,[[1,-1815,[0,"c68UOAlNhN171Umca6yVvF"],[5,60,50.4]],[5,"1234",30,30,false,-1816,[0,"2frm37uaJHQr0AEEaYyM82"],524]],[1,180.56,0.446,0]],[2,"Tag",512,33554432,139,[[1,-1817,[0,"f7NISe7HdAD68SLfhnddy8"],[5,140,50]],[8,0,-1818,[0,"e71ctEmpxFC4KlSYRZNz/a"],[4,4278214290],525]]],[4,"Bg",512,33554432,139,[[1,-1819,[0,"f7NISe7HdAD68SLfhnddy8"],[5,170,50]],[7,0,-1820,[0,"e71ctEmpxFC4KlSYRZNz/a"],526]],[1,178.209,0.446,0]],[2,"Key",512,33554432,139,[[1,-1821,[0,"c68UOAlNhN171Umca6yVvF"],[5,60,50.4]],[5,"兵力",30,30,false,-1822,[0,"2frm37uaJHQr0AEEaYyM82"],527]]],[4,"Value",512,33554432,139,[[1,-1823,[0,"c68UOAlNhN171Umca6yVvF"],[5,60,50.4]],[5,"1234",30,30,false,-1824,[0,"2frm37uaJHQr0AEEaYyM82"],528]],[1,180.56,0.446,0]],[2,"Tag",512,33554432,140,[[1,-1825,[0,"f7NISe7HdAD68SLfhnddy8"],[5,140,50]],[8,0,-1826,[0,"e71ctEmpxFC4KlSYRZNz/a"],[4,4278214290],529]]],[4,"Bg",512,33554432,140,[[1,-1827,[0,"f7NISe7HdAD68SLfhnddy8"],[5,170,50]],[7,0,-1828,[0,"e71ctEmpxFC4KlSYRZNz/a"],530]],[1,178.209,0.446,0]],[2,"Key",512,33554432,140,[[1,-1829,[0,"c68UOAlNhN171Umca6yVvF"],[5,60,50.4]],[5,"兵力",30,30,false,-1830,[0,"2frm37uaJHQr0AEEaYyM82"],531]]],[4,"Value",512,33554432,140,[[1,-1831,[0,"c68UOAlNhN171Umca6yVvF"],[5,60,50.4]],[5,"1234",30,30,false,-1832,[0,"2frm37uaJHQr0AEEaYyM82"],532]],[1,180.56,0.446,0]],[2,"Tag",512,33554432,141,[[1,-1833,[0,"f7NISe7HdAD68SLfhnddy8"],[5,140,50]],[8,0,-1834,[0,"e71ctEmpxFC4KlSYRZNz/a"],[4,4278214290],533]]],[4,"Bg",512,33554432,141,[[1,-1835,[0,"f7NISe7HdAD68SLfhnddy8"],[5,170,50]],[7,0,-1836,[0,"e71ctEmpxFC4KlSYRZNz/a"],534]],[1,178.209,0.446,0]],[2,"Key",512,33554432,141,[[1,-1837,[0,"c68UOAlNhN171Umca6yVvF"],[5,60,50.4]],[5,"兵力",30,30,false,-1838,[0,"2frm37uaJHQr0AEEaYyM82"],535]]],[4,"Value",512,33554432,141,[[1,-1839,[0,"c68UOAlNhN171Umca6yVvF"],[5,60,50.4]],[5,"1234",30,30,false,-1840,[0,"2frm37uaJHQr0AEEaYyM82"],536]],[1,180.56,0.446,0]],[2,"Key",512,33554432,236,[[1,-1841,[0,"c68UOAlNhN171Umca6yVvF"],[5,120,50.4]],[5,"执行武将",30,30,false,-1842,[0,"2frm37uaJHQr0AEEaYyM82"],537]]],[2,"Value",512,33554432,237,[[1,-1843,[0,"c68UOAlNhN171Umca6yVvF"],[5,120,50.4]],[5,"诸葛孔明",30,30,false,-1844,[0,"2frm37uaJHQr0AEEaYyM82"],539]]],[2,"Value",512,33554432,238,[[1,-1845,[0,"c68UOAlNhN171Umca6yVvF"],[5,120,50.4]],[5,"诸葛孔明",30,30,false,-1846,[0,"2frm37uaJHQr0AEEaYyM82"],541]]],[2,"Value",512,33554432,239,[[1,-1847,[0,"c68UOAlNhN171Umca6yVvF"],[5,120,50.4]],[5,"诸葛孔明",30,30,false,-1848,[0,"2frm37uaJHQr0AEEaYyM82"],543]]],[2,"Value",512,33554432,240,[[1,-1849,[0,"c68UOAlNhN171Umca6yVvF"],[5,120,50.4]],[5,"诸葛孔明",30,30,false,-1850,[0,"2frm37uaJHQr0AEEaYyM82"],545]]],[2,"Value",512,33554432,241,[[1,-1851,[0,"c68UOAlNhN171Umca6yVvF"],[5,120,50.4]],[5,"诸葛孔明",30,30,false,-1852,[0,"2frm37uaJHQr0AEEaYyM82"],547]]],[2,"Value",512,33554432,242,[[1,-1853,[0,"c68UOAlNhN171Umca6yVvF"],[5,120,50.4]],[5,"诸葛孔明",30,30,false,-1854,[0,"2frm37uaJHQr0AEEaYyM82"],549]]],[2,"Label",512,33554432,142,[[1,-1855,[0,"07QMd0h1dLcYd/vjigaip6"],[5,100,40]],[24,"确定",40,1,false,false,-1856,[0,"ee3IZdy2dLIaAWpjI7P0FL"],551]]],[2,"Label",512,33554432,143,[[1,-1857,[0,"07QMd0h1dLcYd/vjigaip6"],[5,100,40]],[24,"取消",40,1,false,false,-1858,[0,"ee3IZdy2dLIaAWpjI7P0FL"],554]]],[2,"Sprite",512,33554432,21,[[1,-1859,[0,"d8hXsSM4NGKLdhI1GkI9WA"],[5,840,500]],[17,1,0,-1860,[0,"d90P7uhDRGYKaBD0I0xB0V"],559]]],[2,"Label",512,33554432,244,[[1,-1861,[0,"e2JsWKsM5A1q4pAkN+TYtp"],[5,60,37.8]],[40,"刘备",30,30,30,false,true,-1862,[0,"c3g6hQ6SNNR7YIjh3OD+CB"],560]]],[2,"Bg",512,33554432,21,[[1,-1863,[0,"f7NISe7HdAD68SLfhnddy8"],[5,800,400]],[17,1,0,-1864,[0,"e71ctEmpxFC4KlSYRZNz/a"],562]]],[2,"Value",512,33554432,21,[[1,-1865,[0,"c68UOAlNhN171Umca6yVvF"],[5,760,37.8]],[135,"",30,30,30,3,false,-1866,[0,"2frm37uaJHQr0AEEaYyM82"],563]]],[2,"Sprite",512,33554432,174,[[1,-1867,[0,"0eyG+xDrpBMqEK5rGO9gm0"],[5,1200,80]],[7,0,-1868,[0,"26oDNDNW9AYaInFD1md2jA"],564]]],[2,"Label",512,33554432,174,[[1,-1869,[0,"69ssisd+lLlY992q5cH0Si"],[5,630,50.4]],[5,"测试测试测试测试测试测试测试测试测试测试测",30,30,false,-1870,[0,"784LqzWHZCbZ0lgdofC8PF"],565]]],[85,"Light",512,"c0y6F5f+pAvI805TdmxIjx",8,[[140,100000,2.604166666666667,0.1,100,1,1,30,-1871,[141]]],[1,0,0,125.213],[3,-0.49999999999999994,0,0,0.8660254037844387],[1,-60,0,0]],[142,1074790400,245,[4,4278190080]],[61,"GameCenter",512,"ecqUd6AVVOmZu8/QO7SrSI",8,[[144,-1872,0]]],[86,"LandMesh",512,"36HfdMpn1AGJxlEO+O7Hff",8,[[137,-1873,[0,"faCdEzPJRRbqWHjyzfPJdF"],[1],[56],2]],[1,-0.4,0,0.4],[1,64,5,64]],[87,"SelectLand",512,false,"89drE8B95GCbd1hXUxd97q",8,[[76,"Plane<ModelComponent>",-1874,[0,"e0uHCYkZ1D1I9glcT6oLf2"],[6],[56],7]],[1,-0.5,0.05,0.5],[3,0,0.7071067811865475,0,0.7071067811865476],[1,10,1,10],[1,0,90,0]],[61,"Cube",512,"13WqtibNJBeqZslerUhvOm",8,[[145,false,-1875,1,559]]],[2,"EntityIcons",512,33554432,1,[[11,-1876,[0,"c3+G2/WNRGibiaSqvSAOUL"]]]],[88,"TeamIcons",512,1,[[50,-1877]]],[143,0,1073741824,692.670807453416,2000,6,33554432,247,[0,"55wfNf9wBKi4wbrvL0795d"],[4,0]],[119,0,298,[0,"fdzi2sBIdEPJL1mlZ0PyB2"]],[46,"Checkmark<SpriteComponent>",299,[0,"e0gLtOdPRJBqfkS9XukCzR"]],[46,"Checkmark<SpriteComponent>",300,[0,"5bqDx3UVRPq4IOWHux/9g4"]],[46,"Checkmark<SpriteComponent>",301,[0,"46IfCNvNtL4a63Kr6SfQhb"]],[69,"Checkmark<SpriteComponent>",0,327,[0,"e0gLtOdPRJBqfkS9XukCzR"]],[69,"Checkmark<SpriteComponent>",0,328,[0,"5bqDx3UVRPq4IOWHux/9g4"]],[46,"Checkmark<SpriteComponent>",329,[0,"46IfCNvNtL4a63Kr6SfQhb"]]],0,[0,0,1,0,17,566,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,-1,564,0,-2,565,0,-3,247,0,-4,144,0,-5,145,0,-6,146,0,-7,22,0,-8,23,0,-9,24,0,-10,25,0,-11,26,0,-12,27,0,-13,28,0,-14,29,0,-15,147,0,-16,148,0,-17,151,0,-18,177,0,-19,62,0,-20,65,0,-21,182,0,-22,183,0,-23,184,0,-24,158,0,-25,187,0,-26,203,0,-27,207,0,-28,208,0,-29,210,0,-30,216,0,-31,218,0,-32,232,0,-33,234,0,-34,243,0,-35,174,0,0,2,0,0,2,0,3,2,0,0,2,0,-1,264,0,-2,30,0,-3,31,0,-4,32,0,-5,33,0,-6,34,0,-7,35,0,-8,36,0,-9,37,0,-10,38,0,-11,39,0,-12,40,0,-13,41,0,-14,42,0,-15,43,0,-16,44,0,-17,45,0,-18,46,0,-19,47,0,-20,48,0,-21,49,0,-22,50,0,-23,51,0,-24,52,0,-25,53,0,-26,54,0,-27,55,0,-28,56,0,-29,57,0,-30,58,0,-31,59,0,0,3,0,0,3,0,-1,348,0,-2,188,0,-3,189,0,-4,101,0,-5,102,0,-6,103,0,-7,104,0,-8,105,0,-9,106,0,-10,107,0,-11,108,0,-12,109,0,-13,110,0,-14,111,0,-15,112,0,-16,113,0,-17,114,0,-18,115,0,-19,5,0,0,4,0,0,4,0,-1,204,0,-2,205,0,-3,206,0,-4,117,0,-5,118,0,-6,119,0,-7,120,0,-8,121,0,-9,122,0,-10,123,0,-11,124,0,-12,125,0,-13,126,0,-14,127,0,-15,128,0,-16,129,0,-17,130,0,-18,131,0,0,5,0,-1,190,0,-2,191,0,-3,192,0,-4,193,0,-5,194,0,-6,195,0,-7,196,0,-8,197,0,-9,198,0,-10,199,0,-11,200,0,-12,201,0,-13,202,0,0,6,0,0,6,0,0,6,0,-1,324,0,-2,325,0,-3,326,0,-4,89,0,-5,90,0,-6,91,0,-7,330,0,-8,331,0,-9,332,0,0,7,0,0,7,0,0,7,0,-1,77,0,-2,78,0,-3,79,0,-4,80,0,-5,302,0,-6,303,0,-7,304,0,-8,305,0,-1,558,0,-2,245,0,-3,560,0,-4,561,0,-5,246,0,-6,562,0,-7,563,0,5,8,0,5,8,0,0,9,0,0,9,0,3,9,0,0,9,0,-1,295,0,-2,60,0,-3,61,0,-5,16,0,-6,17,0,0,10,0,0,10,0,-1,235,0,-2,138,0,-3,139,0,-4,140,0,-5,141,0,-6,14,0,-7,142,0,-8,143,0,0,11,0,0,11,0,3,11,0,0,11,0,-1,322,0,-2,68,0,-4,92,0,-5,69,0,0,12,0,0,12,0,3,12,0,0,12,0,-1,339,0,-2,70,0,-3,18,0,-4,71,0,0,13,0,0,13,0,-1,219,0,-2,220,0,-3,223,0,-4,226,0,-5,229,0,-6,134,0,0,14,0,-1,236,0,-2,237,0,-3,238,0,-4,239,0,-5,240,0,-6,241,0,-7,242,0,0,15,0,0,15,0,3,15,0,0,15,0,-1,150,0,-2,75,0,-3,76,0,0,16,0,0,16,0,-1,306,0,-2,81,0,-3,82,0,-4,83,0,-5,84,0,0,17,0,0,17,0,-1,311,0,-2,85,0,-3,86,0,-4,87,0,-5,88,0,0,18,0,0,18,0,-1,341,0,-2,95,0,-3,96,0,-4,97,0,-5,98,0,0,19,0,0,19,0,-1,72,0,-2,503,0,-3,73,0,-4,74,0,-5,506,0,0,20,0,0,20,0,-1,520,0,-2,233,0,-3,522,0,-4,135,0,-5,136,0,0,21,0,3,21,0,0,21,0,-1,552,0,-2,244,0,-3,554,0,-4,555,0,0,22,0,0,22,0,0,22,0,3,22,0,0,22,0,-1,253,0,0,23,0,0,23,0,3,23,0,0,23,0,0,23,0,-1,254,0,0,24,0,0,24,0,3,24,0,0,24,0,0,24,0,-1,255,0,0,25,0,0,25,0,3,25,0,0,25,0,0,25,0,-1,256,0,0,26,0,0,26,0,3,26,0,0,26,0,0,26,0,-1,257,0,0,27,0,0,27,0,3,27,0,0,27,0,0,27,0,-1,258,0,0,28,0,0,28,0,3,28,0,0,28,0,0,28,0,-1,259,0,0,29,0,0,29,0,3,29,0,0,29,0,0,29,0,-1,260,0,0,30,0,0,30,0,3,30,0,0,30,0,0,30,0,-1,265,0,0,31,0,0,31,0,3,31,0,0,31,0,0,31,0,-1,266,0,0,32,0,0,32,0,3,32,0,0,32,0,0,32,0,-1,267,0,0,33,0,0,33,0,3,33,0,0,33,0,0,33,0,-1,268,0,0,34,0,0,34,0,3,34,0,0,34,0,0,34,0,-1,269,0,0,35,0,0,35,0,3,35,0,0,35,0,0,35,0,-1,270,0,0,36,0,0,36,0,3,36,0,0,36,0,0,36,0,-1,271,0,0,37,0,0,37,0,3,37,0,0,37,0,0,37,0,-1,272,0,0,38,0,0,38,0,3,38,0,0,38,0,0,38,0,-1,273,0,0,39,0,0,39,0,3,39,0,0,39,0,0,39,0,-1,274,0,0,40,0,0,40,0,3,40,0,0,40,0,0,40,0,-1,275,0,0,41,0,0,41,0,3,41,0,0,41,0,0,41,0,-1,276,0,0,42,0,0,42,0,3,42,0,0,42,0,0,42,0,-1,277,0,0,43,0,0,43,0,3,43,0,0,43,0,0,43,0,-1,278,0,0,44,0,0,44,0,3,44,0,0,44,0,0,44,0,-1,279,0,0,45,0,0,45,0,3,45,0,0,45,0,0,45,0,-1,280,0,0,46,0,0,46,0,3,46,0,0,46,0,0,46,0,-1,281,0,0,47,0,0,47,0,3,47,0,0,47,0,0,47,0,-1,282,0,0,48,0,0,48,0,3,48,0,0,48,0,0,48,0,-1,283,0,0,49,0,0,49,0,3,49,0,0,49,0,0,49,0,-1,284,0,0,50,0,0,50,0,3,50,0,0,50,0,0,50,0,-1,285,0,0,51,0,0,51,0,3,51,0,0,51,0,0,51,0,-1,286,0,0,52,0,0,52,0,3,52,0,0,52,0,0,52,0,-1,287,0,0,53,0,0,53,0,3,53,0,0,53,0,0,53,0,-1,288,0,0,54,0,0,54,0,3,54,0,0,54,0,0,54,0,-1,289,0,0,55,0,0,55,0,3,55,0,0,55,0,0,55,0,-1,290,0,0,56,0,0,56,0,3,56,0,0,56,0,0,56,0,-1,291,0,0,57,0,0,57,0,3,57,0,0,57,0,0,57,0,-1,292,0,0,58,0,0,58,0,3,58,0,0,58,0,0,58,0,-1,293,0,0,59,0,0,59,0,3,59,0,0,59,0,0,59,0,-1,294,0,0,60,0,0,60,0,3,60,0,0,60,0,0,60,0,-1,296,0,0,61,0,0,61,0,3,61,0,0,61,0,0,61,0,-1,297,0,0,62,0,-1,316,0,-2,178,0,-3,63,0,-4,64,0,-5,179,0,0,63,0,0,63,0,3,63,0,0,63,0,0,63,0,-1,317,0,0,64,0,0,64,0,3,64,0,0,64,0,0,64,0,-1,318,0,0,65,0,-1,319,0,-2,180,0,-3,66,0,-4,67,0,-5,181,0,0,66,0,0,66,0,3,66,0,0,66,0,0,66,0,-1,320,0,0,67,0,0,67,0,3,67,0,0,67,0,0,67,0,-1,321,0,0,68,0,0,68,0,3,68,0,0,68,0,0,68,0,-1,323,0,0,69,0,0,69,0,3,69,0,0,69,0,0,69,0,-1,336,0,0,70,0,0,70,0,3,70,0,0,70,0,0,70,0,-1,340,0,0,71,0,0,71,0,3,71,0,0,71,0,0,71,0,-1,346,0,0,72,0,-1,493,0,-2,495,0,-3,497,0,-4,499,0,-5,501,0,0,73,0,0,73,0,3,73,0,0,73,0,0,73,0,-1,504,0,0,74,0,0,74,0,3,74,0,0,74,0,0,74,0,-1,505,0,0,75,0,0,75,0,3,75,0,0,75,0,-1,262,0,0,76,0,0,76,0,3,76,0,0,76,0,-1,263,0,0,77,0,0,77,0,8,567,0,3,77,0,0,77,0,-1,298,0,0,78,0,0,78,0,8,568,0,3,78,0,0,78,0,-1,299,0,0,79,0,0,79,0,8,569,0,3,79,0,0,79,0,-1,300,0,0,80,0,0,80,0,8,570,0,3,80,0,0,80,0,-1,301,0,0,81,0,0,81,0,3,81,0,0,81,0,-1,307,0,0,82,0,0,82,0,3,82,0,0,82,0,-1,308,0,0,83,0,0,83,0,3,83,0,0,83,0,-1,309,0,0,84,0,0,84,0,3,84,0,0,84,0,-1,310,0,0,85,0,0,85,0,3,85,0,0,85,0,-1,312,0,0,86,0,0,86,0,3,86,0,0,86,0,-1,313,0,0,87,0,0,87,0,3,87,0,0,87,0,-1,314,0,0,88,0,0,88,0,3,88,0,0,88,0,-1,315,0,0,89,0,0,89,0,8,571,0,3,89,0,0,89,0,-1,327,0,0,90,0,0,90,0,8,572,0,3,90,0,0,90,0,-1,328,0,0,91,0,0,91,0,8,573,0,3,91,0,0,91,0,-1,329,0,0,92,0,0,92,0,-1,333,0,-2,93,0,-3,94,0,0,93,0,0,93,0,3,93,0,0,93,0,-1,334,0,0,94,0,0,94,0,3,94,0,0,94,0,-1,335,0,0,95,0,0,95,0,3,95,0,0,95,0,-1,342,0,0,96,0,0,96,0,3,96,0,0,96,0,-1,343,0,0,97,0,0,97,0,3,97,0,0,97,0,-1,344,0,0,98,0,0,98,0,3,98,0,0,98,0,-1,345,0,0,99,0,0,99,0,3,99,0,0,99,0,-1,160,0,0,100,0,3,100,0,0,100,0,-1,347,0,0,101,0,-1,351,0,-2,352,0,-3,353,0,-4,354,0,0,102,0,-1,355,0,-2,356,0,-3,357,0,-4,358,0,0,103,0,-1,359,0,-2,360,0,-3,361,0,-4,362,0,0,104,0,-1,363,0,-2,364,0,-3,365,0,-4,366,0,0,105,0,-1,367,0,-2,368,0,-3,369,0,-4,370,0,0,106,0,-1,371,0,-2,372,0,-3,373,0,-4,374,0,0,107,0,-1,375,0,-2,376,0,-3,377,0,-4,378,0,0,108,0,-1,379,0,-2,380,0,-3,381,0,-4,382,0,0,109,0,-1,383,0,-2,384,0,-3,385,0,-4,386,0,0,110,0,-1,387,0,-2,388,0,-3,389,0,-4,390,0,0,111,0,-1,391,0,-2,392,0,-3,393,0,-4,394,0,0,112,0,-1,395,0,-2,396,0,-3,397,0,-4,398,0,0,113,0,-1,399,0,-2,400,0,-3,401,0,-4,402,0,0,114,0,-1,403,0,-2,404,0,-3,405,0,-4,406,0,0,115,0,-1,407,0,-2,408,0,-3,409,0,-4,410,0,0,116,0,3,116,0,0,116,0,-1,424,0,0,117,0,-1,428,0,-2,429,0,-3,430,0,-4,431,0,0,118,0,-1,432,0,-2,433,0,-3,434,0,-4,435,0,0,119,0,-1,436,0,-2,437,0,-3,438,0,-4,439,0,0,120,0,-1,440,0,-2,441,0,-3,442,0,-4,443,0,0,121,0,-1,444,0,-2,445,0,-3,446,0,-4,447,0,0,122,0,-1,448,0,-2,449,0,-3,450,0,-4,451,0,0,123,0,-1,452,0,-2,453,0,-3,454,0,-4,455,0,0,124,0,-1,456,0,-2,457,0,-3,458,0,-4,459,0,0,125,0,-1,460,0,-2,461,0,-3,462,0,-4,463,0,0,126,0,-1,464,0,-2,465,0,-3,466,0,-4,467,0,0,127,0,-1,468,0,-2,469,0,-3,470,0,-4,471,0,0,128,0,-1,472,0,-2,473,0,-3,474,0,-4,475,0,0,129,0,-1,476,0,-2,477,0,-3,478,0,-4,479,0,0,130,0,-1,480,0,-2,481,0,-3,482,0,-4,483,0,0,131,0,-1,484,0,-2,485,0,-3,486,0,-4,487,0,0,132,0,0,132,0,-1,488,0,-2,489,0,-3,490,0,0,133,0,3,133,0,0,133,0,-1,509,0,0,134,0,0,134,0,3,134,0,0,134,0,-1,519,0,0,135,0,0,135,0,3,135,0,0,135,0,-1,523,0,0,136,0,0,136,0,3,136,0,0,136,0,-1,524,0,0,137,0,3,137,0,0,137,0,-1,525,0,0,138,0,-1,527,0,-2,528,0,-3,529,0,-4,530,0,0,139,0,-1,531,0,-2,532,0,-3,533,0,-4,534,0,0,140,0,-1,535,0,-2,536,0,-3,537,0,-4,538,0,0,141,0,-1,539,0,-2,540,0,-3,541,0,-4,542,0,0,142,0,0,142,0,3,142,0,0,142,0,-1,550,0,0,143,0,0,143,0,3,143,0,0,143,0,-1,551,0,0,144,0,0,144,0,-1,248,0,-2,249,0,0,145,0,0,145,0,-1,250,0,-2,251,0,0,146,0,0,146,0,0,146,0,-1,252,0,0,147,0,0,147,0,0,147,0,-1,261,0,0,148,0,0,148,0,-1,149,0,0,149,0,0,149,0,3,149,0,0,149,0,0,150,0,0,150,0,9,176,0,0,150,0,-1,175,0,0,151,0,0,151,0,-1,152,0,0,152,0,0,152,0,3,152,0,0,152,0,0,153,0,0,153,0,3,153,0,0,153,0,0,154,0,0,154,0,3,154,0,0,154,0,0,155,0,0,155,0,3,155,0,0,155,0,0,156,0,0,156,0,-1,337,0,-2,338,0,0,157,0,0,157,0,3,157,0,0,157,0,0,158,0,0,158,0,-1,159,0,0,159,0,0,159,0,3,159,0,0,159,0,0,160,0,0,160,0,9,186,0,0,160,0,-1,185,0,0,161,0,0,161,0,3,161,0,0,161,0,0,162,0,0,162,0,3,162,0,0,162,0,0,163,0,0,163,0,3,163,0,0,163,0,0,164,0,0,164,0,3,164,0,0,164,0,0,165,0,-1,491,0,-2,209,0,-3,492,0,0,166,0,0,166,0,3,166,0,0,166,0,0,167,0,0,167,0,3,167,0,0,167,0,0,168,0,0,168,0,-1,507,0,-2,169,0,0,169,0,0,169,0,9,508,0,0,169,0,-1,217,0,0,170,0,0,170,0,3,170,0,0,170,0,0,171,0,0,171,0,3,171,0,0,171,0,0,172,0,0,172,0,3,172,0,0,172,0,0,173,0,0,173,0,3,173,0,0,173,0,0,174,0,0,174,0,-1,556,0,-2,557,0,0,175,0,0,175,0,-1,176,0,0,176,0,0,176,0,0,177,0,0,178,0,0,178,0,0,178,0,0,179,0,0,179,0,0,179,0,0,180,0,0,180,0,0,180,0,0,181,0,0,181,0,0,181,0,0,182,0,0,183,0,0,184,0,0,185,0,0,185,0,-1,186,0,0,186,0,0,186,0,0,187,0,0,188,0,0,188,0,-1,349,0,0,189,0,0,189,0,-1,350,0,0,190,0,0,190,0,-1,411,0,0,191,0,0,191,0,-1,412,0,0,192,0,0,192,0,-1,413,0,0,193,0,0,193,0,-1,414,0,0,194,0,0,194,0,-1,415,0,0,195,0,0,195,0,-1,416,0,0,196,0,0,196,0,-1,417,0,0,197,0,0,197,0,-1,418,0,0,198,0,0,198,0,-1,419,0,0,199,0,0,199,0,-1,420,0,0,200,0,0,200,0,-1,421,0,0,201,0,0,201,0,-1,422,0,0,202,0,0,202,0,-1,423,0,0,203,0,0,204,0,0,204,0,-1,425,0,0,205,0,0,205,0,-1,426,0,0,206,0,0,206,0,-1,427,0,0,207,0,0,208,0,0,209,0,0,209,0,0,209,0,0,210,0,0,211,0,0,211,0,-1,494,0,0,212,0,0,212,0,-1,496,0,0,213,0,0,213,0,-1,498,0,0,214,0,0,214,0,-1,500,0,0,215,0,0,215,0,-1,502,0,0,216,0,0,217,0,0,217,0,-1,508,0,0,218,0,0,219,0,0,219,0,-1,510,0,0,220,0,-1,221,0,-2,222,0,0,221,0,0,221,0,-1,511,0,0,222,0,0,222,0,-1,512,0,0,223,0,-1,224,0,-2,225,0,0,224,0,0,224,0,-1,513,0,0,225,0,0,225,0,-1,514,0,0,226,0,-1,227,0,-2,228,0,0,227,0,0,227,0,-1,515,0,0,228,0,0,228,0,-1,516,0,0,229,0,-1,230,0,-2,231,0,0,230,0,0,230,0,-1,517,0,0,231,0,0,231,0,-1,518,0,0,232,0,0,233,0,0,233,0,-1,521,0,0,234,0,0,235,0,0,235,0,-1,526,0,0,236,0,0,236,0,-1,543,0,0,237,0,0,237,0,-1,544,0,0,238,0,0,238,0,-1,545,0,0,239,0,0,239,0,-1,546,0,0,240,0,0,240,0,-1,547,0,0,241,0,0,241,0,-1,548,0,0,242,0,0,242,0,-1,549,0,0,243,0,0,244,0,0,244,0,-1,553,0,-1,559,0,0,245,0,0,246,0,0,246,0,-1,566,0,0,247,0,0,248,0,0,248,0,0,249,0,0,249,0,0,250,0,0,250,0,0,251,0,0,251,0,0,252,0,0,252,0,0,253,0,0,253,0,0,254,0,0,254,0,0,255,0,0,255,0,0,256,0,0,256,0,0,257,0,0,257,0,0,258,0,0,258,0,0,259,0,0,259,0,0,260,0,0,260,0,0,261,0,0,261,0,0,262,0,0,262,0,0,263,0,0,263,0,0,264,0,0,264,0,0,265,0,0,265,0,0,266,0,0,266,0,0,267,0,0,267,0,0,268,0,0,268,0,0,269,0,0,269,0,0,270,0,0,270,0,0,271,0,0,271,0,0,272,0,0,272,0,0,273,0,0,273,0,0,274,0,0,274,0,0,275,0,0,275,0,0,276,0,0,276,0,0,277,0,0,277,0,0,278,0,0,278,0,0,279,0,0,279,0,0,280,0,0,280,0,0,281,0,0,281,0,0,282,0,0,282,0,0,283,0,0,283,0,0,284,0,0,284,0,0,285,0,0,285,0,0,286,0,0,286,0,0,287,0,0,287,0,0,288,0,0,288,0,0,289,0,0,289,0,0,290,0,0,290,0,0,291,0,0,291,0,0,292,0,0,292,0,0,293,0,0,293,0,0,294,0,0,294,0,0,295,0,0,295,0,0,296,0,0,296,0,0,297,0,0,297,0,0,298,0,-2,567,0,0,299,0,-2,568,0,0,300,0,-2,569,0,0,301,0,-2,570,0,0,302,0,0,302,0,0,303,0,0,303,0,0,304,0,0,304,0,0,305,0,0,305,0,0,306,0,0,306,0,0,307,0,0,307,0,0,308,0,0,308,0,0,309,0,0,309,0,0,310,0,0,310,0,0,311,0,0,311,0,0,312,0,0,312,0,0,313,0,0,313,0,0,314,0,0,314,0,0,315,0,0,315,0,0,316,0,0,316,0,0,317,0,0,317,0,0,318,0,0,318,0,0,319,0,0,319,0,0,320,0,0,320,0,0,321,0,0,321,0,0,322,0,0,322,0,0,323,0,0,323,0,0,324,0,0,324,0,0,325,0,0,325,0,0,326,0,0,326,0,0,327,0,-2,571,0,0,328,0,-2,572,0,0,329,0,-2,573,0,0,330,0,0,330,0,0,331,0,0,331,0,0,332,0,0,332,0,0,333,0,0,333,0,0,334,0,0,334,0,0,335,0,0,335,0,0,336,0,0,336,0,0,337,0,0,337,0,0,338,0,0,338,0,0,339,0,0,339,0,0,340,0,0,340,0,0,341,0,0,341,0,0,342,0,0,342,0,0,343,0,0,343,0,0,344,0,0,344,0,0,345,0,0,345,0,0,346,0,0,346,0,0,347,0,0,347,0,0,348,0,0,348,0,0,349,0,0,349,0,0,350,0,0,350,0,0,351,0,0,351,0,0,352,0,0,352,0,0,353,0,0,353,0,0,354,0,0,354,0,0,355,0,0,355,0,0,356,0,0,356,0,0,357,0,0,357,0,0,358,0,0,358,0,0,359,0,0,359,0,0,360,0,0,360,0,0,361,0,0,361,0,0,362,0,0,362,0,0,363,0,0,363,0,0,364,0,0,364,0,0,365,0,0,365,0,0,366,0,0,366,0,0,367,0,0,367,0,0,368,0,0,368,0,0,369,0,0,369,0,0,370,0,0,370,0,0,371,0,0,371,0,0,372,0,0,372,0,0,373,0,0,373,0,0,374,0,0,374,0,0,375,0,0,375,0,0,376,0,0,376,0,0,377,0,0,377,0,0,378,0,0,378,0,0,379,0,0,379,0,0,380,0,0,380,0,0,381,0,0,381,0,0,382,0,0,382,0,0,383,0,0,383,0,0,384,0,0,384,0,0,385,0,0,385,0,0,386,0,0,386,0,0,387,0,0,387,0,0,388,0,0,388,0,0,389,0,0,389,0,0,390,0,0,390,0,0,391,0,0,391,0,0,392,0,0,392,0,0,393,0,0,393,0,0,394,0,0,394,0,0,395,0,0,395,0,0,396,0,0,396,0,0,397,0,0,397,0,0,398,0,0,398,0,0,399,0,0,399,0,0,400,0,0,400,0,0,401,0,0,401,0,0,402,0,0,402,0,0,403,0,0,403,0,0,404,0,0,404,0,0,405,0,0,405,0,0,406,0,0,406,0,0,407,0,0,407,0,0,408,0,0,408,0,0,409,0,0,409,0,0,410,0,0,410,0,0,411,0,0,411,0,0,412,0,0,412,0,0,413,0,0,413,0,0,414,0,0,414,0,0,415,0,0,415,0,0,416,0,0,416,0,0,417,0,0,417,0,0,418,0,0,418,0,0,419,0,0,419,0,0,420,0,0,420,0,0,421,0,0,421,0,0,422,0,0,422,0,0,423,0,0,423,0,0,424,0,0,424,0,0,425,0,0,425,0,0,426,0,0,426,0,0,427,0,0,427,0,0,428,0,0,428,0,0,429,0,0,429,0,0,430,0,0,430,0,0,431,0,0,431,0,0,432,0,0,432,0,0,433,0,0,433,0,0,434,0,0,434,0,0,435,0,0,435,0,0,436,0,0,436,0,0,437,0,0,437,0,0,438,0,0,438,0,0,439,0,0,439,0,0,440,0,0,440,0,0,441,0,0,441,0,0,442,0,0,442,0,0,443,0,0,443,0,0,444,0,0,444,0,0,445,0,0,445,0,0,446,0,0,446,0,0,447,0,0,447,0,0,448,0,0,448,0,0,449,0,0,449,0,0,450,0,0,450,0,0,451,0,0,451,0,0,452,0,0,452,0,0,453,0,0,453,0,0,454,0,0,454,0,0,455,0,0,455,0,0,456,0,0,456,0,0,457,0,0,457,0,0,458,0,0,458,0,0,459,0,0,459,0,0,460,0,0,460,0,0,461,0,0,461,0,0,462,0,0,462,0,0,463,0,0,463,0,0,464,0,0,464,0,0,465,0,0,465,0,0,466,0,0,466,0,0,467,0,0,467,0,0,468,0,0,468,0,0,469,0,0,469,0,0,470,0,0,470,0,0,471,0,0,471,0,0,472,0,0,472,0,0,473,0,0,473,0,0,474,0,0,474,0,0,475,0,0,475,0,0,476,0,0,476,0,0,477,0,0,477,0,0,478,0,0,478,0,0,479,0,0,479,0,0,480,0,0,480,0,0,481,0,0,481,0,0,482,0,0,482,0,0,483,0,0,483,0,0,484,0,0,484,0,0,485,0,0,485,0,0,486,0,0,486,0,0,487,0,0,487,0,0,488,0,0,488,0,0,489,0,0,489,0,0,490,0,0,490,0,0,491,0,0,491,0,0,492,0,0,492,0,0,493,0,0,494,0,0,494,0,0,495,0,0,496,0,0,496,0,0,497,0,0,498,0,0,498,0,0,499,0,0,500,0,0,500,0,0,501,0,0,502,0,0,502,0,0,503,0,0,503,0,0,504,0,0,504,0,0,505,0,0,505,0,0,506,0,0,506,0,0,507,0,0,507,0,0,508,0,0,509,0,0,509,0,0,510,0,0,510,0,0,511,0,0,511,0,0,512,0,0,512,0,0,513,0,0,513,0,0,514,0,0,514,0,0,515,0,0,515,0,0,516,0,0,516,0,0,517,0,0,517,0,0,518,0,0,518,0,0,519,0,0,519,0,0,520,0,0,520,0,0,521,0,0,521,0,0,522,0,0,522,0,0,523,0,0,523,0,0,524,0,0,524,0,0,525,0,0,525,0,0,526,0,0,526,0,0,527,0,0,527,0,0,528,0,0,528,0,0,529,0,0,529,0,0,530,0,0,530,0,0,531,0,0,531,0,0,532,0,0,532,0,0,533,0,0,533,0,0,534,0,0,534,0,0,535,0,0,535,0,0,536,0,0,536,0,0,537,0,0,537,0,0,538,0,0,538,0,0,539,0,0,539,0,0,540,0,0,540,0,0,541,0,0,541,0,0,542,0,0,542,0,0,543,0,0,543,0,0,544,0,0,544,0,0,545,0,0,545,0,0,546,0,0,546,0,0,547,0,0,547,0,0,548,0,0,548,0,0,549,0,0,549,0,0,550,0,0,550,0,0,551,0,0,551,0,0,552,0,0,552,0,0,553,0,0,553,0,0,554,0,0,554,0,0,555,0,0,555,0,0,556,0,0,556,0,0,557,0,0,557,0,0,558,0,0,560,0,0,561,0,0,562,0,0,563,0,0,564,0,0,565,0,18,8,1,5,8,2,5,151,3,5,100,4,5,116,6,5,11,7,5,9,9,5,177,10,5,137,11,5,182,12,5,184,13,5,133,15,5,148,19,5,210,20,5,232,21,5,243,99,5,158,100,5,187,116,5,203,132,5,207,133,5,218,137,5,234,153,5,177,154,5,182,155,5,183,156,5,183,157,5,184,161,5,187,162,5,203,163,5,207,164,5,208,165,5,208,166,5,210,167,5,216,168,5,216,170,5,218,171,5,232,172,5,234,173,5,243,211,5,493,212,5,495,213,5,497,214,5,499,215,5,501,1877],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,567,568,569,570,571,572,573],[19,-1,10,-1,10,20,-1,10,1,2,1,2,1,2,1,4,2,1,4,2,1,4,2,1,4,2,1,4,2,1,4,2,1,4,2,1,4,2,1,1,4,1,1,2,1,4,2,1,4,1,4,1,1,2,1,4,2,1,4,2,1,4,2,1,4,2,1,4,2,1,4,2,1,4,2,1,4,2,1,4,2,1,4,2,1,4,2,1,4,2,1,4,2,1,4,2,1,4,2,1,4,2,1,4,2,1,4,2,1,4,2,1,4,2,1,4,2,1,4,2,1,4,2,1,4,2,1,4,2,1,4,2,1,4,2,1,4,2,1,4,2,1,4,1,4,1,4,1,2,1,4,2,1,4,1,4,1,4,1,4,1,4,2,2,2,2,2,1,4,1,4,1,4,1,4,2,1,4,1,4,1,4,1,4,1,4,1,2,2,1,4,13,14,15,2,1,4,2,1,2,2,1,4,13,14,15,2,1,4,2,1,4,1,2,1,4,11,1,11,1,11,1,1,4,1,4,1,4,2,2,2,2,1,4,1,4,2,1,4,1,4,1,4,1,2,6,1,1,4,1,2,1,4,2,1,4,1,4,1,4,1,4,2,1,4,1,4,1,4,1,1,1,4,1,4,1,2,2,1,2,1,1,1,2,2,1,1,2,2,1,1,2,2,1,1,2,2,1,1,2,2,1,1,2,2,1,1,2,2,1,1,2,2,1,1,2,2,1,1,2,2,1,1,2,2,1,1,2,2,1,1,2,2,1,1,2,2,1,1,2,2,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,1,4,1,2,1,1,1,2,1,1,1,2,2,1,1,2,2,1,1,2,2,1,1,2,2,1,1,2,2,1,1,2,2,1,1,2,2,1,1,2,2,1,1,2,2,1,1,2,2,1,1,2,2,1,1,2,2,1,1,2,2,1,1,2,2,1,1,2,2,1,4,1,1,2,6,1,1,4,1,4,1,1,1,4,2,6,1,2,6,1,2,6,1,2,6,1,2,6,1,2,2,1,4,2,1,4,1,1,1,1,1,1,4,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,4,1,4,1,1,1,2,6,2,1,4,2,1,4,1,1,4,1,2,1,1,1,2,2,1,1,2,2,1,1,2,2,1,1,2,2,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,4,2,1,4,1,4,1,2,1,1,2,1,2,1,1,1,1,1,1,1],[30,31,32,33,13,34,35,13,14,0,14,0,11,0,11,11,0,4,4,0,4,4,0,4,4,0,4,4,0,4,4,0,4,4,0,4,4,0,36,3,3,3,15,0,1,1,0,1,1,4,4,3,8,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,3,3,3,3,8,0,1,1,0,1,1,7,7,7,7,7,7,7,7,0,0,0,0,0,6,6,6,6,6,6,6,6,0,6,6,6,6,6,6,6,6,16,16,3,0,0,1,1,17,18,19,0,1,1,0,3,0,0,1,1,17,18,19,0,1,1,0,3,3,8,0,1,1,12,7,12,7,12,7,7,7,7,7,7,7,0,0,0,0,6,6,6,6,0,1,1,3,3,3,3,8,0,0,3,3,3,8,0,1,1,0,6,6,6,6,6,6,6,6,0,1,1,3,3,3,3,3,4,4,4,3,3,4,0,0,10,0,4,5,2,0,0,5,2,0,0,5,2,0,0,5,2,0,0,5,2,0,0,5,2,0,0,5,2,0,0,5,2,0,0,5,2,0,0,5,2,0,0,5,2,0,0,5,2,0,0,5,2,0,0,5,2,0,0,5,2,0,0,0,5,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,3,3,4,0,10,20,4,0,4,5,2,0,0,5,2,0,0,5,2,0,0,5,2,0,0,5,2,0,0,5,2,0,0,5,2,0,0,5,2,0,0,5,2,0,0,5,2,0,0,5,2,0,0,5,2,0,0,5,2,0,0,5,2,0,0,5,2,0,0,3,3,8,20,0,0,3,3,3,4,21,21,8,3,3,0,0,4,0,0,4,0,0,4,0,0,4,0,0,4,0,0,1,1,0,1,1,4,3,4,15,3,3,3,4,0,10,0,5,0,2,0,5,0,2,0,5,0,2,0,5,0,2,0,4,4,3,3,8,8,4,0,0,0,1,1,0,1,1,3,3,3,4,0,10,5,2,0,0,5,2,0,0,5,2,0,0,5,2,0,0,0,5,0,2,0,2,0,2,0,2,0,2,0,2,0,4,4,0,4,4,3,3,4,0,10,2,0,37,0,9,9,9,9,9,9,9]],[[[79,"select_pos_material",[{}],[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{}]]],0,0,[0],[12],[38]],[[{"name":"default_radio_button_off","rect":{"x":3,"y":3,"width":26,"height":26},"offset":{"x":0,"y":0},"originalSize":{"width":32,"height":32},"rotated":false,"capInsets":[13,13,13,13],"vertices":{"rawPosition":[-13,-13,0,13,-13,0,-13,13,0,13,13,0],"indexes":[0,1,2,2,1,3],"uv":[3,29,29,29,3,3,29,3],"nuv":[0.09375,0.09375,0.90625,0.09375,0.09375,0.90625,0.90625,0.90625],"minPos":{"x":-13,"y":-13,"z":0},"maxPos":{"x":13,"y":13,"z":0}},"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[5],0,[0],[7],[39]]]]
